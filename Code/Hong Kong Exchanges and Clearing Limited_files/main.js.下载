(function(module, $) {
    var DesktopAndTabletBP = 1023;
    var TabletAndMobileBP = 702;
    var Sitecore = window.Sitecore;

    module.utils = {
        isTablet: function isTablet() {
            return window.innerWidth > TabletAndMobileBP && window.innerWidth <= DesktopAndTabletBP;
        },
        isDesktop: function isDesktop() {
            return window.innerWidth > DesktopAndTabletBP;
        },
        isPreviewMode: function isPreviewMode() {
            return (Sitecore && Sitecore.PageModes && !Sitecore.PageModes.PageEditor);
        },
        isEditorMode: function isEditorMode() {
            return (Sitecore && Sitecore.PageModes && Sitecore.PageModes.PageEditor != null);
        },
        isPc: function isPc() {
            var sUserAgent = navigator.userAgent.toLowerCase();
            var bIsIpad = sUserAgent.match(/ipad/i) == "ipad";
            var bIsIphoneOs = sUserAgent.match(/iphone os/i) == "iphone os";
            var bIsMidp = sUserAgent.match(/midp/i) == "midp";
            var bIsUc7 = sUserAgent.match(/rv:1.2.3.4/i) == "rv:1.2.3.4";
            var bIsUc = sUserAgent.match(/ucweb/i) == "ucweb";
            var bIsAndroid = sUserAgent.match(/android/i) == "android";
            var bIsCE = sUserAgent.match(/windows ce/i) == "windows ce";
            var bIsWM = sUserAgent.match(/windows mobile/i) == "windows mobile";
            if (bIsIpad || bIsIphoneOs || bIsMidp || bIsUc7 || bIsUc || bIsAndroid || bIsCE || bIsWM) {
                return false;
            } else {
                return true;
            }
        },

        isAndroidMobile: function isAndroidMobile() {
            var isandroid = navigator.userAgent.indexOf('Android') > 0 || navigator.userAgent.indexOf('Adr') > 0;
            var windowWidth = $(window).width();
            if (isandroid && windowWidth < 767) {
                return true;
            }
            return false;
        },

        addEllipse: function addEllipse($listItems, lineNum) {
            var isOversized = false;
            if ($listItems.length < 0) {
                return;
            }
            this.setEllipseElement($listItems);
            $listItems.parent().css("height", "auto");
            $listItems.each(function () {                
                var windowWidth = $(window).width();
                var $item = $(this);
                var height = $item.height();
                var outerHeight = $item.outerHeight();
                var outerSpace = 0;
                var verticalMargin = parseInt($item.css('margin-top'));
                var lineHeight = parseInt($item.css('line-height'));
                var topPosition = lineHeight * (lineNum - 1) + "px";
                var right = "right"; // Add by Henry, for Homepage LISTED COMPANY INFORMATION OVERVIEW
                var relative = "relative"; // Add by Henry, for Homepage LISTED COMPANY INFORMATION OVERVIEW
                outerSpace = outerHeight - height + verticalMargin;
                if (height > lineHeight * lineNum + 4) {
                    $item.find("span").css({
                        "display": "block",
                        "top": topPosition,
                        "height": lineHeight
                    });
                    if ($item.parents('.LLCI').length) {
                        $item.find("span").css({
                            "display": "block",
                            "top": topPosition,
                            "height": lineHeight,
                            "float": right, // Add by Henry, for Homepage LISTED COMPANY INFORMATION OVERVIEW
                            "position": relative, // Add by Henry, for Homepage LISTED COMPANY INFORMATION OVERVIEW
                            "right": 0, // Add by Henry, for Homepage LISTED COMPANY INFORMATION OVERVIEW
                            "text-align": right // Add by Henry, for Homepage LISTED COMPANY INFORMATION OVERVIEW
                        });
                        if (height > 34 && windowWidth < 767) { // Add by Henry, for Homepage LISTED COMPANY INFORMATION OVERVIEW
                            topPosition = 34 + 'px'; // Add by Henry, for Homepage LISTED COMPANY INFORMATION OVERVIEW
                            $item.addClass('more_than_line'); // Add by Henry, for Homepage LISTED COMPANY INFORMATION OVERVIEW
                            $item.find("span").css({ // Add by Henry, for Homepage LISTED COMPANY INFORMATION OVERVIEW
                                "height": lineHeight + 20 // Add by Henry, for Homepage LISTED COMPANY INFORMATION OVERVIEW
                            }); // Add by Henry, for Homepage LISTED COMPANY INFORMATION OVERVIEW
                        }
                    }
                    $item.parent().css("height", lineHeight * lineNum + outerSpace + "px");
                    if ($item.hasClass("circulars-for-pdf")) {
                        $item.removeClass("circulars-for-pdf");
                        $item.find("span").addClass("circular-ellipse");
                    }
                    isOversized = true;
                } else {
                    $item.find("span").css("display", "none");
                    if ($item.find("span").hasClass("circular-ellipse")) {
                        $item.addClass("circulars-for-pdf");
                        $item.find("span").removeClass("circular-ellipse");
                    }
                    isOversized = false;
                }
            });
        },

        setEllipseElement: function setEllipseElement($listItems) {

            if ($listItems.parent().hasClass("add-ellipse")) {
                return;
            }
            $listItems.wrap("<div class='add-ellipse'></div>");
            if ($listItems.find('.attachment_filesize')) {
                $listItems.find('.attachment_filesize').after("<span>...</span>");
            }
            else {
                $listItems.prepend("<span>...</span>");
            }
        },

        getOs: function getOs() {
            var OsObject = "";
            if (navigator.userAgent.indexOf("MSIE") > 0) {
                return "MSIE";
            }
            if (navigator.userAgent.indexOf("Firefox") > 0) {
                return "Firefox";
            }
            if (navigator.userAgent.indexOf("Safari") > 0) {
                return "Safari";
            }
            if (navigator.userAgent.indexOf("Camino") > 0) {
                return "Camino";
            }
            if (navigator.userAgent.indexOf("Gecko/") > 0) {
                return "Gecko";
            }
        },

        setEqualHeights: function setEqualHeights(cName) {
            var largest = 0;
            $(cName).each(function(i) {
                var findHeight = $(this).innerHeight();
                if (findHeight >= largest) {
                    largest = findHeight;
                }
            });
            $(cName).css({ "height": largest + "px" });
        },

        setSliderNav: function setSliderNav() {
            if ($(".slider__caption") && window.innerWidth <= 767) {
                $('.slider__slides_tabs').css('bottom', $(".slider__slides1_on .slider__caption").height() + 'px');
            } else {
                $('.slider__slides_tabs').removeAttr('style');
            }
        }
    };

    module.Events = {
        el: document.createElement('hkex-events'),
        viewport: {},
        listeners: {},
        events: {},
        idSeed: 1,
        on: function(eventName, fn) {
            var eventId = eventName + (this.idSeed++);
            var e = {
                evType: eventName,
                fnc: fn
            };
            e.fnc = function(event, data) {
                return fn.call(null, event, data);
            };
            this.listeners[eventId] = e;
            $(this.el).on(eventName, e.fnc);
            return eventId;
        },
        off: function(eventId) {
            var e = this.listeners[eventId];
            if (e) {
                $(this.el).off(e.evType, e.fnc);
                delete this.listeners[eventId];
            }
        },
        trigger: function(eventName, data) {
            var event = $.Event(eventName);
            $(this.el).trigger(event, data);
        },
        init: function() {
            this.updateViewport();
            $(window).on('resize.hkexEvents', $.proxy(this.onWindowResize, this));
            $(window).on('scroll.hkexEvents', $.proxy(this.onWindowScroll, this))
        },
        triggerViewportResize: function(ev, data) {
            this.trigger('viewportChange', data);
        },
        onWindowResize: function(ev) {
            var w = $(window).outerWidth();
            var oldWidth = this.viewport.w;
            if (w != oldWidth) {
                this.triggerViewportResize(ev, { newWidth: w, oldWidth: oldWidth });
            }
            this.updateViewport();
        },
        onWindowScroll: function(ev) {
            this.trigger('viewportScroll');
        },
        updateViewport: function() {
            this.viewport.w = $(window).outerWidth();
            this.viewport.h = $(window).height();
        }
    };
    module.Events.init();

    module.tableUtils = {
        enableSorting: function enableSorting() {
            var _default = {
                sortMultiSortKey: null,
                onRenderHeader: function (index) {
                    var _this = this;
                    if (_this.hasClass('headline-toggle')) {
                        _this.closest('.LLCI-table-container').find('.hideHeadline').first().clone(true).appendTo(this);
                    }
                }
            } || this.data();
            $(".table-sort").each(function () {
                var d = $(this).data();
                var option = $.extend({}, _default);
                if (d.tableHeadline) {
                    if (d.headlineTarget) {
                        var $hideline = $(d.headlineTarget);
                        option.onRenderHeader = function (index) {
                            var _this = this;
                            if (_this.hasClass('headline-toggle')) {
                                $hideline.first().clone(true).removeAttr("id").appendTo(this);
                            }
                        };
                    }
                }
                $(this).tablesorter(option);
            });
        },
        enableTableScrolling: function enableTableScrolling() {
            $('.table-scroll').each(function () {
                var o = $.extend({}, $(this).data() || {});
                $(this).scrollableTable(o);
            });
        },
        enableTableMobileList: function enableTableMobileList() {
            $('.table-mobile-list-container .table-mobile-list').MobileTableList();
        }
    };

    // A helper function to make a call-once-only delayed call
    $.fn.delaycall = function(cid, fn, delaytime) {
        $(this).cleardelaycall(cid).each(function() {
            $(this).data("dct-" + cid, setTimeout(fn, delaytime));
        });
        return $(this);
    };

    // A helper function to clear a call-once-only delayed call
    $.fn.cleardelaycall = function(cid) {
        $(this).each(function() {
            var $this = $(this);
            var delaycalltimer = $this.data("dct-" + cid);
            if (delaycalltimer) {
                clearTimeout(delaycalltimer);
                $this.data("dct-" + cid, null);
            }
        });
        return $(this);
    };

    $.extend({
        keyboardEnterEvent: function keyboardEnterEvent(e) {
            if (e.keyCode !== 13) {
                return;
            }
            var $target = $(e.target);
            $target.trigger('click');
        }
    });

    $.fn.CleanWhitespace = function () {
        return this.each(function () {
            $(this).contents()
                .filter(function () {
                    if (this.nodeType == 3) {
                        if (this.nextSibling && this.nextSibling.nodeType != 3) {
                            this.textContent = $.trim(this.textContent);
                            return !/\S/.test(this.nodeValue);
                        }
                        return false;
                    } else {
                        $(this).CleanWhitespace();
                        return false;
                    }
                }).remove();
        });
    };
})(window.hkexApp = window.hkexApp || {}, jQuery);

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

(function($) {
    function migrate() {
        // Migrate Carousel
        $('[data-ride="carousel"]').each(function() {
            if ($(this).is('[data-pause="null"]')) {
                $(this).attr('data-pause', false);
            }
            $(this).find('.carousel-inner > .item:not(.carousel-item)').addClass('carousel-item');
        });

        // Migrate Collapse
        $('[data-toggle="collapse"][data-parent]').each(function() {
            var target = Collapse._getTargetFromElement(this);
            if (target) {
                var parent = $(this).attr('data-parent');
                $(target).attr('data-parent', parent);
                $(this).removeAttr('data-parent');
            }
        });

        $('.collapse.in').addClass('show').removeClass('in');

        // Migrate Navs
        $('.nav.nav-tabs').each(function() {
            var $this = $(this);
            $this.children('li')
                .addClass('nav-item')
                .children('a.tab')
                .addClass('nav-link');
            $this.children('li.active').children('.nav-link').addClass('active');
        });

        $('a[data-toggle="tab"]')
            .on('shown.bs.tab', function(e) {
                if (e.target) {
                    $(e.target).closest('.nav-item').addClass('active');
                }
            })
            .on('hidden.bs.tab', function(e) {
                if (e.target) {
                    $(e.target).closest('.nav-item').removeClass('active');
                }
            });
    }

    function detectBootstrapVersion() {
        if ($.isFunction($.fn.collapse) && $.isFunction($.fn.collapse.Constructor)) {
            if ($.fn.collapse.Constructor.VERSION) {
                return $.fn.collapse.Constructor.VERSION;
            }
        }
        return "";
    }

    var bootstrapVersion = detectBootstrapVersion();
    if (bootstrapVersion && bootstrapVersion.indexOf("4.") === 0) {
        migrate();
    }
})(jQuery);

(function ($) {
    "use strict";

    $.fn.uiPosition = function (action, options) {
        return this.each(function (i, e) {
            if (action == "open") {
                this.uiOptions = options;
                var offset = $(options.orgin).offset();
                var offsetHeight = $(options.orgin).outerHeight();
                var parant = $(this).parent('.ui-popup-container');
                var tobar = $('.topbar-sticky').length;
                var offsetY = offset.top + offsetHeight + options.offsetY;
                if (tobar == 1) {
                    var tobarHeight = $('.topbar-sticky').height();
                    if (!isNaN(tobarHeight)) {
                        offsetY -= tobarHeight;
                    }
                }

                parant.removeClass('ui-popup-hidden').addClass('ui-popup-active').css("top", offsetY).css("left", offset.left);

            } else if (action == "close") {
                var parant = $(this).parent('.ui-popup-container').each(function () {
                    this.style.top = '';
                    this.style.left = '';
                });
                parant.addClass('ui-popup-hidden').removeClass('ui-popup-active');
            } else if (action == "update") {
                var parant = $(this).parent('.ui-popup-container');
                if (parant.hasClass("ui-popup-active")) {
                    var offset = $(this.uiOptions.orgin).offset();
                    var offsetHeight = $(this.uiOptions.orgin).outerHeight();
                    var tobar = $('.topbar-sticky').length;
                    var tobarHeight = $('.topbar-sticky').height();
                    parant.css("top", offset.top + offsetHeight + this.uiOptions.offsetY).css("left", offset.left);

                    if (tobar == 1) {
                        parant.css("top", offset.top + offsetHeight + this.uiOptions.offsetY - tobarHeight).css("left", offset.left);
                    }
                }
            }
        });
    };

    var initialized = false;

    $.fn.extend({
        mobile508datepicker: function (options) {
            if (this.length === 0) return;
            var currentDate = new Date(),

                _defaults = {
                    LANG: (typeof window.DatePickerLanguage == 'string' ? window.DatePickerLanguage : 'EN'),
                    MIN: new Date("06/25/2007"),
                    //new Date(new Date().setFullYear(currentDate.getFullYear() - 10)),  // years ago
                    MAX: new Date(new Date().setFullYear(currentDate.getFullYear() + 10)) // years ahead
                },
                defaults = null,
                /*jshint multistr: true */
                $el = $('<section class="datetime-picker" id="date-picker" data-role="popup" data-dismissible="false" data-overlay-theme="a"> \
					<a href="#" data-rel="back" data-role="button" data-theme="a" data-icon="delete" data-iconpos="notext" class="ui-btn-right cancel">Close</a> \
					<h1 class="ui-title" role="heading" aria-level="1" class="date">Today</h1> \
					<div class="columns"><div class="calendar"><li class="Year">Year</li><li class="Month">Month</li><li class="Day">Day</li></div><div class="clickup"><li class="ckup_year"></li><li class="ckup_month"></li><li class="ckup_day"></li></div><b class="year"><ul></ul></b><b class="month"><ul></ul></b><b class="day"><ul></ul></b></div><div class="clickdown"><li class="ckdown_year"></li><li class="ckdown_month"></li><li class="ckdown_day"></li></div>\
					<button id="set-btn" data-theme="b" class="ui-btn-hidden" data-disabled="false">SET</button> \
					</section>'),
                $el = ($('#date-picker').length > 0 ? $('#date-picker') : $el),
                //<button id="set-btn" data-theme="b" class="ui-btn-hidden" data-disabled="false">SET</button> 
                buildEl = function () {
                    $('body').append($el);
                    $el.trigger('create');
                    $el.popup();

                    return $el;
                },
                $textbox = null,
                parseDate = function (dateObj) {
                    var d = typeof dateObj === "number" ? new Date(dateObj) : dateObj;
                    return {
                        year: d.getFullYear(),
                        month: d.getMonth(),
                        day: d.getDate()
                    };
                },
                toggleButtons = function (y, m, $d, $m, className) {
                    var $disabled = $el.find('.' + className + ':disabled');

                    $disabled.prop('disabled', false);

                    if (y === dateChosen.year) {
                        if (m === dateChosen.month) {
                            $d.prop('disabled', true).addClass(className);
                        } else {
                            $disabled.prop('disabled', false);
                        }

                        $m.prop('disabled', true).addClass(className);
                    }
                },
                TODAY = parseDate(currentDate),
                dateChosen = null,
                DATE_MAX = null,
                DATE_MIN = null,
                //MONTHS = ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC']
                MONTHS = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'],
                WEEKDAYS = ["Su ", "Mo ", "Tu ", "We ", "Th ", "Fr ", "Sa "],
                HEADERS = {
                    EN: {
                        YEAR: "Year",
                        MONTH: "Month",
                        DAY: "Day"
                    },
                    ZH: {
                        YEAR: "年",
                        MONTH: "月",
                        DAY: "日"
                    }
                },
                //WEEKDAYS = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],

                buildDOM = function () {
                    var i, len, frag = [];

                    for (i = 1; i < 10; i++) {
                        frag.push('<li><button data-value="' + i + '">0' + i + '</button></li>');
                    }
                    for (i = 10; i <= 31; i++) {
                        frag.push('<li><button data-value="' + i + '">' + i + '</button></li>');
                    }
                    $day.html(frag.join(''));
                    $days = $day.children();
                    for (i = DATE_MAX.year, frag = [], len = DATE_MIN.year; i >= len; i--) {
                        frag.push('<li><button data-value="' + i + '">' + i + '</button></li>');
                    }
                    $year.html(frag.join(''));

                    for (i = 0, frag = [], len = MONTHS.length; i < len; i++) {
                        frag.push('<li><button data-value="' + i + '">' + MONTHS[i] + '</button></li>');
                    }
                    $month.html(frag.join(''));
                },
                checkMax = function () {
                    var d = DATE_MAX.day,
                        m = DATE_MAX.month,
                        y = DATE_MAX.year,
                        $m = $month
                        .find('button')
                        .slice(m + 1, 12),
                        $d = $day
                        .find('button')
                        .slice(d, 31);

                    toggleButtons(y, m, $d, $m, 'too-soon');
                },
                checkMin = function () {
                    var d = DATE_MIN.day,
                        m = DATE_MIN.month,
                        y = DATE_MIN.year,
                        $m = $month
                        .find('button')
                        .slice(0, m),
                        $d = $day
                        .find('button')
                        .slice(0, d - 1);
                    toggleButtons(y, m, $d, $m, 'too-late');
                },
                baseLine = function () {
                    $('.too-soon').prop('disabled', false).removeClass('too-soon');
                    $('.too-late').prop('disabled', false).removeClass('too-late');
                },
                daysInMonth = function () {
                    return new Date(dateChosen.year, 1 + dateChosen.month, 0).getDate();
                },
                upDate = function (typ, scroll) {
                    setDate();

                    typ && typ !== "day" && checkDays();

                    $('.selected').removeAttr('class');

                    var c = $year.find('[data-value="' + dateChosen.year + '"]')
                        .add($day.find('[data-value="' + dateChosen.day + '"]'))
                        .add($month.find('[data-value="' + dateChosen.month + '"]'))
                        .addClass('selected')
                    //.scrollTopMe();
                    ;
                    if (scroll) {
                        c.scrollTopMe();
                    }
                    updateHeading();

                    typ && typ !== "day" && baseLine(), checkMin(), checkMax();
                },
                updateHeading = function () {
                    var calcDate = setDate();
                    //$setBtn.prev('span').find('span').text('Set as: ' + [dateChosen.month+1, dateChosen.day, dateChosen.year].join('/'));
                    heading.innerHTML = calcDate.toDateString() === currentDate.toDateString() ?
                        "Today" : WEEKDAYS[calcDate.getDay()];
                },
                checkDays = function () {
                    var _daysInMonth = daysInMonth(),
                        len = $days.length,
                        i, calcDate;

                    $days.show();
                    for (i = 0; i < len; i++) {
                        calcDate = new Date([dateChosen['month'], i + 1, dateChosen['year']].join('/'));
                    }
                    for (i = _daysInMonth; i < len; i++) {
                        $days.eq(i).hide();
                    }

                    if (dateChosen['day'] > _daysInMonth) { dateChosen['day'] = ""; }
                },
                clicked = function ($this) {
                    var $li = $this.focus().parent(),
                        $ul = $li.parent(),
                        $focused = $(':focus'),
                        typ;

                    if (!$this.length || $this.prop('disabled')) {
                        $focused.focus();
                        return false;
                    }
                    typ = $ul.parent()[0].className;
                    dateChosen[typ] = $this.data('value');
                    upDate(typ);
                    return true;
                },
                setDate = function () {
                    var d = new Date(dateChosen.year, dateChosen.month, dateChosen.day),
                        MAX = defaults.MAX,
                        MIN = defaults.MIN;

                    if (MAX && d > MAX) {
                        $.extend(dateChosen, DATE_MAX);
                        return new Date(dateChosen.year, dateChosen.month, dateChosen.day);
                    }

                    if (MIN && d < MIN) {
                        $.extend(dateChosen, DATE_MIN);
                        return new Date(dateChosen.year, dateChosen.month, dateChosen.day);
                    }

                    return d;
                },
                scrolled = function ($ul) {
                    return;
                    var $lis = $ul.children(),
                        lineHeight = $lis.eq(0).height(),
                        top = $ul.position().top,
                        n = Math.round(-top / lineHeight),
                        $buttons = $ul.find('button'),
                        $button = $lis.eq(n).find('button'),
                        $prevSelected = $ul.find('.selected'),
                        prevSelectedIndex = $buttons.index($prevSelected),
                        typ = $ul.parent()[0].className;

                    if (!$button.prop('disabled')) {
                        if (prevSelectedIndex === n) {
                            return;
                        }
                        $ul.scrollTop((-n * lineHeight) + lineHeight);
                        dateChosen[typ] = $button.data()['value'];
                        upDate(typ);
                        return;
                    }

                    $button = $ul.find('button:enabled').eq(prevSelectedIndex > n ? 0 : -1);
                    n = $buttons.index($button);
                    $ul.scrollTop((-n * lineHeight) + lineHeight);
                    dateChosen[typ] = $button.data()['value'];
                    upDate(typ);
                    return;
                },
                alignValidDate = function () {
                    var $uls = $el.find('ul'),
                        $ul, $lis, lineHeight,
                        $button, $buttons, top, n,
                        orderSet = [1, 0, 2];

                    while (orderSet.length) {
                        $ul = $uls.eq(orderSet.pop());
                        $buttons = $ul.find('button');
                        $lis = $ul.children();
                        lineHeight = $lis.eq(0).height();
                        top = $ul.position().top;
                        n = Math.round(-top / lineHeight);
                        $button = $lis.eq(n).find('button');
                        n = $buttons.index($button);
                        $ul.scrollTop(-n * lineHeight);
                        //dateChosen[$ul.parent()[0].className] = $button.data()['value'];
                        dateChosen[$ul.parent()[0].className] = $button.data();
                        upDate();
                    }

                },
                destroy = function () {
                    dateChosen = null;
                    DATE_MAX = null;
                    DATE_MIN = null;
                },
                validateMinMax = function () {
                    if (defaults.MIN > defaults.MAX) {
                        var temp = defaults.MIN;

                        defaults.MIN = defaults.MAX;
                        defaults.MAX = temp;
                    }
                },
                close = function () {
                    destroy();
                    //$el.popup('close');
                    $el.uiPosition('close');
                    if (defaults.onClose) {
                        defaults.onClose();
                    }
                    $textbox.blur();
                },
                formatDateString = function (dateTime, options) {
                    var m = dateTime.getMonth() + 1,
                    d = dateTime.getDate(),
                    y = dateTime.getFullYear();
                    if (options["leading-zero"]) {
                        m = ("0" + m).substr(-2);
                        d = ("0" + d).substr(-2);
                    }
                    return [y, m, d].join('/');
                },
                init = function () {
                    var val = $textbox.val();
                    dateChosen = val.length ? parseDate(new Date(val)) : $.extend({}, TODAY);
                    validateMinMax();

                    defaults.MIN = defaults.afterToday ? new Date() : defaults.MIN;
                    defaults.MAX = defaults.beforeToday ? new Date() : defaults.MAX;

                    DATE_MIN = parseDate(defaults.MIN);
                    DATE_MAX = parseDate(defaults.MAX);

                    buildDOM();
                    upDate(null, true);

                    $el.find('.selected').eq(0).focus();
                    $el.uiPosition("open", {
                        orgin: $textbox.parent(),
                        offsetY: 10
                    });
                    // $el.popup();
                },
                $year = $el.find('.year ul'),
                $month = $el.find('.month ul'),
                $day = $el.find('.day ul'),
                $cancel = $el.find('.cancel'),
                $setBtn = $el.find('#set-btn'),
                $days = null,
                heading = $el.find('h1')[0];

            var isScrollToBottom = function (el) {
                return ($(el).scrollTop() + $(el).innerHeight()) >= el.scrollHeight;
            };

            $.extend(_defaults, options);

            if (_defaults.LANG && HEADERS[_defaults.LANG]) {
                var i18n = HEADERS[_defaults.LANG];
                if (i18n.YEAR) {
                    $el.find('.calendar li.Year').text(i18n.YEAR);
                }
                if (i18n.MONTH) {
                    $el.find('.calendar li.Month').text(i18n.MONTH);
                }
                if (i18n.DAY) {
                    $el.find('.calendar li.Day').text(i18n.DAY);
                }
            }

            if (!initialized) {
                $el.find('.month')
                            .on('scrollstop', function (e) {
                                scrolled($(e.currentTarget).find('ul'));
                                //e.stopPropagation();
                            });
                $el.find('.day')
                    .on('scrollstop', function (e) {
                        scrolled($(e.currentTarget).find('ul'));
                        //e.stopPropagation();
                    });
                $el.find('.year')
                    .on('scrollstop', function (e) {
                        scrolled($(e.currentTarget).find('ul'));
                        //e.stopPropagation();
                    });
                //handle button 
                $el.find('li.ckup_year')
                    .on("click", function (e) {
                        var scrollTop = $('.year').scrollTop();
                        scrollTop -= $('.year').height();
                        $('.year').animate({ scrollTop: scrollTop }, 500);
                        //e.stopPropagation();
                    });
                $el.find('.year').on("scroll", function (e) {
                    var yheight = $(this).scrollTop();
                    if (yheight == 0) {
                        //$('li.ckup_year').css("background", "none");
                        //$('li.ckup_year').css("cursor", "default");
                        $('li.ckup_year').addClass('ck-hidden');
                    } else {
                        //$('li.ckup_year').css("background", "url(images/arrow-up.svg) no-repeat center center");
                        //$('li.ckup_year').css("cursor", "pointer");
                        $('li.ckup_year').removeClass('ck-hidden');
                    }
                    e.stopPropagation();
                });
                $el.find('li.ckup_month')
                    .on("click", function (e) {
                        $('.month').animate({ scrollTop: 0 }, 500);
                        e.stopPropagation();
                    });
                $el.find('.month').on("scroll", function (e) {
                    var mheight = $(this).scrollTop();
                    if (mheight == 0) {
                        // $('li.ckup_month').css("background", "none");
                        // $('li.ckup_month').css("cursor", "default");
                        $('li.ckup_month').addClass('ck-hidden');
                    } else {
                        // $('li.ckup_month').css("background", "url(images/arrow-up.svg) no-repeat center center");
                        // $('li.ckup_month').css("cursor", "pointer");
                        $('li.ckup_month').removeClass('ck-hidden');
                    }
                    e.stopPropagation();
                });
                $el.find('li.ckup_day')
                    .on("click", function (e) {
                        var dheight = $('.day').scrollTop();
                        var uprange = $('.day').scrollTop() - 270;
                        $('.day').animate({ scrollTop: uprange }, 500);
                        e.stopPropagation();
                    });
                $el.find('.day').on("scroll", function (e) {
                    var dheight = $(this).scrollTop();
                    if (dheight == 0) {
                        // $('li.ckup_day').css("background", "none");
                        // $('li.ckup_day').css("cursor", "default");
                        $('li.ckup_day').addClass('ck-hidden');
                    } else {
                        // $('li.ckup_day').css("background", "url(images/arrow-up.svg) no-repeat center center");
                        // $('li.ckup_day').css("cursor", "pointer");
                        $('li.ckup_day').removeClass('ck-hidden');
                    }
                    e.stopPropagation();
                });
                $el.find('li.ckdown_year')
                    .on("click", function (e) {
                        var scrollTop = $('.year').scrollTop();
                        scrollTop += $('.year').height();
                        $('.year').animate({ scrollTop: scrollTop }, 500);
                    });
                $el.find('.year').on("scroll", function (e) {
                    var yscrollheight = $('.year').scrollTop();
                    var ylilength = $('.year li').length;
                    var yheight = $('.year').height();
                    var ybottonheight = yheight + 30;
                    var isBottom = isScrollToBottom(this);

                    if (isBottom || yscrollheight == ybottonheight || ylilength <= 9 || ylilength == 11 && yscrollheight == 60) {
                        // $('li.ckdown_year').css("background", "none");
                        // $('li.ckdown_year').css("cursor", "default");
                        $('li.ckdown_year').addClass('ck-hidden');
                    } else {
                        // $('li.ckdown_year').css("background", " url(images/Dropdown.png) no-repeat center center");
                        // $('li.ckdown_year').css("cursor", "pointer");
                        $('li.ckdown_year').removeClass('ck-hidden');
                    }

                    e.stopPropagation();
                });


                $el.find('li.ckdown_month')
                    .on("click", function (e) {
                        $('.month').animate({ scrollTop: $('.month ul').height() }, 500);
                        e.stopPropagation();
                    });
                $el.find('.month').on("scroll", function (e) {
                    var mheight = $(this).scrollTop();
                    var isBottom = isScrollToBottom(this);
                    if (isBottom || mheight == 90) {
                        // $('li.ckdown_month').css("background", "none");
                        // $('li.ckdown_month').css("cursor", "default");
                        $('li.ckdown_month').addClass('ck-hidden');
                    } else {
                        // $('li.ckdown_month').css("background", "url(images/Dropdown.png) no-repeat center center");
                        // $('li.ckdown_month').css("cursor", "pointer");
                        $('li.ckdown_month').removeClass('ck-hidden');
                    }
                    e.stopPropagation();
                });

                $el.find('li.ckdown_day')
                    .on("click", function (e) {
                        var downrange = $('.day').scrollTop() + 270;
                        $('.day').animate({ scrollTop: downrange }, 500);
                        e.stopPropagation();
                    });
                $el.find('.day').on("scroll", function (e) {
                    var dheight = $(this).scrollTop();
                    var dayli = $('.day li:visible').length;
                    var isBottom = isScrollToBottom(this);
                    //var scrollBottom = $(this).scrollTop(); - $(window).height() - $(window).scrollTop();
                    //var dlength=dayli*D;
                    if (isBottom || (dheight == 570 && dayli == 28) || (dheight == 600 && dayli == 29) ||
                        (dheight == 630 && dayli == 30) || (dheight == 660 && dayli == 31)) {

                        // $('li.ckdown_day').css("background", "none");
                        // $('li.ckdown_day').css("cursor", "default");
                        $('li.ckdown_day').addClass('ck-hidden');

                    } else {
                        // $('li.ckdown_day').css("background", "url(images/Dropdown.png) no-repeat center center");
                        // $('li.ckdown_day').css("cursor", "pointer");
                        $('li.ckdown_day').removeClass('ck-hidden');
                    }
                    e.stopPropagation();
                });

                $el
                /*.on('click', '#set-btn', function () {
                    var m = dateChosen.month + 1,
                        d = dateChosen.day,
                        y = dateChosen.year;
                    if (defaults["leading-zero"]) {
                        m = ("0" + m).substr(-2);
                        d = ("0" + d).substr(-2);
                    }
                    alignValidDate();
                    $textbox.val([y, m, d].join('/'));
                    close();
                    $('#date-picker-popup').addClass("ui-popup-hidden");
                    $('#date-picker-popup').removeClass("ui-popup-active");					
                })*/
                    .on('keydown', '#set-btn', function (e) {
                        e.preventDefault();
                        switch (e.which) {
                            case 9:
                                if (e.shiftKey) {
                                    $('.selected').eq(2).focus();
                                } else {
                                    $cancel.focus();
                                }
                                break;
                            case 13:
                                e.currentTarget.click();
                                break;
                        }
                    })
                    .on('click', 'b button', function (e) {
                        clicked($(e.currentTarget));
                        $('.day').trigger("scroll");
                        e.stopPropagation();
                    })
                    .on('dblclick', 'b button', function (e) {
                        $el.find('#set-btn').click();
                    })
                    .on('keydown', 'b', function (e) {
                        var $this = $(e.currentTarget),
                            tab = function (dir) {
                                var ifPossible = $this[dir]('b').find('.selected').length;

                                if (ifPossible) {
                                    $this[dir]('b').find('.selected').focus();
                                    return;
                                }

                                switch (dir) {
                                    case "prev":
                                        $cancel.focus();
                                        break;
                                    case "next":
                                        $setBtn.focus();
                                        break;
                                }
                            },
                            ifPossible = function (dir) {
                                var $possible = $this
                                    .find('.selected')
                                    .parents('li')[dir]('li')
                                    .find('button');
                                if ($possible.length && !$possible.prop('disabled')) {
                                    clicked($possible);
                                }
                            };
                        e.preventDefault(); //pres scroll
                        switch (e.which) {
                            case 9:
                                if (e.shiftKey) {
                                    tab('prev');
                                } else {
                                    tab('next');
                                }
                                break;
                            case 37:
                                tab('prev');
                                break;
                            case 38:
                                ifPossible('prev');
                                break;
                            case 39:
                                tab('next');
                                break;
                            case 40:
                                ifPossible('next');
                                break;
                        }
                        e.stopPropagation();
                    })
                    .on('keydown', '.cancel', function (e) {
                        e.preventDefault();
                        switch (e.which) {
                            case 9:
                                if (e.shiftKey) {
                                    $setBtn.focus();
                                } else {
                                    $('.month .selected').focus();
                                }
                                break;
                            case 13:
                                e.currentTarget.click();
                                break;
                        }
                    })
                    /*.on('click', '.cancel', function (e) {
                        e.preventDefault();
                        close();
                    })*/
                    .on('keydown', function (e) {
                        if (e.which === 27) {
                            close();
                        }
                    });

                $el.find("#set-btn").click(function (e) {
                    var m = dateChosen.month + 1,
                        d = dateChosen.day,
                        y = dateChosen.year;
                    if (defaults["leading-zero"]) {
                        m = ("0" + m).substr(-2);
                        d = ("0" + d).substr(-2);
                    }
                    alignValidDate();
                    $textbox.val([y, m, d].join('/')).change();
                    close();
                    /*
                    $('#date-picker-popup').addClass("ui-popup-hidden");
                    $('#date-picker-popup').removeClass("ui-popup-active");
                    $('#date-picker').removeClass("active");
                    */
                    var sc = screen.width;
                    var wc = $(window).width();
                    if (sc <= 440 || wc <= 440) {
                        $('#date-picker-popup').removeClass('date-picker-Mobile');
                    }
                    e.stopPropagation();
                });
                var selectclick = $('date-pcicker');
                $(document).on('click', !selectclick, function (e) {
                    var dp_active = $("#date-picker").parent('.ui-popup-container').hasClass("ui-popup-active");
                    if (dp_active == true && e.target !== ('#date-picker-popup')) {
                        $("#set-btn").trigger('click');

                        console.log("123");
                    }
                });
                $(document).on('touchstart.datepicker', function (e) {
                    if ($textbox && $textbox.length === 1 && $textbox[0] === e.target) {
                        return;
                    }
                    if ($(e.target).closest('.ui-popup-container').length === 0) {
                        var $dpc = $("#date-picker").parent('.ui-popup-container');
                        if ($dpc.hasClass('ui-popup-active') === true) {
                            $('#set-btn', $dpc).trigger('click');
                        }
                    }
                });

                $(window).resize(function (e) {
                    var dp_active = $("#date-picker").parent('.ui-popup-container').hasClass("ui-popup-active");
                    if (dp_active == true) {
                        $("#set-btn").trigger('click');
                    }
                });

                $el.find('.ckup_year').click(function (e) {
                    e.stopPropagation();
                });
                $el.find('.ckdown_year').click(function (e) {
                    e.stopPropagation();
                });

                $(window).on("scroll.datePicker", function (e) {
                    //console.log(e);
                    //console.log($el);
                    $el.uiPosition("update");
                });

                initialized = true;
            }

            //Iterate over the current set of matched elements
            return this.each(function () {
                var $this = $(this),
                    $dp = $('#date-picker');

                //THIS WILL BUILD IT ONCE, vs. only once foreach in collection
                $dp.length || buildEl();

                $this
                    .attr('readonly', 'readonly')
                    .on('click', function (e) {
                        e.stopPropagation();
                        // $('.ui-popup-active .ui-popup').popup('close');

                        if ($textbox && $textbox.length === 1 && $textbox[0] === e.currentTarget) {
                            var dp_active = $("#date-picker").parent('.ui-popup-container').hasClass("ui-popup-active");
                            if (dp_active) {
                                $el.find("#set-btn").trigger('click');
                                return;
                            }
                        }

                        $('.ui-popup-active .ui-popup').uiPosition('close');
                        $textbox = $(e.currentTarget);
                        $textbox.blur();
                        defaults = $.extend({}, _defaults);
                        $.extend(defaults, $textbox.data('options'));
                        init();
                        //$el.popup('open');
                        $('.year').trigger("scroll");
                        $('.month').trigger("scroll");
                        $('.day').trigger("scroll");
                        checkDays();
                    })
                .on('keydown', function (e) {
                    var EnterOrNumberKeys = [13, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57];
                    if (EnterOrNumberKeys.indexOf(e.which) + 1) { e.currentTarget.click(); }
                });

                // Default Date
                var dataOptions = $this.data();
                if (!$this.val().length && dataOptions['default']) {
                    $this.val(formatDateString(currentDate, _defaults)).change();
                }
            });
        },


        scrollTopMe: function () {
            return this.each(function () {
                var $li = $(this).parent(),
                    $ul = $li.parent(),
                    $b = $ul.parent(),
                    scrollTop = ($ul.children().index($li) - 3) * $li.height();

                $b.scrollTop(scrollTop);
            });
        }

    });


})(jQuery);

(function($) {
    var demoData = { "data": { "responsecode": "000", "responsemsg": "", "lastupd": "16 Oct 2017 15:25:00", "totalpageno": 1, "totalrecordno": 1, "stocklist": [{ "cd": "", "sym": "1", "type": "EQTY", "nm": "CK Hutchison Holdings Ltd." }, { "cd": "", "sym": "10", "type": "EQTY", "nm": "Hang Lung Group Ltd." }, { "cd": "", "sym": "11", "type": "EQTY", "nm": "Hang Seng Bank Ltd." }, { "cd": "", "sym": "12", "type": "EQTY", "nm": "Henderson Land Development Co. Ltd." }, { "cd": "", "sym": "14", "type": "EQTY", "nm": "Hysan Development Co. Ltd." }, { "cd": "", "sym": "15", "type": "EQTY", "nm": "Vantage International (Holdings) Ltd." }, { "cd": "", "sym": "16", "type": "EQTY", "nm": "Sun Hung Kai Properties Ltd." }, { "cd": "", "sym": "17", "type": "EQTY", "nm": "New World Development Co. Ltd." }, { "cd": "", "sym": "18", "type": "EQTY", "nm": "Oriental Press Group Ltd." }, { "cd": "", "sym": "19", "type": "EQTY", "nm": "Swire Pacific Ltd. 'A'" }, { "cd": "", "sym": "1", "type": "EQTY", "nm": "CK Hutchison Holdings Ltd." }, { "cd": "", "sym": "10", "type": "EQTY", "nm": "Hang Lung Group Ltd." }, { "cd": "", "sym": "11", "type": "EQTY", "nm": "Hang Seng Bank Ltd." }, { "cd": "", "sym": "12", "type": "EQTY", "nm": "Henderson Land Development Co. Ltd." }, { "cd": "", "sym": "14", "type": "EQTY", "nm": "Hysan Development Co. Ltd." }, { "cd": "", "sym": "15", "type": "EQTY", "nm": "Vantage International (Holdings) Ltd." }, { "cd": "", "sym": "16", "type": "EQTY", "nm": "Sun Hung Kai Properties Ltd." }, { "cd": "", "sym": "17", "type": "EQTY", "nm": "New World Development Co. Ltd." }, { "cd": "", "sym": "18", "type": "EQTY", "nm": "Oriental Press Group Ltd." }, { "cd": "", "sym": "19", "type": "EQTY", "nm": "Swire Pacific Ltd. 'A'" }] }, "qid": "1508138739497" };
    var escapeRegexChars = function (s) {
        return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
    };
    var idSeed = 0;
    var formatStockCode = function(code, size) {
        var s = "000000000" + code;
        return s.substr(s.length - size);
    };
    var noFocusClass = 'nofocus';
    var AutoComplete = function(el, o) {
        this.uid = 'autocomplete-list-' + (idSeed++);
        this.expanded = false;
        this.me = $(el);
        this.me.wrap("<div></div>").parent().addClass('autocomplete-group');
        this.me.wrap("<div></div>").parent().addClass('autocomplete-group__input-box');
        this.me.attr('autocomplete', 'off').attr('role', 'combobox').attr('aria-owns', this.uid);
        this.wrapContainer = this.me.closest('.autocomplete-group');
        //this.ul = $("<ul></ul>").insertAfter(this.me);
        this.ul = $("<div></div>").append($("<div/>").append("<table><tbody></tbody></table>")).insertAfter(this.me.parent());
        this.ul.attr('role', 'listbox').attr('id', this.uid).addClass('autocomplete-suggestions');
        this.scroller = this.ul.children("div");
        // this.ul.width(this.me.parent().outerWidth());
        this.closeButton = $('<span tabindex="-1"></span>').insertBefore(this.me);
        this.closeButton.addClass("autocomplete-icon icon-close");
        this.options = $.extend({}, AutoComplete.DEFAULTS, o || {});
        this._init();
    };

    AutoComplete.listeners = {};

    AutoComplete.DEFAULTS = {
        onRowRender: function ($row, data, keyword) {
            var regex = new RegExp("(" + escapeRegexChars(keyword) + ")", "ig");
            var rawtext = data.sym;
            var highlighted = rawtext.replace(regex, "<span class=\"keyword-highlight\">$1</span>");
            var $code = $("<td/>").append($("<span/>").html(highlighted));
            rawtext = data.nm;
            highlighted = rawtext.replace(regex, "<span class=\"keyword-highlight\">$1</span>");
            var $name = $("<td/>").append($("<span/>").html(highlighted));
            $row
                .append($code)
                .append($name)
                .addClass('autocomplete-suggestion narrow');
        },
        onValueSelected: function(data) {
            return [data.sym, data.nm].join(' ');
        },
        inputDelay: 500,
        width: 300,
        showViewAll: false,
        viewAllReplace: false,
        viewAllText: "View All"
    };

    AutoComplete.SCROLL_DEFAULTS = {
        minBarHeight: 15,
        opacity: 1,
        touchScrollStep: 50,
        alwaysVisible: true,
        size: '6px',
        color: '#a1b4c5',
        borderRadius: '10px'
    };

    AutoComplete.addListener = function(id, listener) {
        AutoComplete.listeners[id] = listener;
    };

    AutoComplete.removeListener = function(id) {
        delete AutoComplete.listeners[id];
    };

    AutoComplete.initClickEvents = function() {
        $(document).on('click.exAutoComplete', function(e) {
            $.each(AutoComplete.listeners, function(k, v) {
                if (typeof v === 'function') {
                    v.call(this, e);
                }
            });
        });
    };

    AutoComplete.prototype = {
        _init: function () {
            this._initEvents();
            this.scrollOptions = $.extend({}, AutoComplete.SCROLL_DEFAULTS);
            this.scroller.slimScroll(this.scrollOptions);
            this.updateButtonState();
            this.lastInput = '';
        },
        _refreshScrollHeight: function() {
            var h = 0;
            $(this.ul.find("table tbody tr").get().slice(0, 11)).each(function (i) {
                if (i < 10 || (i == 10 && $(this).is('.suggestion-viewall'))) {
                    h = h + $(this).height();
                }
            });
            this.scrollOptions.height = h;
            this.scroller.slimScroll(this.scrollOptions);
        },
        _handleBodyClick: function (e) {
            if (e && $(e.target).closest('.autocomplete-suggestions', this.wrapContainer).length) {
                return;
            }
            if (e && $.contains(this.wrapContainer[0], e.target)) {
                return;
            }
            this.ul.hide();
            this.me.addClass(noFocusClass);
        },
        _initEvents: function() {
            var that = this;
            this.closeButton.on('click.exAutoComplete', function(e) {
                that.clearInputBox();
            });
            this.closeButton.on('keyup', $.keyboardEnterEvent);
            this.me.on('focusin.exAutoComplete', function (e) {
                $(this).trigger("input");
            }).on('input.exAutoComplete', function (e) {
                that.me.removeClass(noFocusClass);
                that.handleInputKey(e);
            }).on('keyup.exAutoComplete change.exAutoComplete', function (e) {
                that.updateButtonState();
            }).on('hidelist.exAutoComplete', function (e) {
                that.hide();
                that.me.addClass(noFocusClass);
            }).on('clearlast.exAutoComplete', function (e) {
                that.lastInput = '';
                that.ul.find("table tr").remove();
                that.ul.removeClass("viewall-suggestions");
            }).on('viewall.exAutoComplete', function (e) {
                if (that.options.showViewAll) {
                    that._onViewAll();
                }
            });
            AutoComplete.addListener(this.uid, $.proxy(this._handleBodyClick, this));
        },
        _selectValue: function (data) {
            this.ul.hide();
            var formattedText = this.options.onValueSelected(data);
            this.me.val(formattedText).trigger('change');
        },
        clearInputBox: function() {
            this.me.val('').focus().change();
            this.lastInput = '';
            this.updateButtonState();
            this.hide();
        },
        destroy: function() {
            this.me.off('.exAutoComplete');
            this.closeButton.remove();
            this.me.unwrap().unwrap();
        },
        hide: function() {
            this.ul.hide();
        },
        close: function() {
            if (!this.expanded) {
                return;
            }
        },
        _appendRow: function(val, data, index) {
            var $li = $("<tr/>");
            var that = this;
            that.options.onRowRender($li, data, val);
            $li.hover(function () {
                $(this).addClass("hover").siblings().removeClass("hover");
            }, function () {
                $(this).removeClass("hover");
            });
            $li.on('click.exAutoComplete', function (e) {
                that._selectValue(data);
            });
            that.ul.find("table tbody").append($li);
        },
        _onViewAll: function () {
            var that = this;
            var val = that.me.val();
            var viewall = that.ul.find('table tr.suggestion-viewall');
            viewall.off('click');
            if (typeof that.options.viewall_remotedata === 'function') {
                that.me.trigger("beforeload.va.exAutoComplete");
                var promise = that.options.viewall_remotedata.call(that, val);
                promise.done(function (data) {
                    if (that.options.viewAllReplace) {
                        that.ul.find("table tr").remove();
                    }
                    if (data && data.data && data.data.stocklist) {
                        $.each(data.data.stocklist, function (i, v) {
                            that._appendRow(val, v, i);
                        });
                    }
                    that.me.trigger("loaded.va.exAutoComplete");
                }).always(function () {
                    that.me.trigger("complete.va.exAutoComplete");
                    viewall.remove();
                    that.lastInput = val;
                    that.ul.addClass("viewall-suggestions");
                    that._refreshScrollHeight();
                });
            } else {
                viewall.remove();
                that._refreshScrollHeight();
            }
        },
        handleInputKey: function(event) {
            var that = this;
            var keyCode = event.keyCode;

            if (keyCode === 38 || keyCode === 40) { // up (38) | down (40)
                event.preventDefault();
                if (this.ul.is(':visible')) {
                    var records = this.ul.find('.autocomplete-suggestion');
                    if (records.length > 0) {
                        var current = that.ul.find('.autocomplete-suggestion.hover');
                        var next;
                        if (current.length === 0) {
                            if (keyCode === 40) {
                                next = records.first();
                            } else {
                                next = records.last();
                            }
                        } else {
                            if (keyCode === 40) {
                                next = current.next();
                                if (next.length === 0) next = records.first();
                            } else {
                                next = current.prev();
                                if (next.length === 0) next = records.last();
                            }
                            current.removeClass("hover");
                        }
                        next.addClass("hover");
                        if (next) {
                            var scrollToVal = that.scroller.scrollTop() + next.position().top;
                            var o = $.extend({}, that.scrollOptions, { scrollTo: scrollToVal + 'px' });
                            that.scroller.slimScroll(o);
                        }
                    }
                }
            } else if (keyCode === 13) { // ENTER (13)
                event.preventDefault();
                if (this.ul.is(':visible')) {
                    var records = this.ul.find('.autocomplete-suggestion');
                    if (records.length > 0) {
                        var current = records.filter('.hover');
                        if (current.length > 0) {
                            current.click();
                        }
                    }
                }
            } else if (keyCode === 9) { // TAB (9)
                that.hide.show();
            } else {
                if (this.timer) {
                    clearTimeout(this.timer);
                }
                // this.deferred = $.Deferred();
                this.timer = setTimeout(function() {
                    var val = that.me.val();
                    if (that.lastInput == val && val.length > 0) {
                        if (that.me.hasClass(noFocusClass)) return;
                        var resultsCount = that.ul.find('table tr').length;
                        if (resultsCount > 0) {
                            that.ul.show();
                            that._refreshScrollHeight();
                        }
                        return;
                    }
                    that.lastInput = val;
                    that.ul.find("table tr").remove();
                    if (that.ul.is(':visible')) {
                        // that._refreshScrollHeight();
                        that.ul.hide();
                    }
                    that.ul.removeClass('viewall-suggestions');
                    if (val.length > 0) {
                        var promise;
                        if (typeof that.options.remotedata === 'function') {
                            promise = that.options.remotedata.call(that, val);
                        } else {
                            var dummy = new $.Deferred();
                            setTimeout(function() {
                                dummy.resolve(demoData);
                            }, 250);
                            promise = dummy.promise();
                        }
                        if (promise) {
                            promise.done(function(data) {
                                var show = false;
                                if (data && data.data && data.data.stocklist) {
                                    $.each(data.data.stocklist, function(i, v) {
                                        that._appendRow(val, v, i);
                                        show = true;
                                    });
                                }
                                if (that.options.showViewAll) {
                                    show = true;
                                    var $li = $("<tr/>").addClass('autocomplete-suggestion narrow suggestion-viewall');
                                    var colSpan = that.ul.find("table tbody tr:first-child").children('td').length;
                                    var $td = $('<td/>').html(that.options.viewAllText);
                                    if (colSpan > 1) {
                                        $td.attr('colspan', colSpan)
                                    }
                                    $li.append($td);
                                    $li.hover(function () {
                                        $(this).addClass("hover").siblings().removeClass("hover");
                                    }, function () {
                                        $(this).removeClass("hover");
                                    });
                                    $li.on('click.exAutoComplete', function (e) {
                                        that._onViewAll();
                                    });
                                    that.ul.find("table tbody").append($li);
                                }
                                if (show && !that.me.hasClass(noFocusClass)) {
                                    that.ul.show();
                                    that._refreshScrollHeight();
                                } else {
                                    that.ul.hide();
                                }
                            });
                        }
                    } else {
                        that.ul.hide();
                    }
                }, that.options.inputDelay);
            }
        },
        updateButtonState: function() {
            var val = this.me.val();
            if (val && val.length > 0) {
                this.me.parent().addClass('has-value');
                this.closeButton.show().attr('tabindex', 0);
            } else {
                this.me.parent().removeClass('has-value');
                this.closeButton.hide().attr('tabindex', -1);
            }
        }
    };

    AutoComplete.initClickEvents();

    $.fn.HkexAutoComplete = function(o) {
        return this.each(function (i, e) {
            var option = $.extend({}, $(this).data(), o || {});
            new AutoComplete(e, option);
        });
    };
})(jQuery);

(function($) {
    $('#searchStockCode:not([data-auto="false"]),:input.stockCodePredictive').HkexAutoComplete({
        /*
        remotedata: function(val) {
            return $.ajax({
                dataType: 'jsonp',
                method: 'GET',
                url: 'js/demo_jsonp.js',
                jsonpCallback: 'demoCallback'
            });
        }
        */
    });
})(jQuery);

(function($) {
    var demoData = { };
    var idSeed = 0;
    var formatStockCode = function(code, size) {
        var s = "000000000" + code;
        return s.substr(s.length - size);
    };
    var ClearText = function(el, o) {
        this.uid = 'autocomplete-list-' + (idSeed + 1);
        this.expanded = false;
        this.me = $(el);
        this.me.wrap("<div></div>").parent().addClass('autocomplete-group');
        this.me.wrap("<div></div>").parent().addClass('autocomplete-group__input-box clear__input-box');
        this.me.attr('autocomplete', 'off').attr('role', 'combobox').attr('aria-owns', this.uid);
        this.ul = $("<div></div>").append($("<div/>").append("<table><tbody></tbody></table>")).insertAfter(this.me.parent());
        this.ul.attr('role', 'listbox').attr('id', this.uid).addClass('autocomplete-suggestions');
        this.scroller = this.ul.children("div");
        this.closeButton = $('<span tabindex="-1"></span>').insertBefore(this.me);
        this.closeButton.addClass("autocomplete-icon icon-close");
        this.options = $.extend({}, ClearText.DEFAULTS, o || {});
        this._init();
    };

    ClearText.listeners = {};

    ClearText.DEFAULTS = {
        onRowRender: function ($row, data, keyword) {
            var regex = new RegExp("(" + keyword + ")", "ig");
            var rawtext = data.sym;
            var highlighted = rawtext.replace(regex, "<span class=\"keyword-highlight\">$1</span>");
            var $code = $("<td/>").append($("<span/>").html(highlighted));
            rawtext = data.nm;
            highlighted = rawtext.replace(regex, "<span class=\"keyword-highlight\">$1</span>");
            var $name = $("<td/>").append($("<span/>").html(highlighted));
            $row
                .append($code)
                .append($name)
                .addClass('autocomplete-suggestion narrow');
        },
        onValueSelected: function(data) {
            return [data.sym, data.nm].join(' ');
        },
        width: 300
    };

    ClearText.SCROLL_DEFAULTS = {
        opacity: 1,
        touchScrollStep: 50,
        alwaysVisible: true,
        size: '6px',
        color: '#a1b4c5',
        borderRadius: '10px'
    };

    ClearText.addListener = function(id, listener) {
        ClearText.listeners[id] = listener;
    };

    ClearText.removeListener = function(id) {
        delete ClearText.listeners[id];
    };

    ClearText.initClickEvents = function() {
        $(document).on('click.exClearText', function(e) {
            $.each(ClearText.listeners, function(k, v) {
                if (typeof v === 'function') {
                    v.call(this, e);
                }
            });
        });
    };

    ClearText.prototype = {
        _init: function () {
            this._initEvents();
            this.scrollOptions = $.extend({}, ClearText.SCROLL_DEFAULTS);
            this.scroller.slimScroll(this.scrollOptions);
        },
        _refreshScrollHeight: function() {
            var h = 0;
            $(this.ul.find("table tbody tr").get().slice(0, 10)).each(function () {
                h = h + $(this).height();
            });
            this.scrollOptions.height = h;
            this.scroller.slimScroll(this.scrollOptions);
        },
        _handleBodyClick: function(e) {
            this.ul.hide();
        },
        _initEvents: function() {
            var that = this;
            this.closeButton.on('click.exClearText', function(e) {
                that.clearInputBox();
            });
            this.me.on('focus.exClearText', function(e) {
                $(this).keydown();
            }).on('keydown.exClearText', function(e) {
                that.handleInputKey(e);
            }).on('keyup.exClearText', function(e) {
                that.updateButtonState();
            });
            ClearText.addListener(this.uid, $.proxy(this._handleBodyClick, this));
        },
        _selectValue: function(data) {
            this.ul.hide();
            var formattedText = this.options.onValueSelected(data);
            this.me.val(formattedText);
        },
        clearInputBox: function() {
            this.me.val('').focus();
            this.updateButtonState();
        },
        destroy: function() {
            this.me.off('.exClearText');
            this.closeButton.remove();
            this.me.unwrap().unwrap();
        },
        close: function() {
            if (!this.expanded) {
                return;
            }
        },
        handleInputKey: function(event) {
            var that = this;
            var keyCode = event.keyCode;

            if (keyCode === 38 || keyCode === 40) { // up (38) | down (40)
                event.preventDefault();
                if (this.ul.is(':visible')) {
                    var records = this.ul.find('.autocomplete-suggestion');
                    if (records.length > 0) {
                        var current = that.ul.find('.autocomplete-suggestion.hover');
                        var next;
                        if (current.length === 0) {
                            if (keyCode === 40) {
                                next = records.first();
                            } else {
                                next = records.last();
                            }
                        } else {
                            if (keyCode === 40) {
                                next = current.next();
                                if (next.length === 0) next = records.first();
                            } else {
                                next = current.prev();
                                if (next.length === 0) next = records.last();
                            }
                            current.removeClass("hover");
                        }
                        next.addClass("hover");
                        if (next) {
                            var scrollToVal = that.scroller.scrollTop() + next.position().top;
                            var o = $.extend({}, that.scrollOptions, { scrollTo: scrollToVal + 'px' });
                            that.scroller.slimScroll(o);
                        }
                    }
                }
            } else if (keyCode === 13) { // ENTER (13)
                event.preventDefault();
                if (this.ul.is(':visible')) {
                    var records = this.ul.find('.autocomplete-suggestion');
                    if (records.length > 0) {
                        var current = records.filter('.hover');
                        if (current.length > 0) {
                            current.click();
                        }
                    }
                }
            } else {
                if (this.timer) {
                    clearTimeout(this.timer);
                }
                this.deferred = new $.Deferred();
                this.timer = setTimeout(function() {
                    that.deferred.resolve();
                }, 250);
                this.deferred.promise().done(function() {
                    var val = that.me.val();
                    that.ul.find("table tr").remove();
                    if (val.length > 0) {
                        var promise;
                        if (typeof that.options.remotedata === 'function') {
                            promise = that.options.remotedata.call(that, val);
                        } else {
                            var dummy = new $.Deferred();
                            setTimeout(function() {
                                dummy.resolve(demoData);
                            }, 250);
                            promise = dummy.promise();
                        }
                        if (promise) {
                            promise.done(function(data) {
                                var show = false;
                                if (data && data.data && data.data.stocklist) {
                                    $.each(data.data.stocklist, function(i, v) {
                                        var $li = $("<tr/>");
                                        that.options.onRowRender($li, v, val);
                                        $li.hover(function() {
                                            $(this).addClass("hover").siblings().removeClass("hover");
                                        }, function() {
                                            $(this).removeClass("hover");
                                        });
                                        $li.on('click.exClearText', function(e) {
                                            that._selectValue(v);
                                        });
                                        that.ul.find("table tbody").append($li);
                                        show = true;
                                    });
                                }
                                if (show) {
                                    that.ul.show();
                                    that._refreshScrollHeight();
                                }
                            });
                        }
                    }
                });
            }
        },
        updateButtonState: function() {
            var val = this.me.val();
            if (val && val.length > 0) {
                this.me.parent().addClass('has-value');
                this.closeButton.show().attr('tabindex', 0);
            } else {
                this.me.parent().removeClass('has-value');
                this.closeButton.hide().attr('tabindex', -1);
            }
        }
    };

    ClearText.initClickEvents();

    $.fn.HkexClearText = function(o) {
        return this.each(function (i, e) {
            var option = $.extend({}, $(this).data(), o || {});
            new ClearText(e, option);
        });
    };
})(jQuery);

(function($) {
    $('#searchTitle').HkexClearText({
      
    });
})(jQuery);


(function ($) {
    
    $(document).ready(function () {
        $(".cms-control-link").each(function () {
            var target_id = $(this).attr("data-link-target");
            var target = $(".cms-control-container " + target_id);
            if (target.length > 0) {
                $(this).html($(this).html().replace($(this).text().trim(),$(target).text()));
                $(this).attr("href", $(target).attr("href"));
                $(this).attr("target", $(target).attr("target"));
                $(this).attr("title", $(target).attr("title"));
            }
        });
    });
    
})(jQuery);

(function($, module) {
    function ComboxField(el, option) {
        this.wrapper = $(el);
        this.inputBox = this.wrapper.find('.combobox-field');
        this.boundlist = this.wrapper.find('.combobox-boundlist');
        this.options = $.extend({}, ComboxField.DEFAULTS, this.wrapper.data(), typeof option == 'object' && option);
        this.groups = this.boundlist.find(this.options.droplistGroup);
        this.windowHeight = $(window).height();
        this.windowWidth = $(window).outerWidth();
        this.resizeBind = false;
        this.isMegaLCI = this.wrapper.children('.mega-lci-hc-levelone').length > 0;
        this.isTabletAsMobile = this.wrapper.closest('.title-search-search-bar').length > 0;
        this._buildScrollOptions();
        this._init();
    }

    var idSeed = 0;

    ComboxField.DEFAULTS = {
        listHeight: 300,
        fieldHeight: 47,
        normalDropList: false,
        droplistItems: '.droplist-items',
        droplistItem: '.droplist-item',
        droplistGroup: '.droplist-group',
        droplistMenu: '.droplist-submenu',
        scrollBarWidth: '6px',
        scrollBarColor: '#a1b4c5',
        scrollBarRadius: '10px'
    };

    ComboxField.SCROLL_DEFAULTS = {
        opacity: 1,
        touchScrollStep: 50,
        alwaysVisible: true,
        railClass: 'combobox-list-scroll-rail',
        barClass: 'combobox-list-scroll-bar',
        wrapperClass: 'combobox-list-scroll-div',
        minBarHeight: 3
    };

    ComboxField.listeners = {};

    ComboxField.addListener = function(listener, type) {
        var type = type || 'BodyClick';
        var id = 'ComboxField' + type + (++idSeed);
        ComboxField.listeners[id] = listener;
        return id;
    };

    ComboxField.removeListener = function(id) {
        delete ComboxField.listeners[id];
    };

    ComboxField.initClickEvents = function() {
        $(document).on('touchstart.exComboxField', function(e) {
            if (!module.utils.isPc()) {
                $.each(ComboxField.listeners, function(k, v) {
                    if (k.indexOf('BodyClick') === -1) return;
                    if (typeof v === 'function') {
                        v.call(this, e);
                    }
                });
            }
        });
        $(document).on('click.exComboxField', function(e) {
            if (module.utils.isPc()) {
                $.each(ComboxField.listeners, function(k, v) {
                    if (k.indexOf('BodyClick') === -1) return;
                    if (typeof v === 'function') {
                        v.call(this, e);
                    }
                });
            }
        });
    };

    var DESKTOP_BP = 1279,
        TABLET_BP = 702;

    ComboxField.prototype = {
        _buildScrollOptions: function() {
            this.scrollOptions = $.extend({}, ComboxField.SCROLL_DEFAULTS, {
                size: this.options.scrollBarWidth,
                color: this.options.scrollBarColor,
                borderRadius: this.options.scrollBarRadius,
                height: this.options.listHeight
            });
        },
        _initSelectTarget: function() {
            var that = this;
            this.boundlist.find(this.options.droplistItem).filter('[data-select-target="true"]').first().each(function(i, e) {
                $(e).parentsUntil(that.boundlist, that.options.droplistItem).attr('aria-expanded', true);
                $(e).click();
                /*
                that.inputBox
                    .attr('data-value', $(e).attr('data-value'))
                    .html($(e).children('a').html());
                    */
            });
            this._setFieldHeight();
        },
        _init: function() {
            this._initEvents();
            this._initAccessible();
            this._initSelectTarget();
            this._initScrollContent();
        },
        _setFieldHeight: function() {
            var valueHeight = this.inputBox.outerHeight();
            if (valueHeight > this.options.fieldHeight) {
                this.inputBox.parent().css('height', '');
            } else {
                this.inputBox.parent().css('height', this.options.fieldHeight);
            }
        },
        _initAccessible: function() {
            var that = this;
            this.boundlist.add(this.inputBox).attr('aria-expanded', false);
            this.boundlist.find(this.options.droplistItem).each(function(i, e) {
                var submenu = $(e).children(that.options.droplistMenu);
                if (submenu.length > 0) {
                    $(e).attr('aria-haspopup', true).add(submenu).attr('aria-expanded', false);
                }
            });
        },
        _toggleList: function(e) {
            e.preventDefault();
            if (this.wrapper.hasClass('combobox-group-disabled')) {
                return;
            }
            if (this.boundlist.is('[aria-expanded="true"]')) {
                this._hideList();
            } else {
                this._showList();
            }
        },
        _resetScrollPosition: function () {
            var visiableScroller = this.groups.children().children(this.options.droplistItems).filter(':visible').filter('.reset-scroll');
            if (visiableScroller.length > 0) {
                visiableScroller.removeClass('reset-scroll');
                var o = $.extend({}, ComboxField.SCROLL_DEFAULTS, { scrollTo: 0 });
                visiableScroller.slimScroll(o);
            }
        },
        _showList: function() {
            this.inputBox.attr('aria-expanded', true);
            this.boundlist.attr('aria-expanded', true).show();
            this.groups.children().children(this.options.droplistItems).slimScroll(ComboxField.SCROLL_DEFAULTS);
            this._resetScrollPosition();

            // Position Submenu
            var that = this;
            this.boundlist.find(this.options.droplistItem + '[aria-expanded="true"]').each(function(i, e) {
                that._reposSubmenu(e);
            });
            this.clickId = ComboxField.addListener($.proxy(this._handleBodyClick, this));
        },
        _hideList: function() {
            this.inputBox.attr('aria-expanded', false);
            this.boundlist.attr('aria-expanded', false).hide();
            ComboxField.removeListener(this.clickId);
        },
        _initScrollContent: function(w) {
            w = w || this.windowWidth;
            var that = this;
            if (w > DESKTOP_BP) {
                this.groups.children(this.options.droplistItems).slimScroll(this.scrollOptions);
            } else if (w > TABLET_BP && this.isTabletAsMobile) {
                this.groups.filter('.droplist-submenu').children('.' + ComboxField.SCROLL_DEFAULTS.wrapperClass).children(this.options.droplistItems).each(function (i, e) {
                    that._destroyScroll(e);
                });
                this.groups.not('.droplist-submenu').children(this.options.droplistItems).slimScroll(this.scrollOptions);
            } else if (w > TABLET_BP) {
                this.groups.not('.level2:not(.level2-scrollable)').children(this.options.droplistItems).slimScroll(this.scrollOptions);
                this.groups.filter('.level2:not(.level2-scrollable)').children('.' + ComboxField.SCROLL_DEFAULTS.wrapperClass).children(this.options.droplistItems).each(function (i, e) {
                    that._destroyScroll(e);
                });
            } else if (this.options.normalDropList) {
                this.groups.children(this.options.droplistItems).slimScroll(this.scrollOptions);
            } else {
                this.groups.children('.' + ComboxField.SCROLL_DEFAULTS.wrapperClass).children(this.options.droplistItems).each(function(i, e) {
                    that._destroyScroll(e);
            });
            }
            this._fixScrollStyles();
        },
        _fixScrollStyles: function() {
            this.boundlist.find('.combobox-list-scroll-div').each(function(i, e) {
                if (e.style.height) {
                    e.style.maxHeight = e.style.height;
                    e.style.height = null;
                }
                if (e.children[0].style.height) {
                    e.children[0].style.maxHeight = e.children[0].style.height;
                    e.children[0].style.height = null;
                }
                e.style.overflow = 'visible';
            });
        },
        update: function () {
            this.groups = this.boundlist.find(this.options.droplistGroup);
            this._init();
        },
        _initEvents: function() {
            var that = this;
            this.inputBox
                .add(this.boundlist.find(this.options.droplistItem))
                .add(this.boundlist.find(this.options.droplistItems))
                .off('.hkexCombobox');

            this.wrapper.on('value-reset.hkexCombobox', $.proxy(this._handleReset, this));
            this.inputBox.on('click.hkexCombobox', $.proxy(this._toggleList, this));
            this.boundlist.find(this.options.droplistItem).on('click.hkexCombobox', $.proxy(this._handleItemClick, this));
            this.boundlist.find(this.options.droplistItem).on('mouseover.hkexCombobox', function (e) {
                return;
                if (that.windowWidth <= DESKTOP_BP) {
                    return;
                }
                $(this).parent().children('[aria-expanded]').not(this)
                    .attr('aria-expanded', false);
                if ($(this).is('[aria-haspopup="true"]')) {
                    $(this).attr('aria-expanded', true);
                    that._reposSubmenu(this);
                }
            });
            this.boundlist.find(this.options.droplistItem).on('keydown.hkexCombobox', $.proxy(this._handleKeyNavigation, this));
            this.boundlist.find(this.options.droplistItems).on('scroll.hkexCombobox', $.proxy(this._handleContainerScroll, this));
            if (!this.resizeBind) {
                this.resizeBind = true;
                $(window).on('resize.hkexCombobox', $.proxy(this._handleResize, this));
            }
            // this.clickId = ComboxField.addListener($.proxy(this._handleBodyClick, this));
        },
        _handleReset: function (e) {
            var that = this;
            this.groups
                .children('.' + ComboxField.SCROLL_DEFAULTS.wrapperClass)
                .children(this.options.droplistItems)
                .filter(function (e) {
                    var top = $(this).next('.' + ComboxField.SCROLL_DEFAULTS.barClass).css('top');
                    top = parseInt(top, 10);
                    return top > 0;
                })
                .each(function (i, e) {
                    $(e).addClass('reset-scroll');
                });
        },
        _handleBodyClick: function(e) {
            var target = $(e.target);
            if (target.parents('.combobox-group').filter(this.wrapper).length === 0) {
                this._hideList();
                return;
            }
        },
        _handleKeyNavigation: function(e) {
            if ([37, 38, 39, 40].indexOf(e.keyCode) == -1) {
                return;
            }

            var link = $(e.currentTarget);
            var that = this;

            switch (e.keyCode) {
                case 37: // left arrow
                    if (link.is(':first-child') && link.parents(this.options.droplistItem).length > 0) {
                        // Make sure to stop event bubbling
                        e.preventDefault();
                        e.stopPropagation();

                        var next = link.parents(this.options.droplistItem).first();
                        next.children('a').focus();
                    } else if (link.parents(this.options.droplistItem).length > 0) {
                        // Make sure to stop event bubbling
                        e.preventDefault();
                        e.stopPropagation();
                    }
                    break;
                case 38: /// up arrow
                    var prev = link.prev(this.options.droplistItem);

                    if (that.windowWidth <= DESKTOP_BP) {
                        var newPrev = prev.children(this.options.droplistGroup).filter(':visible').filter(function (i, e) {
                            if (!that.isTabletAsMobile && that.windowWidth > TABLET_BP) {
                                return $(e).is(':not(.level3)');
                            }
                            return true;
                        }).find(this.options.droplistItems).first().find(this.options.droplistItem).last();
                        prev = newPrev.length > 0 ? newPrev : prev;
                    }
                    if (prev.length > 0) {
                        // Make sure to stop event bubbling
                        e.preventDefault();
                        e.stopPropagation();

                        prev.children('a').focus();
                    } else if (link.parents(this.options.droplistItem).length > 0) {
                        // Make sure to stop event bubbling
                        e.preventDefault();
                        e.stopPropagation();

                        if (link.is(':first-child')) {
                            link.filter(function(i, e) {
                                if (that.windowWidth > DESKTOP_BP) {
                                    return false;
                                } else if (!that.isTabletAsMobile && that.windowWidth > TABLET_BP) {
                                    return $(e).parents(that.options.droplistGroup + '.level3').length === 0;
                                }
                                return true;
                            }).parents(this.options.droplistItem).first().children('a').focus();
                        }
                    }
                    break;
                case 39: // right arrow
                    // Make sure to stop event bubbling
                    if (link.children(that.options.droplistGroup).length > 0) {
                        // Make sure to stop event bubbling
                        e.preventDefault();
                        e.stopPropagation();

                        this._expandSubmenu(e, e.currentTarget);
                        var next = link.children(that.options.droplistGroup).first().find(this.options.droplistItem).first().first();
                        next.children('a').focus();
                    } else if (link.parents(this.options.droplistItem).length > 0) {
                        // Make sure to stop event bubbling
                        e.preventDefault();
                        e.stopPropagation();
                    }
                    break;
                case 40: // down arrow
                    var next = link.next(this.options.droplistItem);
                    if (that.windowWidth <= DESKTOP_BP) {
                        var selector = ':visible' + (!that.isTabletAsMobile && that.windowWidth > TABLET_BP ? ':not(.level3)' : '');
                        var newNext = link.children(this.options.droplistGroup).filter(selector).find(this.options.droplistItem).first();
                        next = newNext.length > 0 ? newNext : next;
                    }
                    if (next.length > 0) {
                        // Make sure to stop event bubbling
                        e.preventDefault();
                        e.stopPropagation();

                        next.children('a').focus();
                    } else if (link.parents(this.options.droplistItem).length > 0) {
                        // Make sure to stop event bubbling
                        e.preventDefault();
                        e.stopPropagation();

                        if (link.is(':last-child')) {
                            link.filter(function(i, e) {
                                if (that.windowWidth > DESKTOP_BP) {
                                    return false;
                                } else if (!that.isTabletAsMobile && that.windowWidth > TABLET_BP) {
                                    return $(e).parents(that.options.droplistGroup + '.level3').length === 0;
                                }
                                return true;
                            }).parents(this.options.droplistItem).first().next().children('a').focus();
                        }
                    }
                    break;
            }
        },
        _handleContainerScroll: function(e) {
            var that = this;
            var scroller = $(e.currentTarget);
            scroller.find('[aria-haspopup="true"][aria-expanded="true"]').each(function() {
                that._reposSubmenu(this);
            });
            scroller.filter(function() {
                return $(this).parent().hasClass(ComboxField.SCROLL_DEFAULTS.wrapperClass);
            }).slimScroll(ComboxField.SCROLL_DEFAULTS);
        },
        _handleResize: function() {
            var that = this;

            var w = $(window).outerWidth(),
                h = $(window).height();

            if (w != this.windowWidth) {
                this._handleViewportWidthChange(w);
            }

            $(this.options.droplistItem + '[aria-haspopup="true"][aria-expanded="true"]').each(function(i, e) {
                that._reposSubmenu(e);
            });

            this.windowWidth = w;
            this.windowHeight = h;
        },
        _handleViewportWidthChange: function(w) {
            this._initScrollContent(w);
        },
        _destroyScroll: function(el) {
            var o = $.extend({}, ComboxField.SCROLL_DEFAULTS, { destroy: true });
            $(el).slimScroll(o);

            // Remove listeners
            $(el).off('touchstart touchmove mousewheel DOMMouseScroll mouseenter mouseleave');

            // Remove inline-style
            el.style.maxHeight = null;
            el.style.transform = null;
        },
        _reposSubmenu: function(el) {
            var outerHeight = $(el).outerHeight(),
                scroller = $(el).parent();
            if (this.windowWidth <= DESKTOP_BP && this.windowWidth > TABLET_BP) {
                if ($(el).children(this.options.droplistMenu).hasClass('level3')) {
                    scroller = $(el).parents('.' + ComboxField.SCROLL_DEFAULTS.wrapperClass)
                        .children(this.options.droplistItems);
                }
            }
            var scrolled = scroller.scrollTop();
            var transform = 'translateZ(0) translateY(' + (-outerHeight - scrolled) + 'px)';

            if ($(el).children(this.options.droplistMenu).is('.level2,.level3')) {
                $(el).children(this.options.droplistGroup).removeClass('droplist-group-hidden');
                var pos = $(el).position();
                transform = 'translateZ(0) translateY(' + (pos.top - 1) + 'px)';

                var $menu = $(el).children(this.options.droplistMenu);
                var offsetY = $(el).offset().top,
                    winScrollTop = $(window).scrollTop(),
                    elHeight = $(el).outerHeight(),
                    menuHeight = $menu.outerHeight(),
                    isExceedScreen = window.innerHeight < (offsetY - winScrollTop  + menuHeight);
                if (isExceedScreen) {
                    transform = 'translateZ(0) translateY(' + (pos.top + 1 + elHeight - menuHeight) + 'px)';
                }
            }

            $(el).children(this.options.droplistMenu).css('transform', transform);

            if (!this.isMegaLCI && (!this.isTabletAsMobile && $(el).children(this.options.droplistMenu).hasClass('level3') || this.windowWidth > DESKTOP_BP)) {
                var threshold = $(el).is(':last-child') ? 3 : 1;
                if ($(el).position().top < 0 || $(el).position().top + outerHeight > (scroller.outerHeight() + threshold)) {
                    $(el).children(this.options.droplistGroup).addClass('droplist-group-hidden');
                } else {
                    $(el).children(this.options.droplistGroup).removeClass('droplist-group-hidden');
                }
            }
        },
        _expandSubmenu: function(e, el) {
            el = el || e.currentTarget;
            var target = $(el);
            target.parent().children('[aria-haspopup="true"]').not(target).attr('aria-expanded', false).children(this.options.droplistMenu).attr('aria-expanded', false);
            target.attr('aria-expanded', true).children(this.options.droplistMenu).attr('aria-expanded', true);
            this._resetScrollPosition();
            this._reposSubmenu(el);
            target.find(this.options.droplistItems).filter(function(i, e) {
                return $(e).parent().hasClass(ComboxField.SCROLL_DEFAULTS.wrapperClass);
            }).slimScroll(ComboxField.SCROLL_DEFAULTS).trigger('mouseover');
        },
        _collapseSubmenu: function(e, el) {
            el = el || e.currentTarget;
            var target = $(el);
            target.attr('aria-expanded', false).find('[aria-expanded="true"]').attr('aria-expanded', false);
        },
        _setDroplistValue: function(target) {
            var selectTarget = target;
            if (target.is('[data-value="-2"]') && target.parents('.droplist-item').length > 0) {
                selectTarget = target.parents('.droplist-item').first();
            }
            var dataValue = selectTarget.attr('data-value');
            var labelValue = selectTarget.children('a').text();
            this.inputBox.attr('data-value', dataValue).html(labelValue);
            this._hideList();
            this.boundlist.find(this.options.droplistItem).not(target).attr('data-select-target', false);
            target.attr('data-select-target', true);
            this.inputBox.trigger('change');
            selectTarget.add(target).siblings('[aria-expanded]').not(selectTarget)
                .attr('aria-expanded', false)
                .find('[aria-expanded]')
                .attr('aria-expanded', false);
            this._setFieldHeight();
        },
        _handleItemClick: function(event) {
            event.preventDefault();
            event.stopPropagation();
            var target = $(event.currentTarget);
            if ($(event.target).hasClass(ComboxField.SCROLL_DEFAULTS.barClass)) {
                return;
            }
            if (target.is('[aria-haspopup="true"]')) {
                if (target.is('[aria-expanded="true"]')) {
                    this._collapseSubmenu(event);
                } else {
                    this._expandSubmenu(event);
                }
            } else {
                this._setDroplistValue(target);
            }
        }
    };

    if (typeof module.UI == 'undefined') module.UI = {};
    module.UI.ComboxField = ComboxField;

    ComboxField.initClickEvents();
})(jQuery, window.hkexApp = window.hkexApp || {});

(function ($) {
    function Plugin(option) {
        return this.each(function () {
            var data = $(this).data("hkexComboxField");
            if (!data) {
                var options = {};
                if (typeof option == 'object') {
                    options = $.extend({}, option);
                }
                $(this).data("hkexComboxField", (data = new hkexApp.UI.ComboxField(this, options)));
                this.hkexComboBox = data;
            }
            if (typeof option == 'string' && typeof data[option] == 'function') {
                var methodArgs = arguments;
                data[option].apply(data, Array.prototype.slice.call(methodArgs, 1));
            }
        });
    }
    $.fn.WidgetComboBoxField = Plugin;
    $('.combobox-group').WidgetComboBoxField();

    $('#tier1-select .combobox-field').on('change.tier1', function(e) {
        var value = $(e.target).attr('data-value');
        var droplist = $('.tier1-wrap').find('#' + value);
        if (droplist.length === 0) {
            $('.tier1-wrap').addClass('droplist-disabled');
        } else {
            $('.tier1-wrap').removeClass('droplist-disabled');
            $('.tier1-wrap').find('#' + value).show()
                .end().find('.combobox-group').not('#' + value).hide();
        }
        var reminderClass = '.' + value + '-reminder';
        $('.filter__container-title-search .filter__container-input-wrap .reminder')
            .children().addClass('reminder-hidden')
            .filter(reminderClass).removeClass('reminder-hidden');

    });
})(jQuery);

$(".search-results .search-results__content .sortingOnMobile .sortOptions").on('click', function() {
    var parentsclass = $(this).parents('.search-results');
    $('.sortOptions', parentsclass).removeClass('active');
    $(this, parentsclass).addClass('active');
});

/*
	maxSpan, minSpan could be passed in via options of a range.
 */

var options = {
        'startDate': '25/06/2007',
        'endDate': '26/06/2007',
        'maxSpan': 50,
        'minSpan': -10
    },
    startDate = options.startDate || startDate,
    endDate = options.endDate || endDate,
    maxSpan = options.maxSpan || 20,
    minSpan = options.minSpan || -20,
    $from = $('#searchDate-From'),
    $to = $('#searchDate-To'),
    $applyRange = $('#range-apply-btn'),
    closeDatePicker = function() {
        var dateFromValue = $from.val(),
            dateToValue = $to.val(),
            dateTo = new Date(dateToValue),
            dateFrom = new Date(dateFromValue),
            capDate = new Date(dateFromValue).setFullYear(dateFrom.getFullYear() + maxSpan);

        if (dateTo < dateFrom || dateTo > capDate) {
            $to.val('').focus();
        }

        restrictDate();
        $applyRange.button($to.val().length > 0 ? 'enable' : 'disable');
    },
    restrictDate = function() {
        //configurable could be passed in via options
        var fromDate = new Date(this.$from.val()),
            cloned = new Date(this.$from.val()).setFullYear(fromDate.getFullYear() + maxSpan),
            today = new Date(),
            upToMaxMore = cloned < today ? cloned : today,
            fromMin = new Date().setFullYear(today.getFullYear() + minSpan),
            type = $("#tier1-select .combobox-field").attr("data-value");

        function GetDateValue($d, attr, defaultVal) {
            var attrVal = $d.attr(attr);
            if (typeof attrVal != 'undefined' && attrVal != '') {
                var testDate = new Date(attrVal);
                if (!isNaN(testDate.getTime())) {
                    return testDate;
                }
            }
            return defaultVal;
        }

        if (type == "rbAfter2006") {
            var defaultDateMin = new Date('2007/06/25');
            var defaultDateMax = today;
            var rangeDateMin = GetDateValue($from, "data-daterange-min", defaultDateMin);
            var rangeDateMax = GetDateValue($to, "data-daterange-max", defaultDateMax);
            $from.data().options = {
                MIN: rangeDateMin,
                MAX: rangeDateMax
            };
            $to.data().options = {
                MIN: rangeDateMin,
                MAX: rangeDateMax
            };
        } else if (type == "rbPrior2006") {
            var defaultDateMin = new Date('1999/01/01');
            var defaultDateMax = new Date('2007/06/24');
            var rangeDateMin = GetDateValue($from, "data-daterange-min", defaultDateMin);
            var rangeDateMax = GetDateValue($to, "data-daterange-max", defaultDateMax);
            $from.data().options = {
                MIN: rangeDateMin,
                MAX: rangeDateMax
            };
            $to.data().options = {
                MIN: rangeDateMin,
                MAX: rangeDateMax
            };

        } else {
            var defaultDateMin = new Date('2007/06/25');
            var defaultDateMax = today;
            var rangeDateMin = GetDateValue($from, "data-daterange-min", defaultDateMin);
            var rangeDateMax = GetDateValue($to, "data-daterange-max", defaultDateMax);
            $from.data().options = {
                MIN: rangeDateMin,
                MAX: rangeDateMax
            };
            $to.data().options = {
                MIN: rangeDateMin,
                MAX: rangeDateMax
            };
        }


    },
    activatePopup = function() {
        $('#searchDate-From, #searchDate-To, #searchDate-Shareholding').mobile508datepicker({
            onClose: closeDatePicker,
            "leading-zero": true
        });
        //$from.focus();
        restrictDate();
        $("#tier1-select .combobox-field").on("change", function() {
            var type = $(this).attr("data-value");
            if (type == 'rbAfter2006') {
                $from.val('2007/06/25').change();
                $to.val('').change();
            } else if (type == 'rbPrior2006') {
                $from.val('').change();
                $to.val('2007/06/24').change();
            } else {
                $from.val('').change();
                $to.val('').change();
            }
            restrictDate();
        });
    };

if ($from.length > 0 && $to.length > 0) {
    activatePopup();
}
$('#searchDate-To').click(function() {
    var sc = screen.width;
    var wd =$(window).width();
    if (sc <= 440|| wd<=440) {
        $('#date-picker-popup').addClass('date-picker-Mobile');
    }
});
$('#searchDate-From').click(function() {
    var checkclass = $('#date-picker-popup').hasClass("date-picker-Mobile");
    if (checkclass == true) {
        $('#date-picker-popup').removeClass("date-picker-Mobile");

    }
});

(function () {
    'use strict';
    // Left Menu Download Control
    var downloads = $("#downloads").children();
    var secondList = $("#secondList").children();
    var reportItem = $("#left-download-reports").children();

    $(document).ready(function () {

        var firstTarget = $("#select-target-firstlist").attr("data-value");
        var secondListID;
        var secondTarget;
        $("#select-target-firstlist").on("change", function (e) {
            $(this).attr("title", $(this).html());
            firstTarget = $(this).attr("data-value");
            secondListID = "#select-target-secondlist-" + firstTarget;
            secondTarget = firstTarget + "-" + $(secondListID).attr("data-value");
            var count = 0;
            $(secondList).each(function (index, e) {
                if ($(e).attr("data-value") == firstTarget) {
                    $(e).show();
                    count++;
                } else {
                    $(e).hide();
                }
            });
            if (count == 0) {
                getReport(firstTarget);
            } else {
                getReport(secondTarget);
            }
            //alert("firstTarget=" + firstTarget + "\nsecondListID=" + secondListID + "\nsecondTarget=" + secondTarget + "\n" + $(secondListID).attr("data-value"));
        });

        $("#secondList .select-group .select-target a").on("change", function (e) {
            //alert("firstTarget=" + firstTarget + "\nsecondListID=" + secondListID + "\nsecondTarget=" + secondTarget + "\n" + $(secondListID).attr("data-value"));
            $(this).attr("title", $(this).html());
            secondTarget = firstTarget + "-" + $(this).attr("data-value");
            getReport(secondTarget);
        });
    });
    function getReport(target) {
        $(reportItem).each(function (index, e) {
            if ($(e).attr("id") == target) {
                $(e).attr("data-target-report", true);
            } else {
                $(e).removeAttr("data-target-report");
            }
        });
        $(downloads).each(function (index, e) {
            if ($(e).attr("data-value") == target) {

                $(e).show();
            } else {
                $(e).hide();
            }
        });
    }
})();

(function($) {
    var isMobile = false;
    $(window).on("load resize", function() {
        if ($(window).outerWidth() < 768 && !isMobile) {
            resizeFancyNote();
            isMobile = true;
        } else if ($(window).outerWidth() >= 768 && isMobile) {
            resizeFancyNote();
            isMobile = false;
        }
    });

    $('.fancy-note-label').on('hover mouseenter focus', function(e) {
        e.preventDefault();
        var target = $(this).data()['target'];
        if ($(this).next(".fancy-note-hover").length == 0) {
            if ($(target).hasClass("fancy-note-hover")) {
                $(target).clone().removeAttr("id").insertAfter($(this));
                var hover = $(this).next(".fancy-note-hover");
                var hover_right = hover.offset().left + hover.outerWidth();
                if (hover_right > $('body').outerWidth()) {
                    hover.addClass('left');
                }
                if (hover.offset().left < 0) {
                    repositionTooltip2.call(this, hover);
                }
            }
        } else {
            var hover = $(this).next(".fancy-note-hover");
            hover.removeClass('left');
            clearTooltipPositionFix(hover);
            var hover_right = hover.offset().left + hover.outerWidth();
            if (hover_right > $('body').outerWidth()) {
                hover.addClass('left');
            }
            if (hover.offset().left < 0) {
                repositionTooltip2.call(this, hover);
            }
        }
    });
    var style;
    var addedRules = [], initialized = false;
    var addedRule = function (selector, posLeft) {
        if (addedRules.indexOf(selector) == -1) {
            if (!initialized) {
                style = document.createElement('style');
                style.id = "fancy-note-position-fix";
                document.head.appendChild(style);
                initialized = true;
            }
            style.appendChild(document.createTextNode(selector + "::before { left: " + posLeft + "px !important;}"));
            addedRules.push(selector);
        }
    };
    function clearTooltipPositionFix(tooltip) {
        if (tooltip && tooltip.length) {
            tooltip.each(function () {
                this.style.left = null;
            }).removeClass(function (i, className) {
                return (className.match(/(^|\s)fancy-note-position-fix-\d+/g) || []).join(' ');
            });
        }
    }
    function repositionTooltip2(tooltip) {
        if (tooltip && tooltip.length) {
            tooltip.removeClass("left");
            var offsetParent = tooltip.offsetParent();
            var icon = $(this);
            var tooltipWidth = tooltip.width();
            var left = 0 - (offsetParent.offset().left - ($(window).outerWidth() - tooltipWidth) / 2);
            var arrowLeft = Math.floor(Math.abs(left) + offsetParent.width() / 2);
            tooltip.css('left', left);
            tooltip.addClass('fancy-note-position-fix-' + arrowLeft);
            addedRule('.fancy-note-position-fix-' + arrowLeft, arrowLeft);
        }
    }
    function repositionTooltip() {
        var tooltip = $(this).next(".fancy-note-hover");
        if (tooltip.length) {
            var pos = $(this).position();
            var w = $(this).width();
            var leftPos = Math.floor(pos.left + (w / 2));
            tooltip.removeClass(function (i, className) {
                return (className.match(/(^|\s)fancy-note-position-fix-\d+/g) || []).join(' ');
            }).addClass('fancy-note-position-fix-' + leftPos);
            addedRule('.fancy-note-position-fix-' + leftPos, leftPos);
        }
    }
    function FancyNotePopper(el) {
        this.el = $(el);
        this.namespace = 'FancyNotePopper-ns-' + (FancyNotePopper.idSeed++);
        this.el.attr('data-fancy-note-popper-ns', this.namespace);
        this.label = $(el).next('.fancy-note-hover');
        this.showLabel = false;
        this.init();
    }
    FancyNotePopper.idSeed = 1;
    FancyNotePopper.prototype.createRoot = function () {
        var id = "fancy-note-popper-root";
        var el = document.getElementById(id);
        if (el == null) {
            el = document.createElement("div");
            el.className = "fancy-note-tooltip-hover";
            el.id = "fancy-note-popper-root";
            document.body.appendChild(el);
        }
        return el;
    };
    FancyNotePopper.prototype.init = function () {
        var rootEl = this.createRoot();
        var cloned = this.label.clone(false).appendTo(rootEl);
        cloned.removeAttr('id');
        this.label.hide();
        var that = this;
        this.popper = new Popper(this.el.children('.fancy-note-label')[0], cloned[0], {
            placement: 'bottom-start',
            positionFixed: true,
            eventsEnabled: false,
            removeOnDestroy: true,
            modifiers: {
                labelStyles: {
                    enabled: true,
                    order: 250,
                    fn: function (data) {
                        data.styles.width = that.el.offsetParent().width();
                        data.styles.zIndex = 4;
                        data.styles.display = that.showLabel ? 'block' : 'none';
                        data.styles.bottom = 'auto';
                        $(data.instance.popper).removeClass("top").addClass("bottom");
                        return data;
                    }
                }, arrow: {
                    fn: function (data) {
                        if (that.showLabel) {
                            var offsetX = data.offsets.reference.left - that.el.offsetParent().offset().left;
                            data.offsets.popper.left -= offsetX;
                            var leftPos = Math.floor(offsetX + (data.offsets.reference.width / 2));
                            $(data.instance.popper).removeClass(function (i, className) {
                                return (className.match(/(^|\s)fancy-note-popper-position-fix-\d+/g) || []).join(' ');
                            }).addClass('fancy-note-popper-position-fix-' + leftPos);
                            addedRule('.fancy-note-popper-position-fix-' + leftPos, leftPos);
                        }
                        return data;
                    }
                }, flip: {
                    enabled: false
                }, offset: {
                    offset: '0,5'
                }
            }
        });
    };
    FancyNotePopper.prototype.listenTouch = function () {
        var that = this;
        var eventName = 'touchstart.' + this.namespace;
        $('body').off(eventName).on(eventName, function (e) {
            var note = $(e.target).closest('[data-tooltip-position="nextsibling"]')
            var ns = note.attr('data-fancy-note-popper-ns');
            if (note.length === 0 || ns !== that.namespace) {
                that.hide();
            }
        });
    };
    FancyNotePopper.prototype.show = function () {
        if (!this.showLabel) {
            this.showLabel = true;
            this.popper.update();
            this.listenTouch();
        }
    };
    FancyNotePopper.prototype.hide = function () {
        if (this.showLabel) {
            this.showLabel = false;
            this.popper.update();
            $('body').off('touchstart.FancyNotePopper');
        }
    };
    FancyNotePopper.prototype.destroy = function () {
        if (this.popper) {
            this.popper.destroy();
            this.popper = null;
        }
    };
    FancyNotePopper.RegisterBobyClick = function () {
        $('body').on('touchstart.FancyNotePopperOpen', function (e) {
            var $target = $(e.target);
            if (!$target.is('[data-fancy-note-popper-ns]')) {
                $target = $target.parent();
            }
            var data = $target.data('fancy-note.popper');
            if (data) {
                data.show();
            }
        });
    };
    $.fn.fancyNotePopper = function () {
        return this.filter('[data-tooltip-position="nextsibling"]').each(function () {
            var that = this;
            $(this).off('.fancyNotePopper');
            $(this).on("mouseenter.fancyNotePopper", function () {
                var data = $(that).data('fancy-note.popper');
                if (!data) {
                    $(that).data('fancy-note.popper', (data = new FancyNotePopper(that)));
                }
                data.show();
            });
            $(this).on("mouseleave.fancyNotePopper", function () {
                var data = $(that).data('fancy-note.popper');
                if (data) {
                    data.hide();
                }
            });
        });
    };
    $.fn.fancyNoteNextSiblingTooltip = function () {
        return this.filter('[data-tooltip-position="nextsibling"]').each(function () {
            $(this).off('.nextsiblingTooltip');
            $(this).on("mouseenter.nextsiblingTooltip", function () {
                repositionTooltip.call(this);
            });
        });
    };
    if (window.Popper && typeof window.Popper === 'function') {
        $.fn.fancyNoteNextSiblingTooltip = $.fn.fancyNotePopper;
        FancyNotePopper.RegisterBobyClick();
    }
    $('.fancy-note-tooltip-hover[data-tooltip-position="nextsibling"]').fancyNoteNextSiblingTooltip();

    function openPopupFor() {
        var target = $(this).data()['target'];
        var popup = $(target);
        if ($(this).next(".fancy-note-popup").length > 0) {
            popup = $(this).next(".fancy-note-popup");
        }
        if (popup.hasClass("fancy-note-popup")) {
            var shade = popup.next('.fancy-note-shade');

            $(popup).show();
            $(shade).show();
            var $threshold = 1;
            if ($('body').is('.fontsize-large')) {
                $threshold = 2;
            }
            var $height = popup.find(".fancy-note-desc")[0].offsetHeight + $threshold;
            var $scrollHeight = popup.find(".fancy-note-desc")[0].scrollHeight;

            if ($scrollHeight > $height) {
                var scrollOptions = $.extend({}, $(popup).find(".fancy-note-desc").data(), { height: $height });
                $(popup).find(".fancy-note-desc").slimScroll(scrollOptions);
            }

            repositionPopup(popup);
            //resizeFancyNote();
        }
    }

    function initFancyNote() {
        $('.fancy-note-shade,.fancy-note-close.fancy-note-label').off('click.fancyNote');
        
        $('.fancy-note-label').on('click.fancyNote', function (e) {
            e.preventDefault();
            openPopupFor.call(this);
        });
        $('.fancy-note-shade').on('click.fancyNote', function (e) {
            e.preventDefault();
            closeFancyNote($(this).parent());
        });
        $('.fancy-note-close').on('click.fancyNote', function (e) {
            e.preventDefault();
            closeFancyNote($(this).parent().parent());
        });
    }
    $.fn.initFancyNote = initFancyNote;
    $.fn.FancyPopup = openPopupFor;
    $.fn.FancyPopupPosition = function () {
        repositionPopup(this);
        return this;
    };
    initFancyNote();

    function closeFancyNote(element) {
        var popup = element.find('.fancy-note-popup');
        var shade = element.find('.fancy-note-shade');
        var desc = popup.find(".fancy-note-desc");

        desc.removeAttr("style");
        desc.find(".slimScrollBar").remove();
        desc.find(".slimScrollRail").remove();
        desc.parent(".slimScrollDiv").replaceWith(desc);

        $(popup).hide();
        $(shade).hide();
    }

    function repositionPopup(popup) {
        var _isMobile = !hkexApp.utils.isDesktop() && !hkexApp.utils.isTablet();
        if (popup && popup.length) {
            if (_isMobile && popup.hasClass('warning-statement')) {
                popup.css('transform', 'none').each(function () {
                    this.style.marginTop = null;
                });
            } else {
                popup.css('transform', 'none').css('margin-top', (popup.height() / -2));
            }
        }
    }

    function resizeFancyNote() {

        $(".fancy-note .fancy-note-popup .fancy-note-detail .fancy-note-desc").each(function() {
            $(this).removeAttr("style");
            $(this).find(".slimScrollBar").remove();
            $(this).find(".slimScrollRail").remove();
            $(this).parent(".slimScrollDiv").replaceWith($(this));

            var $threshold = 1;
            if ($('body').is('.fontsize-large')) {
                $threshold = 2;
            }
            var $height = this.offsetHeight + $threshold;
            var $scrollHeight = this.scrollHeight;

            if ($scrollHeight > $height) {
                var scrollOptions = $.extend({}, $(this).data(), { height: $height });
                $(this).slimScroll(scrollOptions);
            }

            repositionPopup($(this).closest('.fancy-note-popup'));
        });
    }
    
})(jQuery);

(function ($) {
    var FILTER_KEY_CONTENT_SEARCH = '.filter__container-title-search';

    var filterInit = function filterInit(filterKey) {
        var _this = this;
        var cancelButtonIdentifier = void 0;
        var $sectionContainer = void 0,
			$cancelButton = void 0,
            $dropbox = void 0,
            $dropboxItems = void 0;
        var initFilter = function initFilter($mainContainer) {
            cancelButtonIdentifier = '.filter__btn-clearallFilters-js';
            $cancelButton = $mainContainer.find(cancelButtonIdentifier);
            //dropbox filter
            $dropbox = $mainContainer.find('.filter__dropdown-js a.combobox-field');
            $dropboxItems = $mainContainer.find('.filter__dropdown-js .droplist-items').filter(function () {
                return $(this).parents('.droplist-item').length == 0;
            });
            $sectionContainer = initContainer();
        };
        var registerComboboxFilter = function registerComboboxFilter($dom) {
            $dom.parents('.combobox-group').find('[data-select-target="true"]').attr("data-select-default", true);
            var _this = $(this);
            function resetToDefault() {
                var p = $dom.parents('.combobox-group');
                p.find('.droplist-item').attr('data-select-target', false)
					.filter('[data-select-default]').attr('data-select-target', true);
                p.each(function () {
					if (this.hkexComboBox) {
						this.hkexComboBox._initSelectTarget();
					}
                });
                $dom.change();
            }
            return $.extend($dom, { resetToDefault: resetToDefault });
        };
        var registerEvent = function registerEvent() {
            $cancelButton.on('click', cancelFilterClickEvent);
        };
        var initContainer = function initContainer() {
            var domContainer = [];
            $dropbox.each(function (id) {
                domContainer.push(registerComboboxFilter($(this)));
            });
            var resetContainer = function resetContainer() {
                domContainer.forEach(function ($dom) {
                    return $dom.resetToDefault();
                });
            };
            return $.extend($sectionContainer, { resetContainer: resetContainer });
        };
        var resetFilter = function resetOriginFilter() {
            $sectionContainer.resetContainer();
        };
        var cancelFilterClickEvent = function cancelFilterClickEvent() {
            resetFilter();
        };
        var executeFilter = function executeFilter() {
            if (!_this.length) {
                return;
            }
            initFilter(_this);
            registerEvent();
        };
        return executeFilter();
    };

    $.fn.extend({ filterInit: filterInit });
    $(FILTER_KEY_CONTENT_SEARCH).filterInit(FILTER_KEY_CONTENT_SEARCH);


    $('.filter__checkBox__tab-js').on('keyup', $.keyboardEnterEvent);
    $('.filter__radio__tab-js').on('keyup', $.keyboardEnterEvent);
})(jQuery);

(function ($) {
    function ShowOverlayFilter(el, options) {
        this.me = $(el);
        this.options = $.extend({}, this.me.data(), options || {});
        this.init();
        this.watch();
        this.show();
    }

    ShowOverlayFilter.prototype = {
        init: function () {
            if (this.options.target) {
                this.filterContainer = $(this.options.target);
            }
        },
        watch: function () {
            if (this.filterContainer) {
                var that = this;
                $('.action-close,.action-apply', this.filterContainer).off('.showOverlayFilter');
                $('.action-close', this.filterContainer).on('click.showOverlayFilter', function (e) {
                    e.preventDefault();
                    that.hide();
                });
                $('.action-apply', this.filterContainer).on('click.showOverlayFilter', function (e) {
                    e.preventDefault();
                    that.applyFilter();
                });
            }
        },
        hide: function () {
            if (this.filterContainer) {
                $(document.body).removeClass("showMobileOverlay");
                this.filterContainer.removeClass("mobile-overlay-visible");
            }
        },
        applyFilter: function () {
            if (this.filterContainer) {
                this.hide();
            }
        },
        show: function () {
            if (this.filterContainer) {
                $(document.body).addClass("showMobileOverlay");
                this.filterContainer.addClass("mobile-overlay-visible");
                this.filterContainer.attr("tabindex", 0).focus().removeAttr("tabindex");
            }
        }
    };

    var allowedTypes = ['object', 'string'];
    function Plugin(option) {
        return this.filter('[data-toggle="search-filters"]').each(function () {
            var options = allowedTypes.indexOf(typeof option === 'undefined' ? 'undefined' : _typeof(option)) !== -1 && option;
            var data = $(this).data('hkex.showOverlayFilter');
            if (!data) $(this).data('hkex.showOverlayFilter', (data = new ShowOverlayFilter(this, options)));
            if (typeof option == 'string' && typeof data[option] == 'function') data[option]();
        });
    }

    $.fn.showOverlayFilter = Plugin;

    $(document).on('click.showOverlayFilter.data-api', '[data-toggle="search-filters"]', function (e) {
        var $this = $(this);

        if ($this.attr('data-target')) e.preventDefault();

        var data = $this.data('hkex.showOverlayFilter');
        var option = data ? 'show' : $this.data();

        Plugin.call($this, option);
    });
})(jQuery);

(function(jQuery) {
    var targetDomain = "hkexnews.hk";
    var html = document.getElementsByTagName('html')[0];
    var fountSizeChangeEvent = document.createEvent('Event');
    fountSizeChangeEvent.initEvent("fontSizeChange", true, false);
    $('.font-sizes--small').click(function(e) {
        e.preventDefault();
        html.style.fontSize = "10px";
        changeFontSizeStyle('font-sizes--small');
        $('body').removeClass('fontsize-large');
        $('body').addClass('fontsize-small');
        removeFontSizeCookie();
        storeFontSizeCookie('small');
        $('body').trigger('fontSizeChange');
        //addOrRemoveEllipse();
        //setHTForCards();
        //hkexApp.utils.setSliderNav();
    });
    $('.font-sizes--medium').click(function(e) {
        e.preventDefault();
        html.style.fontSize = "16px";
        changeFontSizeStyle('font-sizes--medium');
        $('body').removeClass('fontsize-large');
        $('body').removeClass('fontsize-small');
        removeFontSizeCookie();
        storeFontSizeCookie('medium');
        $('body').trigger('fontSizeChange');
        //$('.fixed-freeze-tb').trigger('fontSizeChange');
        //$('.etp-overview .panel').trigger('fontSizeChange');
        // addOrRemoveEllipse();
        // setLeftMenuTitleHT();
        // setHTForCards();
        // hkexApp.utils.setSliderNav();
    });
    $('.font-sizes--large').click(function(e) {
        e.preventDefault();
        html.style.fontSize = "20px";
        changeFontSizeStyle('font-sizes--large');
        $('body').removeClass('fontsize-small');
        $('body').addClass('fontsize-large');
        removeFontSizeCookie();
        storeFontSizeCookie('large');
        $('body').trigger('fontSizeChange');
        //$('.fixed-freeze-tb').trigger('fontSizeChange');
        //$('.etp-overview .panel').trigger('fontSizeChange');
        // addOrRemoveEllipse();
        // setLeftMenuTitleHT();
        // setHTForCards();
        // hkexApp.utils.setSliderNav();
    });

    function removeFontSizeCookie() {
        $.removeCookie('fontSize');
        var options = { path: "/" };
        $.removeCookie('fontSize', options);
        if (window.location.href.indexOf('.' + targetDomain + '/') !== -1) {
            options.domain = targetDomain;
            $.removeCookie('fontSize', options);
        }
    }

    function storeFontSizeCookie(value) {
        var options = { path: "/" };
        if (window.location.href.indexOf('.' + targetDomain + '/') !== -1) {
            options.domain = targetDomain;
        }
        $.cookie('fontSize', value, options);
    }

    function addOrRemoveEllipse() {
        var $listPanelItems = $(".circulars").find(".list-panel__item").find("a");
        var $newItems = $('.news-releases__section--content-brife');

        hkexApp.utils.addEllipse($listPanelItems, 2);
        hkexApp.utils.addEllipse($newItems, 3);
    }

    function changeFontSizeStyle(target) {
        var fontSizeArr = $('.font-size-options').children().slice(1);
        $(fontSizeArr).each(function(index, e) {
            if ($(e).hasClass(target)) {
                $(e).addClass('font-sizes--active');
            } else {
                $(e).removeClass('font-sizes--active');
            }
        });
    }

    function setHTForCards() {
        $(".wl-feature__column").css('height', 'auto');
        hkexApp.utils.setEqualHeights(".wl-feature__column");
    }

    function setLeftMenuTitleHT() {
        var height = $('#menuTitle').outerHeight();
        $('.nav-icon').css('height', height + 'px');
    }

    function initializeFontSize() {
        if (!$.cookie('fontSize')) {
            return;
        }
        var fontSize = $.cookie('fontSize');
        if (fontSize === 'small') {
            $('.font-sizes--small').click();
        } else if (fontSize === 'medium') {
            $('.font-sizes--medium').click();
        } else if (fontSize === 'large') {
            $('.font-sizes--large').click();
        }
    }

    initializeFontSize();
})(jQuery);

(function ($) {
    $('footer .footer-sitemap').each(function () {
        var id = this.id || 'hkexnews_footer_sitemap';
        if (this.id != id) {
            this.id = id;
        }
        $(this).find('[data-toggle="collapse"]').each(function () {
            var target = $(this).attr('data-target');
            if (target) {
                $(target).attr('data-parent', '#' + id);
            }
        });
    });

    $('.footer-sitemap-nav__level1-item a[data-target]').on('click.mega-footer', function(e) {
        preDef(e);
        if ($(window).outerWidth() >= 768) {
            stopBubble(e);
        }
    });

    function stopBubble(evt) {
        var e = evt || window.event;
        if (e.cancelBubble) {
            e.cancelBubble = true;
        } else {
            e.stopPropagation();
        }
    }

    function preDef(evt) {
        var e = evt || window.event;
        if (e.preventDefault) {
            e.preventDefault();
        } else {
            e.returnValue = false;
        }
    }
})(jQuery);

(function($) {
    var resizeTimer;
    var tabPanelGroup = $("#tab-panel-group");
    var collapsePanelListing = $("#listed-company-collapse");
    var collapsePanelCCASS = $("#ccass-shareholding-collapse");
    var searchListing = $("#listed-company");
    var searchCCASS = $("#ccass-shareholding");
    var initialized = false;
    var TABLET_BP = 702;

    $(window).on("load resize", function () {
        if ($(window).outerWidth() > 1023) {
            clearTimeout(resizeTimer);
            resizeTimer = setTimeout(showDesktopSearchTab(), 100);
        } else {
            clearTimeout(resizeTimer);
            resizeTimer = setTimeout(showNonDesktopSearchTab(), 100);
        }
    });

    $('input.input-searchDate').on('change', function(e) {
        if ($(this).val() != "") {
            $(this).addClass("active");
        } else {
            $(this).removeClass("active");
        }
    });

    $(".filter__inputGroup .filter__container-input input").on("change keyup", function (e) {
        var inputGroup = $(this).parents(".filter__inputGroup");
        var searchBtn = $(this).parents(".filter__inputGroup").next(".filter__buttonGroup").find(".filter__btn-applyFilters-js");
        if (isInputValEmpty($(inputGroup))) {
            searchBtn.addClass("btn-disable").removeClass("btn-blue");
        } else {
            searchBtn.addClass("btn-blue").removeClass("btn-disable");
        }
    });

    $(".filter__btn-clearallFilters-js").on("click", function(e) {
        e.preventDefault();
        var searchTab = $(this).parent().parent().parent();
        $(searchTab).find(".filter__container-input input[type='text']").each(function () {
            if ($(this).attr("data-reset") != 'undefined') {
                $(this).val($(this).attr("data-reset")).trigger('change');
            }else{
                $(this).val('').removeClass("active").trigger('change');
            }
        })
        $(searchTab).find(".autocomplete-icon.icon-close").hide();
    });

    $(".filter__btn-cancelFilters-js").on("click", function(e) {
        e.preventDefault();
        var collapsePanel = $(this).parents(".nav-tabs > li").find("> .collapse-panel");
        collapsePanel.click();
    });

    $(".search-component .collapse-panel").on("click", function() {
        var searchTab = $(this).parent();
        var tabPanel = searchTab.find(".tab-content.collapse > .tab-pane");

        if ($(this).hasClass("collapsed")) {
            searchTab.parent().find("> li").removeClass("active").children('.nav-link').removeClass('active');
            searchTab.parent().find(".tab-content.collapse > .tab-pane").removeClass("js-active");
            if (!searchTab.hasClass("active")) {
                searchTab.addClass("active").children('.nav-link').addClass('active');
            }
            if (!tabPanel.hasClass("js-active")) {
                tabPanel.addClass("js-active");
            }
        } else {

        }
    });

    function showDesktopSearchTab() {
        collapsePanelListing.removeClass("in show");
        collapsePanelCCASS.removeClass("in show");

        $(".search-component .collapse-panel").each(function() {
            if (!$(this).hasClass("collapsed")) {
                $(this).addClass("collapsed");
            }
        });
        if (tabPanelGroup.find(searchListing).length == 0) {
            if (searchListing.hasClass("js-active")) {
                searchListing.removeClass("js-active");
                searchCCASS.removeClass("js-active");
                if (!collapsePanelListing.parent().hasClass("active")) {
                    collapsePanelListing.parent().addClass("active");
                }
            } else {
                searchListing.removeClass("active");
            }
            searchListing.appendTo(tabPanelGroup);
        }
        if (tabPanelGroup.find(searchCCASS).length == 0) {
            if (searchCCASS.hasClass("js-active")) {
                searchCCASS.removeClass("js-active");
                if (!collapsePanelCCASS.parent().hasClass("active")) {
                    collapsePanelCCASS.parent().addClass("active");
                }
            } else {
                searchCCASS.removeClass("active");
            }
            searchCCASS.appendTo(tabPanelGroup);
        }
        initialized = true;
    }

    function showNonDesktopSearchTab() {
        if (collapsePanelListing.find(searchListing).length == 0) {
            if (searchListing.hasClass("active")) {
                searchListing.addClass("js-active");
                collapsePanelListing.addClass("in show").attr("style", "");
                collapsePanelListing.parent().find("> .collapse-panel").removeClass("collapsed");
                if (!initialized && $(window).outerWidth() <= TABLET_BP) {
                    collapsePanelListing.removeClass("in show").parent().find("> .collapse-panel").addClass("collapsed");
                }
            } else {
                searchListing.addClass("active");
            }
            searchListing.appendTo(collapsePanelListing);
        }
        if (collapsePanelCCASS.find(searchCCASS).length == 0) {
            if (searchCCASS.hasClass("active")) {
                searchCCASS.addClass("js-active");
                collapsePanelCCASS.addClass("in show").attr("style", "");
                collapsePanelCCASS.parent().find("> .collapse-panel").removeClass("collapsed");
                if (!initialized && $(window).outerWidth() <= TABLET_BP) {
                    collapsePanelCCASS.removeClass("in show").parent().find("> .collapse-panel").addClass("collapsed");
                }
            } else {
                searchCCASS.addClass("active");
            }
            searchCCASS.appendTo(collapsePanelCCASS);
        }
        initialized = true;
    }
    function isInputValEmpty(inputGroup) {
        var isEmpty = true;
        if ($(inputGroup).find('.filter__container-input input[type="text"]').length > 0) {
            if ($(inputGroup).find('.filter__container-input input.required-field[type="text"]').length > 0) {
                $(inputGroup).find('.filter__container-input input.required-field[type="text"]').each(function () {
                    if ($(this).val().trim() != "") {
                        isEmpty = false;
                    }
                });
            } else {
                $(inputGroup).find('.filter__container-input input[type="text"]').each(function () {
                    if ($(this).val().trim() != "") {
                        isEmpty = false;
                    }
                });
            }
        } else {
            isEmpty = false;
        }
        return isEmpty;
    }
    function loadSearchBtn() {
        var searchBtn = $(".filter__buttonGroup .filter__btn-applyFilters-js");
        $(searchBtn).each(function () {
            var inputGroup = $(this).parents(".filter__buttonGroup").prev(".filter__inputGroup");
            if (isInputValEmpty(inputGroup)) {
                $(this).addClass("btn-disable").removeClass("btn-blue");
            } else {
                $(this).addClass("btn-blue").removeClass("btn-disable");
            }
        });
    }
    /*
    function loadFieldResetData(){
        $(".filter__container-input input.input-searchDate").each(function () {
            if ($(this).data().options != 'undefined') {
                if ($(this).data().options.RESET != 'undefined') {
                    $(this).attr('data-reset', $(this).data().options.RESET);
                }
            }
        });
    }
    loadFieldResetData();
    */
    loadSearchBtn();
    $('.search-component .tab-content .filter__container-title-search').CleanWhitespace();
    $('.search-component .tab-content .filter__container-ccass-shareholding').CleanWhitespace();
})(jQuery);

(function ($, hkexApp) {
    $.fn.LLCIFilter = function (opts) {
        var options = $.extend({}, opts || {});
        return this.each(function () {
            var me = $(this);
            function toggleHeadline() {
                $(this).toggleClass('showing');
                var action = $(this).hasClass('showing') ? 'removeClass' : 'addClass';
                //$(options.headlineSelector)[action]('hidden-headline');
                var ViewDoc = $('body').hasClass("body-hidden");
                var eventName = "headlineHide";
                if (ViewDoc == true) {  
                    $('body').removeClass("body-hidden");
                    eventName = "headlineShow";
                }
                else {  
                    $('body').addClass("body-hidden");
                }
                var ev = new $.Event(eventName);
                $('body').trigger(ev);
            }
            var filterButton = $('.LLCI_MB_filter_Btn', me);
            var closeFilterButton = $('.btn-close-filter', me);
            var applyFilterButton = $('.filter__btn-applyFilters-js', me);
            var headlineButton = $('.LLCI_MB_hideHeadline .hideShow', me)


            registerEvents();

            function registerEvents() {
                filterButton.on('click', showFilter);
                closeFilterButton.on('click', hideFilter);
                applyFilterButton.on('click', hideFilter);
                headlineButton.on('click', toggleHeadline);
            }
    });
}
    function showFilter() {
        $(document.body).addClass('showFilter');
        $(".LLCI_MB_filter").first().hide().toggle("slide");
    }

    function hideFilter() {    
        $(".LLCI_MB_filter").first().toggle("slide");
        setTimeout(function () {
            $(document.body).removeClass('showFilter');
        }, 400);
        setTimeout(function () {
            $(".LLCI_MB_filter").first().show();
        }, 450);
    }
    /*
    $('#tab-panel-title-search,#tab-panel-content-search').each(function () {
        var _container = this;
        var headline = ['#' + this.id, '.title-search-result', '.headline'].join(' ');
        $(_container).LLCIFilter({
            headlineSelector: headline
        });
    });
    */
    /*
    $(".LLCI_MB_filter").moreFilter({        
        headlineSelector: '.title-search-result td .headline,.title-search-result .document-details .headline'
    });
    */
})(jQuery, window.hkexApp);
// predefineddocuments.js

/*$('a.component-loadmore__dropdown').on('click', function () {
    if ($('.popover').css('display') == "block"){
        $('.popover').hide()
    }
    else if ($('.popover').css('display') == "none"){
        $('.popover').show();
    }    
});
*/

$(window).on('resize', function() {
    $('.popover').hide()
});

$(".font-sizes__link").on('click', function() {
    $('.popover').hide()
});

$(".component-loadmore__dropdown-container .popover__link").on('click', function() {
    var loaddata = $(this).attr('data-value');
    var loaddatatext = $(this).text();
    var parentsclass = $(this).parents('.component-loadmore__dropdown-container');
    $('.component-loadmore__link', parentsclass).attr('load-data', loaddata);    
    $('.component-loadmore__dropdown', parentsclass).attr('title', loaddatatext);
    $('.component-loadmore__dropdown', parentsclass).text(loaddatatext);
    $('.popover', parentsclass).hide()
});

(function($) {
	var initialized = false;
	var style;
	var addedRules = [];
	var addedRule = function(selector, posLeft) {
		if (addedRules.indexOf(selector) == -1) {
			if (!initialized) {
				style = document.createElement('style');
				style.id = "nav-popover-left-fix";
				document.head.appendChild(style);
				initialized = true;
			}
			style.appendChild(document.createTextNode(selector + " .popover__content::after, " + selector + " .popover__content::before { left: " + posLeft + "px !important;}"));
			addedRules.push(selector);
		}
    };    
    $('.component-loadmore__dropdown-wrap').find('a.component-loadmore__dropdown').on('click', function(e) {        
        var navToggle = $(this).parent();
        var $link = $(this);        
		var linkStyle = this.currentStyle || window.getComputedStyle(this);
		var marginLeft = parseInt(linkStyle.paddingLeft, 10);
		if ((navigator.userAgent.indexOf("MSIE") != -1) || (!!document.documentMode == true)) // Check is IE
		{		    
		    var width = Math.floor($link.width()) - 4;
		}
		else
		{		    
		    var width = Math.floor($link.innerWidth()) - 4;
		}		
		if (marginLeft > 0) {
		    width += marginLeft;		    
		}
        navToggle.removeClass(function(i, className) {
			return (className.match(/(^|\s)nav-popover-left-fix-\d+/g) || []).join(' ');
        }).addClass('nav-popover-left-fix-' + width);        
        addedRule('.nav-popover-left-fix-' + width, width);        
    });
})(jQuery);


(function($) {
    var mainBanner = $('.main-banner-slider'),
        carousel = mainBanner.find('.carousel');

    function registerEvents() {
        carousel.on('slid.bs.carousel', function(e) {
            var isLight = $(e.relatedTarget).hasClass('item-banner-light');
            updateBannerTheme(isLight);
        });
        carousel.hover(function(e) {
            var data = carousel.data('bs.carousel');
            if (data) {
                var dataConfig;
                if (data._config) {
                    dataConfig = data._config;
                } else {
                    dataConfig = data.options;
                }
                dataConfig.interval = carousel.data('prolongedInterval');
                carousel.carousel('pause').carousel('cycle');
            }
        }, function(e) {
            var data = carousel.data('bs.carousel');
            if (data) {
                var dataConfig;
                if (data._config) {
                    dataConfig = data._config;
                } else {
                    dataConfig = data.options;
                }
                dataConfig.interval = carousel.data('interval');
                carousel.carousel('pause').carousel('cycle');
            }
        });
    }

    function updateBannerTheme(isLight) {
        if (isLight) {
            mainBanner.addClass("main-banner-slider__light");
        } else {
            mainBanner.removeClass("main-banner-slider__light");
        }
    }

    function hideCarouselIndicators() {
        var indicators = carousel.find('.carousel-indicators');
        if (indicators.children().length === 1) {
            indicators.hide();
        }
    }

    registerEvents();
    hideCarouselIndicators();
})(jQuery);

(function registerMegaMenuTab() {
    var readOption = function (attrName, defaultValue) {
        var attr = $('#hkex_news_megamenu').attr(attrName);
        if (attr) {
            var n = parseInt(attr, 10);
            if (n > 0) {
                return n;
            }
        }
        return defaultValue;
    };
    var DESKTOP_BP = 1023,
        TABLET_BP = 702;
    var windowWidth = $(window).width();
    var delay = readOption('data-delay', 500);
    var closeDelay = readOption('data-close-delay', 0);

    var hideAllOpenedMegaMenus = function hideAllOpenedMegaMenus($target) {
        // console.log($target);
        
        var allLevel1Item = $target.parent('.main-menu__item').siblings('.hover');
        allLevel1Item.removeClass('hover').find('>.mega-menu:not(.mega-menu-lci) ul').hide();
        $target.parent('.main-menu__item').children('.mega-menu').find('.mega-nav__level2-item').filter(function () {
            return $(this).children('.mega-menu-submenu').length > 0;
        }).removeClass('current').children('.mega-menu-submenu').children('.level3').slideUp();
    };

    var timer, closeTimer;

    var handleEvent = function handleEvent(e) {
        if (e.keyCode !== 13) {
            return;
        }

        var $target = $(e.target);
        var $megaMenu = $target.siblings('.mega-menu,.mega-menu-submenu');
        var isValidMegaMenuItem = $target.is('.main-menu__link,.mega-nav__level2-link') && $megaMenu.length === 1;

        if (!isValidMegaMenuItem) {
            return;
        }
        if ($target.is('.main-menu__link')) {
            return;
        }
        e.preventDefault();

        if ($target.is('.mega-nav__level2-link')) {
            var t = $target.parent('.mega-nav__level2-item');
            t.toggleClass('current');
        } else {
            
            var t = $target.parent('.main-menu__item');
            if (t.hasClass('hover')) {
                handleHideMenu(t, 0);
            } else {
                handleOpenMenu(t, 0);
            }
            detectMegaMenuWidth($megaMenu);
            hideAllOpenedMegaMenus($target);
        }
    };

    var handleOpenMenu = function(target, delay) {
        if (timer) {
            clearTimeout(timer);
        }
        if (closeTimer) {
            clearTimeout(closeTimer);
        }
        timer = setTimeout(function() {
            target.addClass('hover').find('>.mega-menu .level2:not(.droplist-group) ' + ', .mega-menu-lci .mega-menu-lci-wrapper').slideDown();
            detectMegaMenuWidth(target.children('.mega-menu'));
            hideAllOpenedMegaMenus(target.children().first());
        }, delay);
    }

    var detectMegaMenuWidth = function(megaMenu) {
        if (!megaMenu.is('.wide,.narrow')) {
            var width = 0;
            megaMenu.find('.mega-nav__level2-link').each(function() {
                width = Math.max(width, $(this).outerWidth());
            });

            if (width > 0) {
                if (width > megaMenu.outerWidth()) {
                    megaMenu.addClass('wide');
                } else {
                    megaMenu.addClass('narrow');
                }
            }
        }

        var megaWidth = megaMenu.outerWidth();
        var offset = megaMenu.offset();

        if (offset && offset.left + megaWidth > windowWidth && !megaMenu.hasClass('mega-menu-lci')) {
            megaMenu.addClass('align-right');
        } else if (offset && offset.left < 0) {
            megaMenu.removeClass('align-right');
        }
    }

    var handleHideMenu = function(target, delay) {
        if (timer) {
            clearTimeout(timer);
        }
        closeTimer = setTimeout(function () {
            
            target.find('>.mega-menu .level2:not(.droplist-group) ' + ', .mega-menu-lci .mega-menu-lci-wrapper').slideUp(function () {
                target.removeClass('hover');
                target.find('.mega-menu-lci .mega-lci-tabs .mega-lci-level2-link , .mega-menu-lci .mega-lci-level3 > .tab-pane').removeClass('active');
                target.find('.mega-menu-lci .mega-lci-tabs .mega-lci-level2-link .nav-link').removeClass('active show');
            });
            hideAllOpenedMegaMenus(target.children().first());
        }, delay);
    }

    $('body').on('keyup', handleEvent);

    $('.main-menu .main-menu__item').hover(function (e) {
        if (windowWidth > TABLET_BP) {
            handleOpenMenu($(this), delay);
        }
    }, function(e) {
        if (windowWidth > TABLET_BP) {
            handleHideMenu($(this), closeDelay);
        }
    });

    /*
    $('.main-menu .mega-nav__level2-item').hover(function(e) {
        var hasLevel3 = $(this).children('.mega-menu-submenu').length > 0;
        if (hasLevel3 && windowWidth > DESKTOP_BP) {
            $(this).addClass('current').find('.level3').slideDown();
        }
    }, function(e) {
        var that = this;
        var hasLevel3 = $(this).children('.mega-menu-submenu').length > 0;
        if (hasLevel3 && windowWidth > DESKTOP_BP) {
            setTimeout(function() {
                $(that).removeClass('current').find('.level3').slideUp();
            }, delay);
        }
    });
    */

    $(window).on('resize', function(e) {
        var w = $(window).width();
        if (w != windowWidth && w > TABLET_BP) {
            detectMegaMenuWidth($('.main-menu .main-menu__item.hover .mega-menu'));
        }
        windowWidth = w;
    });
})(jQuery);



(function($) {
    var $mobilevMenu = $('.topbar__mobile-menu');
    var DESKTOP_BP = 1023,
        TABLET_BP = 702;
    var windowWidth = $(window).width();

    // start: fixed top-nav

    var scrollPosition = void 0;
    var lastScrollPosition = 0;
    var headerHeight = $('header').height();
    var errMessageHeight = 0;
    var navHeight = $('nav').height();

    //for scroll
    var skickyMenuIsVisible = false;

    $(window).scroll(function(event) {
        if (window.innerWidth > TABLET_BP) {
            headerHeight = $('header').height();
            scrollPosition = $(this).scrollTop();
            hasScrolled();
        }
    });

    function hasScrolled() {

        if (scrollPosition > lastScrollPosition) {
            // Scroll Down
            hideStickyMenu();
        } else {
            // Scroll Up
            if ($('.ticker-messages').length > 0) {
                errMessageHeight = $('.ticker-messages').height();
            }

            if (scrollPosition < headerHeight + errMessageHeight) {
                hideStickyMenu();
                return;
            }
            if (scrollPosition + $(window).height() < $(document).height()) {
                if (!skickyMenuIsVisible && lastScrollPosition != scrollPosition) {
                    showStickyMenu();
                }
            }
        }

        lastScrollPosition = scrollPosition;
    }
    // end: fixed top-nav
    function hideStickyMenu() {
        skickyMenuIsVisible = false;
        $('nav.main-menu').removeClass('sticky-menu');
        $('div.sticky-menu__logo-wrap').addClass('sticky-menu__non-fixed');
        //$('header.topbar').removeClass('nav-placeholder');
        //$('li.sticky-menu__logo').addClass('sticky-menu__non-fixed');
        //$('li.sticky-menu__search').addClass('sticky-menu__non-fixed');
        //$('div.sticky-menu__search-container').hide();
        //$('ul.main-menu__list.level1').css('margin-left', '');
    }

    function showStickyMenu() {
        skickyMenuIsVisible = true;
        $('nav.main-menu').addClass('sticky-menu');
        $('div.sticky-menu__logo-wrap').removeClass('sticky-menu__non-fixed');
        /*if (window.innerWidth > TABLET_BP) {
            $('nav.main-menu').css('height', '0');
            $('nav.main-menu').animate({
               height: 60
            }, 300, function () { });
        }*/

        //$('header.topbar').addClass('nav-placeholder');
        //$('li.sticky-menu__logo').removeClass('sticky-menu__non-fixed');
        //$('li.sticky-menu__search').removeClass('sticky-menu__non-fixed');
        //$('ul.main-menu__list.level1').css('margin-left', 0);
    }

    function removeOverlay() {
        var $overlay = $('.overlay');
        $overlay.on('click', function() {
            $('body').removeClass('show-menu');
            $('.fixed-freeze-tb').trigger('menuCloseEvent');
        });
    }

    function toggleMenu() {
        $mobilevMenu.on('click', function() {
            $('body').addClass('show-menu');
        });
    }

    function registerMobileMenu() {
        function clear(currentClass, menuClass, levelClass) {
            currentClass = currentClass || 'hover';
            menuClass = menuClass || 'mega-menu';
            levelClass = levelClass || 'level2';
            var $curr = $('.main-menu ul > li.' + currentClass);
            if ($curr.find('.mega-menu-lci .mega-menu-lci-wrapper').length > 0) {
                $curr.find('.mega-menu-lci .mega-menu-lci-wrapper').slideUp(function () {
                    $curr.siblings('.' + currentClass).removeClass(currentClass);
                    $curr.removeClass(currentClass);
                });
                return;
            }
            $curr.find('>.' + menuClass + ' .' + levelClass).slideUp(function () {
                $curr.siblings('.' + currentClass).removeClass(currentClass);
                $curr.removeClass(currentClass);
                if (levelClass == "level2") {
                    clear("current", "mega-menu__wrapper", "level3");
                }
            });
            if ($curr.find('>.' + menuClass + ' .' + levelClass).length === 0) {
                $curr.siblings('.' + currentClass).removeClass(currentClass);
                $curr.removeClass(currentClass);
                if (levelClass == "level2") {
                    clear("current", "mega-menu__wrapper", "level3");
                }
            }
        }

        $('body').on('touchstart.megaMenu', function (e) {
            if ($(e.target).closest('.main-menu').length == 0) {
                clear();
            }
        });

        $('.main-menu ul.level1 > li').on('click', function (e) {
            if ($(e.target).is('a:not(.main-menu__link)')) return;
            if ($(e.target).parents('.mega-menu-lci').length != 0) return;
            // if (windowWidth > TABLET_BP) return;
            e.preventDefault();
            e.stopPropagation();

            var $this = $(this);
            
            if ($this.hasClass('hover')) {
                clear();
            } else if ($this.siblings().hasClass('hover')) {
                $this.siblings('.hover').find('>.mega-menu .level2:not(.droplist-group) , .mega-menu-lci .mega-menu-lci-wrapper').slideUp(function () {
                    $this.siblings('.hover').removeClass('hover');
                    clear("current", "mega-menu__wrapper", "level3");
                });
                if ($this.siblings('.hover').find('>.mega-menu .level2:not(.droplist-group) , .mega-menu-lci .mega-menu-lci-wrapper').length === 0) {
                    $this.siblings('.hover').removeClass('hover');
                    clear("current", "mega-menu__wrapper", "level3");
                }
                $this.addClass('hover').find('>.mega-menu .level2:not(.droplist-group)' + ', .mega-menu-lci .mega-menu-lci-wrapper').slideDown();
            } else if (!$this.hasClass('hover') && $this.children().length > 1) {
                $this.addClass('hover').find('>.mega-menu .level2:not(.droplist-group)' + ', .mega-menu-lci .mega-menu-lci-wrapper').slideDown();
            }
        });

        $('.main-menu ul.level2 > li').on('click', function (e) {
            if ($(e.target).is('a')) return;
            e.preventDefault();
            e.stopPropagation();
            var $this = $(this);

            if ($this.hasClass('current')) {
                clear('current', 'mega-menu-submenu', 'level3');
            } else if ($this.siblings().hasClass('current')) {
                $this.siblings('.current').find('>.mega-menu-submenu .level3').slideUp(function () {
                    $this.siblings('.current').removeClass('current')
                });
                $this.addClass('current').find('>.mega-menu-submenu .level3').hide().slideDown();
            } else if (!$this.hasClass('current') && $this.children().length > 1) {
                $this.addClass('current').find('>.mega-menu-submenu .level3').hide().slideDown();
            }
        });
        $('.main-menu ul.level2 > li').on('keyup', function (e) {
            if ($(e.target).is('a')) return;
            if (e.keyCode !== 13) {
                return;
            }
            e.preventDefault();
            e.stopPropagation();
            var $this = $(this);

            if ($this.hasClass('current')) {
                clear('current', 'mega-menu-submenu', 'level3');
            } else if ($this.siblings().hasClass('current')) {
                $this.siblings('.current').find('>.mega-menu-submenu .level3').slideUp(function () {
                    $this.siblings('.current').removeClass('current')
                });
                $this.addClass('current').find('>.mega-menu-submenu .level3').hide().slideDown();
            } else if (!$this.hasClass('current') && $this.children().length > 1) {
                $this.addClass('current').find('>.mega-menu-submenu .level3').hide().slideDown();
            }
        });
    }

    $(window).on('resize', function (e) {
        windowWidth = $(window).width();
    });

    function init() {
        removeOverlay();
        toggleMenu();
        registerMobileMenu();
    }
    init();
})(jQuery);


(function ($) {
    var DESKTOP_BP = 1023,
        TABLET_BP = 702;
    var slideTime = 500;
    var windowWidth = $(window).width();
    var isMobile = false;
    var isTablet = false;

    $(window).on("resize", function () {
        windowWidth = $(window).width();
        if (window.innerWidth <= TABLET_BP && !isMobile) {
            resizeMegaLCI();
            isMobile = true;
            isTablet = false;
        } else if (window.innerWidth > TABLET_BP && window.innerWidth <= DESKTOP_BP && !isTablet) {
            resizeMegaLCI();
            isTablet = true;
            isMobile = false;
        } else if (window.innerWidth > DESKTOP_BP && (isTablet || isMobile)) {
            resizeMegaLCI();
            isTablet = false;
            isMobile = false;
        }
        
        $('.main-menu .mega-menu-lci .alphabetical-scrollbar').css({ "left": windowWidth - 25 });
    });

    $('.main-menu .mega-menu-lci .mega-lci-level2-link > a').on('click', function () {
        var $this = $(this);
        var $target_id = $this.attr('href');
        var $target = $('.main-menu .mega-menu-lci').find($target_id);
        var $target_bottom = $target.find('.mega-lci-level3-bottom');
        var reduce = $target_bottom.is('.mega-lci-company-bottom') ? 1 : 0;
        if (window.innerWidth < TABLET_BP) {
            $('.main-menu .mega-menu-lci .alphabetical-scrollbar').css({ "left": "-25px" });
            setTimeout(function () {
                $target.animate({ "left": "0", "right": "0" }, slideTime);
                $target.find('.alphabetical-scrollbar').animate({ "left": windowWidth - 25, "right": "10" }, slideTime);
            }
            , 100);
            setTimeout(function () {
                $('.main-menu > .main-menu__wrapper').css('overflow', 'hidden');
            }
            , 200);
            setTimeout(function () {
                $('.main-menu > .main-menu__wrapper').css('width', '100%');
                
                $target_bottom.slimScroll({
                    height: $target_bottom[0].offsetHeight - reduce,
                    disableFadeOut: true
                });
            }
            , 500);
        } else {
            resizeMegaLCI();
            setTimeout(function () {
                $target_bottom.slimScroll({
                    height: $target_bottom[0].offsetHeight - reduce,
                    disableFadeOut: true
                });
            }
            , 300);
        }
    });

    $('.main-menu .mega-menu-lci .mega-lci-level3-back').on('click', function () {
        var $this = $(this);
        var $target = $this.parents('.active').first();
        var $currTab = $('.mega-menu-lci .mega-lci-level2 .mega-lci-tabs > li.active');
        
        setTimeout(function () {
            $('.main-menu > .main-menu__wrapper').css('width', '');
            $target.find('.alphabetical-scrollbar').animate({ "left": "-25px", "right": "100%" }, slideTime);
            $target.animate({ "left": "-100%", "right": "100%" }, slideTime);
            
        }
        , 100);
        setTimeout(function () {
            $('.main-menu > .main-menu__wrapper').css('overflow', '');
            $this.parents('.active').first().removeClass("active");
            $currTab.removeClass('active');
            $currTab.children('.nav-link').removeClass('active show');
        }
        , 600);
        $target.removeClass('searching');
        $target.find('.droplist-item[aria-expanded=true]').attr('aria-expanded', 'false');
        $target.find('.droplist-group[aria-expanded=true]').attr('aria-expanded', 'false');
        $target.find('.mega-lci-level3-bottom').slimScroll({ destroy: true }).removeAttr("style");
        $target.find('input').val('');
    });
    $('.main-menu .mega-menu-lci .mega-lci-level3 .tab-pane .form-input-text .mega-lci-input-close').on('click', function () {
        var $target = $(this).parents('.active').first();
        $(this).next('input').val('');
        $target.removeClass('searching');
    });
    /*$('.main-menu .mega-menu-lci .mega-lci-level3 .tab-pane .form-input-text input').on('keyup', function () {
        var $target = $(this).parents('.active').first();
        console.log($(this).val());
        if ($(this).val().length > 0) {
            $target.addClass('searching');
        } else {
            $target.removeClass('searching');
        }
    });*/

    function resizeMegaLCI() {
        var $target = $('.main-menu .mega-menu-lci .mega-lci-level3 .tab-pane');
        $('.main-menu > .main-menu__wrapper').removeAttr('style');
        $target.removeClass('searching');
        $target.find('.droplist-item[aria-expanded=true]').attr('aria-expanded', 'false');
        $target.find('.droplist-group[aria-expanded=true]').attr('aria-expanded', 'false');
        $target.find('.mega-lci-level3-bottom').slimScroll({ destroy: true }).removeAttr("style");
        $target.find('input').val('');
    }

    function ResizeMegaMenuItem() {
        var windowWidth = $(window).width();
        var megaItems = $('.main-menu__list .main-menu__item');
        var count = megaItems.length;
        if (count > 0) {
            megaItems.each(function () {
                this.style.flexBasis = '';
            });
            var targetWidth = Math.floor(windowWidth / count);
            if (hkexApp.utils.isTablet()) {
                var minWidth = 0;
                megaItems.each(function () {
                    if ($(this).outerWidth() > targetWidth) {
                        $(this).css('flex-basis', $(this).outerWidth());
                    }
                });
            }
        }
    }

    if (window.hkexApp) {
        if (hkexApp.utils.getOs() == 'Safari') {
            hkexApp.Events.on('viewportChange', ResizeMegaMenuItem);
            $('body').on('fontSizeChange', ResizeMegaMenuItem);
            ResizeMegaMenuItem();
        }
    }
})(jQuery);

(function ($) {


    var initialized = false;
    var style;
    var addedRules = [];
    var addedRule = function (selector, posLeft) {
        if (addedRules.indexOf(selector) == -1) {
            if (!initialized) {
                style = document.createElement('style');
                style.id = "nav-popover-left-fix";
                document.head.appendChild(style);
                initialized = true;
            }
            style.appendChild(document.createTextNode(selector + " .popover__content::after, " + selector + " .popover__content::before { left: " + posLeft + "px !important;}"));
            addedRules.push(selector);
        }
    };
    function calNavpopoverPosition() {
        var navToggle = $(this).parent();
        var navPopover = $('.popover', navToggle);
        var $link = $(this);
        var width = Math.floor($link.width()) - 4;
        var navWidth = navPopover.width();
        width = width + (navWidth - $link.width());
        width = Math.floor(width) - 15;
        navToggle.removeClass(function (i, className) {
            return (className.match(/(^|\s)nav-popover-left-fix-\d+/g) || []).join(' ');
        }).addClass('nav-popover-left-fix-' + width);
        addedRule('.nav-popover-left-fix-' + width, width);
    }
    $('.title-search-result-mobile-toolbar .sort__dropdown').on('click.navpopover', function () {
        calNavpopoverPosition.call(this);
    });
    $('.title-search-result-mobile-toolbar .sort__dropdown').on('keypress.navpopover', $.keyboardEnterEvent);
    $('.title-search-result-toolbar .sort__dropdown').on('click.navpopover', function () {
        calNavpopoverPosition.call(this);
    });
    $('.title-search-result-toolbar .sort__dropdown').on('keypress.navpopover', $.keyboardEnterEvent);
    // AP & PHIP
    var $pageContent = $('.ap-phip-content');
    $('.page-list-mobile-toolbar .sort__dropdown', $pageContent).on('click.navpopover', function () {
        calNavpopoverPosition.call(this);
    });
    $('.page-list-mobile-toolbar .sort__dropdown', $pageContent).on('keypress.navpopover', $.keyboardEnterEvent);
    // Common
    $('.mobileSort .sort__dropdown.sort__dropdown-fix-pos').off('.navpopover'); // Remove previous listeners
    $('.mobileSort .sort__dropdown.sort__dropdown-fix-pos').on('click.navpopover', function () {
        calNavpopoverPosition.call(this);
    });
    $('.mobileSort .sort__dropdown.sort__dropdown-fix-pos').on('keypress.navpopover', $.keyboardEnterEvent);
})(jQuery);

(function ($, hkexApp) {
    function showNavPopover(e) {

        var target = $(e.target);

        if (!target.is('[data-toggle="nav-popover"]') && !target.parent().is('[data-toggle="nav-popover"]')) {
            $('.popover').hide();
            return;
        } else {
            // This is to prevent hash in url after clicking link
            e.preventDefault();
        }

        var $this = target;

        if (target.parent().is('[data-toggle="nav-popover"]')) {
            $this = target.parent();
        }

        var $childPopover = $this.children('.popover');

        
        if ($childPopover.length <= 0) {
            if ($this.next('.popover').length > 0) {
                $childPopover = $this.next('.popover');
            }
        }

        if ($childPopover.is(':visible')) {
            $childPopover.toggle();
            return;
        }

        $('.popover').hide();
        $childPopover.toggle();
        $childPopover.trigger('navpopover.toggle', { show: $childPopover.is(':visible') });
    }

    function registerEvents() {
        $('body').on('click', showNavPopover);
    }

    registerEvents();
})(jQuery, window.hkexApp);

(function ($, hkexApp) {
    $.fn.moreFilter = function (opts) {
        var options = $.extend({}, opts || {});
        return this.each(function () {
            var me = $(this);
            function toggleHeadline() {
                $(this).toggleClass('showing');
                //var action = $(this).hasClass('showing') ? 'removeClass' : 'addClass';
                //$(options.headlineSelector)[action]('hidden-headline');
                var ViewDoc = $('body').hasClass("body-hidden");
                var eventName = "headlineHide";
                if (ViewDoc == true) {
                    $('body').removeClass("body-hidden");
                    eventName = "headlineShow";
                }
                else {
                    $('body').addClass("body-hidden");
                }
                var ev = new $.Event(eventName);
                $('body').trigger(ev);
            }
            var filterButton = $('.PD_MB_filter_Btn', me);
            var closeFilterButton = $('.btn-close-filter', me);
            var applyFilterButton = $('.filter__btn-applyFilters-js', me);
            var headlineButton = $('.PD_MB_hideHeadline .hideShow', me)

            registerEvents();

            function registerEvents() {
                filterButton.on('click', showFilter);
                closeFilterButton.on('click', hideFilter);
                applyFilterButton.on('click', hideFilter);
                headlineButton.on('click', toggleHeadline);
            }
    });
}
    function showFilter() {
        $(document.body).addClass('showFilter');
        $(".PD_MB_filter").first().hide().toggle("slide");
    }

    function hideFilter() {
        $(".PD_MB_filter").first().toggle("slide");
        setTimeout(function () {
            $(document.body).removeClass('showFilter');
        }, 400);
        setTimeout(function () {
            $(".PD_MB_filter").first().show();
        },450);
    }
    /*
    $(".PD_MB_filter").moreFilter({        
        headlineSelector: '.title-search-result td .headline,.title-search-result .document-details .headline'
    });
    */
})(jQuery, window.hkexApp);
// predefineddocuments.js



(function ($, hkexApp) {
    function ScrollableTable(el, options) {
        this.me = $(el);
        this.options = $.extend({}, ScrollableTable.DEFAULTS, options);
        this.$mainContainer = undefined;
        this.$tableScroller = undefined;
        this.$scrollContainer = undefined;
        this.$scrollBar = undefined;
        this.isShowScroll = false;
        this.init();
    }

    ScrollableTable.DEFAULTS = {
        tableWidth: 'auto'
    };

    ScrollableTable.prototype.init = function () {
        buildDom.call(this);

        initElement.call(this);

        setupScrollTable.call(this);
    }

    ScrollableTable.prototype.refresh = function () {
        if (this.iscroll && this.iscroll.scrollerWidth === 0) {
            var that = this;
            setTimeout(function () {
                that.iscroll.refresh();
            }, 0);
        }
    }

    ScrollableTable.prototype.forcerefresh = function () {
        if (this.iscroll) {
            var that = this;
            setTimeout(function () {
                that.iscroll.refresh();
            }, 0);
        }
    }

    function buildDom() {
        var wrapper = this.me.closest('.table-scroller-container');
        if (wrapper.length === 0) {
            this.me.wrap('<div class="table-scroller-container"><div class="table-scroller"></div></div>');
            wrapper = this.me.closest('.table-scroller-container');
        }
        var barWrapper = $('.scroller-bar-wrapper', wrapper);
        if (barWrapper.length === 0) {
            barWrapper = $('<div/>').addClass('scroller-bar-wrapper')
                .append($('<div/>').addClass('scrollbar-bar-container')
                .append($('<div/>').addClass('scroll-indicator')));
            wrapper.prepend(barWrapper);
        }
    }

    function initElement() {
        this.me.width(this.options.tableWidth);
        this.$mainContainer = this.me.closest('.table-scroller-container');
        this.$tableScroller = this.me.parent('.table-scroller');
        this.$scrollContainer = this.$mainContainer.find('.scrollbar-bar-container');
        this.$scrollBar = this.$mainContainer.find('.scroll-indicator');
    }

    function setupScrollTable() {
        if (!this.iscroll) {
            this.iscroll = new IScroll(this.$tableScroller[0], {
                bounce: false,
                momentum: false,
                eventPassthrough: true,
                scrollX: true,
                scrollY: false,
                indicators: {
                    el: this.$scrollContainer[0],
                    interactive: true,
                    listenY: false
                },
                preventDefault: false
            });
            RegisterCollapseParent.call(this);
        }
    }

    function RegisterCollapseParent() {
        var collapsible = this.me.closest('.collapse');
        var that = this;
        collapsible.on('shown.bs.collapse.scrollTable', function () {
            that.forcerefresh();
        });
    }

    function Plugin(option) {
        return this.filter('.table-scroll:not(".tablesorter-stickyHeader")').each(function() {
            var options = (typeof option === 'undefined' ? 'undefined' : _typeof(option)) == 'object' && option;
            var data = $(this).data('hkex.scrolltable');
            if (!data) $(this).data('hkex.scrolltable', (data = new ScrollableTable(this, options)));
            if (typeof option == 'string') data[option]();
        });
    }

    $.fn.scrollableTable = Plugin;
})(jQuery, window.hkexApp);

(function ($, hkexApp) {
    var SEARCH_BAR_CCASS = { key: '.ccass-search-bar', container: '.filter__container-ccass-shareholding', initDatePicker: true };
    var SEARCH_BAR_LCI_TITLE = { key: '.title-search-search-bar', container: '.filter__container-title-search', initDatePicker: false };
    var SEARCH_BAR_CCASS_RESULT = { key: '.ccass-search-search-bar', container: '.filter__container-ccass-shareholding', initDatePicker: true };
    var SEARCH_BAR_CONTENT_RESULT = { key: '.search-bar.content-search-search-bar', container: '.filter__container-title-search', initDatePicker: false };

    var searchBarInit = function (searchBarKey, containerKey, initDatePicker) {
        var filterContainer = void 0,
            buttonContainer = void 0,
            listButtonContainer = void 0;

        function init() {
            var container = $(searchBarKey);
            filterContainer = $(containerKey, container);
            if (filterContainer.length == 0) {
                return;
            }
            buttonContainer = $('.filter__buttonGroup', filterContainer);
            listButtonContainer = $('.filter__container-input.searchButton', filterContainer);
            if (initDatePicker) {
                $('.input-searchDate', container).mobile508datepicker({
                    "leading-zero": true
                });
                $('.input-searchDate', container).each(function () {
                    if ($(this).val()) {
                        $(this).addClass('active');
                    }
                });
            }
        }

        function moveButtonContainer(e) {
            if (hkexApp.utils.isTablet()) {
                buttonContainer.appendTo(listButtonContainer);
            } else {
                buttonContainer.appendTo(filterContainer);
            }
        }

        function registerEvents() {
            hkexApp.Events.on('viewportChange', moveButtonContainer);
        }

        init();
        if (filterContainer.length == 0) {
            return;
        }
        registerEvents();
        moveButtonContainer();
    };
    
    $(".filter__radioGroup label:not(.filter__radio__tab-js)").on('keyup', $.keyboardEnterEvent);

    $.fn.extend({ searchBarInit: searchBarInit });
    $.fn.searchBarInit(SEARCH_BAR_CCASS.key, SEARCH_BAR_CCASS.container, SEARCH_BAR_CCASS.initDatePicker);
    //$.fn.searchBarInit(SEARCH_BAR_LCI_TITLE.key, SEARCH_BAR_LCI_TITLE.container, SEARCH_BAR_LCI_TITLE.initDatePicker);
    $.fn.searchBarInit(SEARCH_BAR_CCASS_RESULT.key, SEARCH_BAR_CCASS_RESULT.container, SEARCH_BAR_CCASS_RESULT.initDatePicker);
    $.fn.searchBarInit(SEARCH_BAR_CONTENT_RESULT.key, SEARCH_BAR_CONTENT_RESULT.container, SEARCH_BAR_CONTENT_RESULT.initDatePicker);
})(jQuery, window.hkexApp);



(function() {
    var dropdownListDefaultHeight = 300;

    function setWidth() {
        var groups = $('.select-group');
        $(groups).each(function(index, e) {
            var width = $(e).attr('data-width');
            if (width) {
                $(e).css('width', width);
            }
        });
    }
    setWidth();
    addScrollBar();
    setDropdownlistHeight();

    function setZIndex() {
        $('.select-group').each(function(i, e) {
            if ($(e).attr('data-z-index')) {
                $(e).find('.select-items').css('z-index', $(e).attr('data-z-index'));
                $(e).find('.select-items__scroll--container').css('z-index', +$(e).attr('data-z-index') + 1);
            }
        });
    }
    setZIndex();

    function setupSubmenu() {
        $('.select-group .select-item>.select-submenu').each(function() {
            addSubmenuScrollBar.call(this);
            setDroplistSubmenuHeight.call(this);
        });
    }

    setupSubmenu();

    function addScrollBar() {
        var group = $('.select-group ');
        var height = group.find('.select-items').attr('data-height');
        group.append('<div class="select-items__scroll--container">\n                              <div class="select-items__scroll--container-bar">\n                              </div>\n                         </div>');
    }

    function addSubmenuScrollBar() {
        var $this = $(this);
        $this.append('<div class="select-subitems__scroll--container">\n                              <div class="select-subitems__scroll--container-bar">\n                              </div>\n                         </div>');
    }

    function setDropdownlistHeight() {
        $('.select-group').each(function(i, g) {
            var group = $(g);
            var height = group.find('.select-items').attr('data-height');
            height = height ? height : dropdownListDefaultHeight;
            group.find('.select-items').css('max-height', height + 'px');
            var targetHeight = group.find('.select-target').outerHeight();
            group.find('.select-items__scroll--container').css('top', targetHeight).css('height', 0);
        });
    }

    function setDroplistSubmenuHeight() {
        var $submenu = $(this),
            $items = $('>.select-subitems', $submenu),
            height = $submenu.attr('data-height');
        height = height ? height : dropdownListDefaultHeight;
        $items.css('max-height', height + 'px');
    }

    function closeDropDownList() {
        var group = void 0;
        if (this == undefined || this == window) {
            group = $('.select-group');
        } else {
            group = $(this).parent();
        }
        group.each(function(i, g) {
            var targetInput = $(g).find('.select-target a');
            var expanded = targetInput.attr('data-expend') == 'true' ? true : false;
            if (expanded) {
                var ismouseup = $(g).find('.select-items__scroll--container-bar').attr('data-mouseup') == 'true' ? true : false;
                if (!ismouseup) {
                    $(g).find('.select-items').children().each(function(j, item) {
                        $(item).hide();
                    });
                    targetInput.attr("data-expend", false);
                    targetInput.focus();
                    $(g).find('.select-items__scroll--container').hide();
                    $(g).find('.select-items__scroll--container-bar').css('top', 0 + 'px');
                } else {
                    $(g).find('.select-items__scroll--container-bar').attr('data-mouseup', 'false');
                }
            }
        });
    }

    function targetItemClick(target) {
        var item = target;
        var scrollContainer = $(item).parent().parent().find('.select-items__scroll--container');
        scrollContainer.hide();
        scrollContainer.find('.select-items__scroll--container-bar').css('top', 0 + 'px');
        var targetInput = $(item).parent().parent().find('.select-target a');
        var targetText = $(item).text();
        $(targetInput).text(targetText);
        var selectItems = $(item).parent();
        $(targetInput).attr('data-value', $(item).attr('data-value'));
        $(selectItems).children().each(function(index, e) {
            if (e == item[0]) {
                $(e).attr('data-target', 'true');
            } else {
                $(e).attr('data-target', 'false');
            }
            $(e).hide();
        });
        $(targetInput).attr("data-expend", false);
        $(targetInput).trigger('change');
        setDropdownlistHeight();
    }

    function openDropDownList(target) {
        var group = $(this).parent();
        var targetInput = $(this).children();
        var expanded = $(targetInput).attr('data-expend') == 'true' ? true : false;
        var selectItems = group.find('.select-items');
        if (expanded) {
            $(selectItems).children().each(function(index, e) {
                $(e).hide();
            });
            $(targetInput).attr("data-expend", false);
            group.find('.select-items__scroll--container').hide();
        } else {
            (function() {
                group.find('.select-items__scroll--container').show();
                var itemsHeight = 0;
                $(selectItems).children().each(function(index, e) {
                    $(e).show();
                    itemsHeight = itemsHeight + $(e).outerHeight();
                });
                $(targetInput).attr("data-expend", true);
                var height = group.find('.select-items').attr('data-height');
                var targetHeight = group.find('.select-target').outerHeight();
                height = height ? height : dropdownListDefaultHeight;
                if (height <= itemsHeight) {
                    group.find('.select-items__scroll--container').css('height', height);
                } else {
                    height = itemsHeight;
                    group.find('.select-items__scroll--container').css('height', height).hide();
                }
            })();
        }
    }
    registerEvents();
    $('body').on('touchstart', function(event) {
        if (!hkexApp.utils.isPc()) {
            bodyClick(event);
        }
    });

    function bodyClick(event) {
        var target = $(event.target);
        if (target.hasClass('select-items__scroll--container-bar')) {
            console.log('scroll bar ');
            return;
        }
        var isSelect = $(target).attr('data-select') == 'true' ? true : false;;
        if (isSelect) {
            target = $(target).parent();
        }
        if (!$(target).hasClass('select-target')) {
            closeDropDownList();
            return;
        } else {
            event.preventDefault();
            registerEvents();
            $(target).trigger('click');
        }
    }
    $(window).on('click', function(event, from) {
        if (hkexApp.utils.isPc()) {
            bodyClick(event);
        }
    });

    function registerEvents() {
        $(".select-target").each(function(i, e) {
            var events = $._data($(e)[0], "events") || {};
            events.keypress || $(e).on('keypress', function(event) {
                if (event.keyCode && event.keyCode != 13) {
                    return;
                }
                preDef(event);
                openDropDownList.call(this);
            });
            events.click || $(e).on('click', function(event) {
                preDef(event);
                event.stopPropagation();
                if (event.keyCode && event.keyCode != 13) {
                    return;
                }
                openDropDownList.call(this);
                $(".select-target").each(function(i, t) {
                    if (t != e) {
                        closeDropDownList.call($(t));
                    }
                });
            });
        });

        $(".select-items .select-item").on('click keypress ', function(event) {
            if (event.type == 'click' || event.keyCode && event.keyCode == 13) {
                event.preventDefault();
            }
            if (event.keyCode && event.keyCode != 13) {
                return;
            }
            stopBubble(event);
            targetItemClick($(this));
        });

        $(".select-items .select-item").on("mouseover", function() {
            var menuItem = $(this),
                subMenuWrapper = $('>.select-submenu', menuItem);

            console.log(menuItem, subMenuWrapper);

            var menuItemPos = menuItem.position();
            subMenuWrapper.css({
                top: menuItemPos.top,
                left: menuItemPos.left + Math.round(menuItem.outerWidth())
            });
        });

        $(".select-items").on('touchstart mousedown', function(e) {
            var targetItem = $(e.target);
            if (targetItem.tagName = 'A') {
                targetItem = targetItem.parent();
            }
            stopBubble(e);
            var that = $(this);
            var group = that.parent();
            var $doc = $('body');
            var beginTop = void 0;
            var isDragg = true;
            beginTop = e.pageY || e.originalEvent.targetTouches[0].pageY;
            var beginScrollValue = group.find('.select-items').scrollTop();
            var bar = group.find('.select-items__scroll--container-bar');
            var rate = getScrollRate.call(bar);
            group.attr('data-move', false);
            $doc.bind("touchmove  mousemove", function(e) {
                group.attr('data-move', true);
                var groupTop = void 0;
                var isUp = true;
                var currentPageTop = void 0;
                currentPageTop = e.pageY || e.originalEvent.targetTouches[0].pageY;
                groupTop = beginTop - currentPageTop;
                group.find('.select-items').scrollTop(beginScrollValue + groupTop);
                //scroll bar postion
                var groupScrollValue = group.find('.select-items').scrollTop();
                bar.css('top', groupScrollValue / rate);
            });
            $doc.bind("touchend  mouseup", function(e) {
                isDragg = false;
                var isMove = group.attr('data-move') == 'true' ? true : false;
                if (!isMove) {
                    targetItem.trigger('click');
                }
                $doc.unbind('touchmove  mousemove touchend mouseup');
            });
            return false;
        });

        $('.select-items .select-item>.select-submenu').each(function() {

        });

        $(".select-items__scroll--container-bar").on('touchstart mousedown', function(e) {
            var _this = this;

            var that = this;
            var $doc = $('body');
            var beginTop = void 0;
            var isTrigger = e.isTrigger;
            var isDragg = true;
            if (isTrigger) {
                beginTop = e.target.getBoundingClientRect().top;
            } else {
                beginTop = e.pageY || e.originalEvent.targetTouches[0].pageY;
            }
            var tValue = $(this).css('top') == 'auto' ? '0' : $(this).css('top');
            var lastTop = Math.floor(tValue.replace('px', ''));
            var rate = getScrollRate.call(that);
            $doc.bind("touchmove  mousemove", function(e) {
                $(".select-items__scroll--container-bar").each(function(index, item) {
                    if (item == that) {
                        $(item).attr('data-mouseup', true);
                    } else {
                        $(item).attr('data-mouseup', false);
                    }
                });

                var barTop = void 0;
                var currentPageTop = void 0;
                currentPageTop = e.pageY || e.originalEvent.targetTouches[0].pageY;
                if (isTrigger) { // for trigger event.
                    //barTop = beginTop + (currentPageTop - this.tableBeginX);
                } else {
                    barTop = currentPageTop - beginTop;
                }
                barTop = Math.floor(barTop);
                var topValue = +(barTop + lastTop);
                topValue = topValue < 0 ? 0 : topValue;
                var barHeight = $(_this).height();
                var barContainerHeight = $(_this).parent().height();
                if (topValue + barHeight > barContainerHeight) {
                    topValue = barContainerHeight - barHeight;
                }
                $(that).css('top', topValue);
                $(that).parent().parent().find('.select-items').scrollTop(topValue * rate);
            });
            $doc.bind("touchend  mouseup", function(e) {
                isDragg = false;
                $doc.unbind('touchmove  mousemove');
            });
            return false;
        });
    }

    function getScrollRate() {
        var rate = void 0;
        var scrollBarHeight = $(this).outerHeight();
        var scrollContainerHeight = $(this).parent().outerHeight();
        var scrollHeight = scrollContainerHeight - scrollBarHeight;
        var dropdownHeight = 0;
        $(this).parent().parent().find('.select-item').each(function(i, e) {
            dropdownHeight = dropdownHeight + $(e).outerHeight();
        });
        var dropdownHideHeight = dropdownHeight - scrollContainerHeight;
        rate = dropdownHideHeight / (scrollContainerHeight - scrollBarHeight);
        return rate;
    }

    function stopBubble(evt) {
        var e = evt || window.event;
        if (e.cancelBubble) {
            e.cancelBubble = true;
        } else {
            e.stopPropagation();
        }
    }

    function preDef(evt) {
        var e = evt || window.event;
        if (e.preventDefault) {
            e.preventDefault();
        } else {
            e.returnValue = false;
        }
    }
})(jQuery);

(function ($, hkexApp) {
    $.fn.ReportCalendar = function () {
        return this.each(function () {
            var _this = $(this);

            function clear() {
                _this.find('td.cal-day').removeClass('cal-selected');
            }

            function selectReport($td) {
                clear();
                $td.addClass('cal-selected');
                if ($td.length > 0) {
                    _this.trigger("day-selected");
                } else {
                    _this.trigger("noday-selected");
                }
            }

            function handleClick(e) {
                var $td = $(e.target).closest('td.cal-day:not(.cal-no-report):not(.cal-future)');
                selectReport($td);
            }

            function registerEvents() {
                _this.off('.reportCal');
                $('table td', _this).on('click.reportCal', handleClick);
            }

            registerEvents();
        });
    };

    $('.calendar-container').ReportCalendar();
    $('.mobile-date-picker input.input-searchDate').mobile508datepicker({
        'MIN': new Date(1991, 10, 27),
        'MAX': new Date(),
        "leading-zero": true
    });
})(jQuery, window.hkexApp);

(function ($, hkexApp) {
    $.fn.stickySearchBar = function () {
        var megaMenu = $('#hkex_news_megamenu .main-menu');
        var mobileHeader = $('#hkex_news_header .topbar');
        var header = $('#hkex_news_header');

        return this.each(function () {
            var me = $(this);
            var scrollPosition = void 0;
            var lastScrollPosition = 0;
            var skickyBarIsVisible = false;
            var headerHeight = $('#hkex_news_header').height();
            var errMessageHeight = 0;
            var stickyMenuIsVisible = false;
            var editButton = $('.search-bar__mobile-edit-button', me);
            var closeOverlayButton = $('.btn-close-overlay', me);
            var applyOverlayButton = $('.filter__btn-applyFilters-js', me);
            var fieldContainer = $('>.container', me);
            var parentContainer = me.parent('#hkex_news_header_section');

            registerEvents();
            // setParentHeight();

            function setParentHeight() {
                if (parentContainer.closest('#hkex_news_topbanner').length > 0) {
                    parentContainer.css('min-height', me.height());
                }
            }

            function showOverlay(e) {
                // fieldContainer.addClass('mobileOverlay');
                $(document.body).addClass('showMobileOverlay');
                $(".search-component").first().hide().toggle("slide");
            }

            function hideOverlay(e) {
                if (e && e.preventDefault) {
                    e.preventDefault();
                }
                // fieldContainer.removeClass('mobileOverlay');
                if (hkexApp.utils.isTablet() || hkexApp.utils.isDesktop()) {
                    return;
                }
                $(".search-component").first().toggle("slide", function () {
                    $(document.body).removeClass('showMobileOverlay');
                    $(this).css("display", "");
                });
            }

            function registerEvents() {
                // hkexApp.Events.on('viewportScroll', handleScroll);
                $(window).on('scroll.searchBar', handleScroll); // need to get mega menu height first
                hkexApp.Events.on('viewportChange', handleResize);
                $('body').on('fontSizeChange', handleResize);
                editButton.on('click.searchBar', showOverlay);                
                closeOverlayButton.on('click.searchBar', hideOverlay);
                applyOverlayButton.on('click.searchBar', hideOverlay);
            }

            function handleResize() {
                megaMenu.removeData('searchBar.sticky-height');
                megaMenu.removeData('searchBar.height');
                mobileHeader.removeData('searchBar.sticky-height');
                mobileHeader.removeData('searchBar.height');
                setParentHeight();
            }

            function handleScroll() {
                scrollPosition = $(window).scrollTop();
                hasScrolled();
            }

            function hideStickyBar() {
                skickyBarIsVisible = false;
                me.removeClass('sticky-search-bar');
                parentContainer.removeClass('sticky-search-bar-container');
                parentContainer.each(function () {
                    this.style.minHeight = '';
                });
            }

            function calOffset() {

            }

            function showStickyBar() {
                skickyBarIsVisible = true;
                var stickyHeaderMenu = mobileHeader;
                if (hkexApp.utils.isTablet() || hkexApp.utils.isDesktop()) {
                    stickyHeaderMenu = megaMenu;
                }
                if (stickyHeaderMenu.hasClass('sticky-menu') || stickyHeaderMenu.hasClass('topbar-sticky')) {
                    var h = stickyHeaderMenu.data('searchBar.sticky-height');
                    if (!h) {
                        h = stickyHeaderMenu.height();
                        stickyHeaderMenu.data('searchBar.sticky-height', h);
                    }
                    me.css('top', h);
                    stickyMenuIsVisible = true;
                } else {
                    me.each(function () {
                        this.style.top = '';
                    });
                    stickyMenuIsVisible = false;
                }
                me.addClass('sticky-search-bar');
                parentContainer.addClass('sticky-search-bar-container');
                setParentHeight();
            }

            function hasScrolled() {
                var stickyHeaderMenu = mobileHeader;
                if (hkexApp.utils.isTablet() || hkexApp.utils.isDesktop()) {
                    stickyHeaderMenu = megaMenu;
                }
                if (scrollPosition > lastScrollPosition) {
                    // Calculate normal megamenu height
                    var menuHeight = stickyHeaderMenu.data('searchBar.height');
                    if (!menuHeight) {
                        menuHeight = stickyHeaderMenu.height();
                        if (!stickyHeaderMenu.hasClass('sticky-menu')) {
                            stickyHeaderMenu.data('searchBar.height', menuHeight);
                        }
                    }
                    if (scrollPosition < headerHeight + errMessageHeight + menuHeight) {
                        hideStickyBar();
                        return;
                    }
                    // Scroll Down
                    var isHeaderSticky = stickyHeaderMenu.is('.sticky-menu,.topbar-sticky');
                    if (!skickyBarIsVisible || stickyMenuIsVisible !== isHeaderSticky) {
                        showStickyBar();
                    }
                } else {
                    // Scroll Up
                    if ($('.ticker-messages').length > 0) {
                        errMessageHeight = $('.ticker-messages').height();
                    }
                    if (scrollPosition < headerHeight + errMessageHeight) {
                        hideStickyBar();
                        return;
                    }
                    if (scrollPosition + $(window).height() < $(document).height()) {
                        var isHeaderSticky = stickyHeaderMenu.is('.sticky-menu,.topbar-sticky');
                        if ((!skickyBarIsVisible || stickyMenuIsVisible !== isHeaderSticky) && lastScrollPosition != scrollPosition) {
                            showStickyBar();
                        }
                    }
                }

                lastScrollPosition = scrollPosition;
            }
        });
    }

    //$('.title-search-search-bar').stickySearchBar();
    $('.ccass-search-search-bar').stickySearchBar();
    $('.director-search-result-search-bar').stickySearchBar();
    $('.content-search-search-bar').stickySearchBar();
})(jQuery, window.hkexApp);

(function ($) {
    'use strict';

    $.fn.extend({ initStickyHeader: initStickyHeader });
    var $stickyHeaderTableList = void 0,
        currentTableIndex = 0,
        previousTableIndex = 0,
        position = 0;

    function initStickyHeader() {
        
        $stickyHeaderTableList = $('.sticky-header-table:visible');
        if ($stickyHeaderTableList.length <= 0) {
            return;
        }
        resetStickyTable();
        lanchTheCurrentTable();
        changeHeaderStickyStatusWhileScrowing();
        /**/
    }

    function resetStickyTable() {
        currentTableIndex = 0;
        previousTableIndex = 0;
        position = 0;
        var $currentTable = $('.sticky-header-table__current-table');
        if ($currentTable.length <= 0) {
            return;
        }
        var $currentSTableHeader = $currentTable.find('thead'),
            $currentTableScroll = $currentTable.closest('.table-scroller-container').find('.scroller-bar-wrapper');
        $currentSTableHeader.removeClass("sticky");
        $currentTableScroll.removeClass("sticky");
        changeHeaderTopPosition($currentSTableHeader, $currentTableScroll, 0, false);
        $currentTable.removeClass('sticky-header-table__current-table');
    }

    //detect which table is in the window, and make it the current table
    function lanchTheCurrentTable() {
        var tableTopPostionList = [],
            tablebottomPosition = [],
            windowHeight = $(window).height(),
            windowScrowed = $(window).scrollTop();
        $stickyHeaderTableList.each(function () {
            tableTopPostionList.push($(this).offset().top);
            tablebottomPosition.push($(this).offset().top + $(this).outerHeight());
        });
        for (var i = 0; i < $stickyHeaderTableList.length; i++) {
            var isOutOftheTable = windowScrowed > tablebottomPosition[i] - windowHeight;
            if (windowScrowed >= tableTopPostionList[i]) {
                currentTableIndex = i;
                if (isOutOftheTable) {
                    currentTableIndex++;
                }
            }
        }
        if (currentTableIndex >= $stickyHeaderTableList.length) {
            currentTableIndex = $stickyHeaderTableList.length - 1;
        }
        $($stickyHeaderTableList[currentTableIndex]).addClass("sticky-header-table__current-table");
    }

    function changeCurrentTable() {
        if (currentTableIndex >= $stickyHeaderTableList.length) {
            currentTableIndex = $stickyHeaderTableList.length - 1;
        }
        if (currentTableIndex !== previousTableIndex) {
            $($stickyHeaderTableList[currentTableIndex]).addClass("sticky-header-table__current-table");
            $($stickyHeaderTableList[previousTableIndex]).removeClass("sticky-header-table__current-table");
        }
    }

    function changeHeaderTopPosition($tableHeader, $Scroller, ScrollTopPosition, isEnableStiky) {
        //var leftFixedTH = $tableHeader.find('.is-fix-col')[0];
        var scrollbrHeight = $Scroller.outerHeight();
        $tableHeader.find('th,td').each(function () {
            if (isEnableStiky) {
                $(this).addClass("sticky");
                $(this).css('top', (ScrollTopPosition + scrollbrHeight) + 'px');
                //$(leftFixedTH).css('z-index', '20');
            } else {
                $(this).removeClass("sticky");
                $(this).css('top', '0');
               // $(leftFixedTH).css('z-index', '10');
            }
        });
        $Scroller.css('top', (ScrollTopPosition + scrollbrHeight) + 'px');
    }

    function changeHeaderStickyStatusWhileScrowing() {
        $(window).off("scroll.stickyTable").on("scroll.stickyTable", function () {
            // setTimeout($.proxy(scrollingFn, this), 300);
            scrollingFn.call(this);
        });
    }
    function scrollingFn() {
        var $currentTable = $('.sticky-header-table__current-table');
        if ($currentTable.length <= 0) {
            return;
        }
        var stickyMenuHeight = $('#hkex_news_megamenu .sticky-menu').outerHeight(),
            stickySearchBarHeight = $('#hkex_news_header_section>.sticky-search-bar').outerHeight();
        stickyMenuHeight = isNaN(stickyMenuHeight) ? 0 : stickyMenuHeight;
        stickySearchBarHeight = isNaN(stickySearchBarHeight) ? 0 : stickySearchBarHeight;
        var $currentSTableHeader = $currentTable.find('thead'),
            $currentTableScroll = $currentTable.closest('.table-scroller-container').find('.scroller-bar-wrapper'),
            tableTopPostion = $currentTable.offset().top,
            tableHeight = $currentSTableHeader.outerHeight() + $currentTable.find('tbody').outerHeight(),
            windowHeight = $(window).height(),
            windowScrowed = $(this).scrollTop(),
            isScrowUp = windowScrowed < position,
            isScrollIntoTable = windowScrowed >= (tableTopPostion - stickySearchBarHeight - stickyMenuHeight),
            isScrowToTheBottom = windowScrowed > (tableTopPostion + tableHeight - stickySearchBarHeight - stickyMenuHeight - $currentSTableHeader.outerHeight() - 100);
        if (isScrollIntoTable) {
            $currentSTableHeader.addClass("sticky");
            $currentTableScroll.addClass("sticky");
            var tableScrollerTopPostion = windowScrowed - tableTopPostion + stickyMenuHeight + stickySearchBarHeight;
            var tableHeaderHeight = $currentSTableHeader.outerHeight();

            changeHeaderTopPosition($currentSTableHeader, $currentTableScroll, tableScrollerTopPostion, true);

            if (isScrowToTheBottom) {
                $currentSTableHeader.removeClass("sticky");
                $currentTableScroll.removeClass("sticky");

                changeHeaderTopPosition($currentSTableHeader, $currentTableScroll, 0, false);
                previousTableIndex = currentTableIndex;
                if (currentTableIndex !== $stickyHeaderTableList.length - 1) {
                    currentTableIndex++;
                }
                changeCurrentTable();
            }
        } else if (isScrowUp) {
            $currentSTableHeader.removeClass("sticky");
            $currentTableScroll.removeClass("sticky");
            changeHeaderTopPosition($currentSTableHeader, $currentTableScroll, 0, false);
            previousTableIndex = currentTableIndex;
            if (currentTableIndex === previousTableIndex && currentTableIndex > 0) {
                currentTableIndex--;
            }
            if (previousTableIndex > 0) {
                changeCurrentTable();
            }
        }
        position = windowScrowed;
    }
})(jQuery);

(function($, hkexApp) {
    // start: sticky header on mobile and tablet

    var scrollPosition = void 0;
    var lastScrollPosition = 0;
    var headerHeight = $('header').height();
    var TABLET_BP = 702;
    var errMessageHeight = 0;

    //for scroll
    var stickyHeaderIsVisable = false;

    /*
    $(window).scroll(function(event) {
        if ($(window).width() <= TABLET_BP) {
            scrollPosition = $(this).scrollTop();
            hasScrolled();
        }
    });
    */

    hkexApp.Events.on('viewportScroll', function(event) {
        if ($(window).width() <= TABLET_BP) {
            headerHeight = $('header').height();
            scrollPosition = $(this).scrollTop();
            hasScrolled();
        }
    });

    function hasScrolled() {
        if (scrollPosition > lastScrollPosition) {
            // Scroll Down
            hideStickyHeader();
        } else {
            // Scroll Up
            if ($('.ticker-messages').length > 0) {
                errMessageHeight = $('.ticker-messages').height();
            }
            if (scrollPosition === 0) {
                hideStickyHeader();
                return;
            }
            if (errMessageHeight > 0 && errMessageHeight >= scrollPosition) {
                hideStickyHeader();
                return;
            }
            if (scrollPosition > 0 && scrollPosition + $(window).height() < $(document).height()) {
                if (!stickyHeaderIsVisable) {
                    showStickyHeader();
                }
            }
        }
        lastScrollPosition = scrollPosition;
    }

    // end: sticky header on mobile and tablet
    function hideStickyHeader() {
        stickyHeaderIsVisable = false;
        $('.topbar').removeClass('topbar-sticky');
        $('.main-menu').removeClass('main-menu-sticky');
        $('body').css('margin-top', '');
    }

    function showStickyHeader() {
        stickyHeaderIsVisable = true;
        $('.topbar').addClass('topbar-sticky');
        $('.main-menu').addClass('main-menu-sticky');
        $('body').css('margin-top', headerHeight + 'px');
    }

    /*
    $(window).on('resize', function() {
        if ($(window).width() > TABLET_BP) {
            hideStickyHeader();
        }
    });
    */

    hkexApp.Events.on('viewportChange', function(ev, data) {
        if (data.newWidth > TABLET_BP) {
            hideStickyHeader();
        }
    });
})(jQuery, window.hkexApp);

(function ($, hkexApp) {
    $.fn.MobileTableList = function () {
        return this.each(function () {
            var $this = $(this);

            function buildColumns() {
                if (!$this.mobileColumns) {
                    $this.mobileColumns = [];
                    $('thead tr:first-child', $this).find('th,td').each(function (i, e) {
                        var cloned = $(this).clone();
                        cloned.find('.header-note,.hideHeadline').remove();
                        var colon = ': ';
                        if ($(this).attr('data-no-colon') == 'true') {
                            colon = '';
                        }
                        if ($(this).attr('data-column-html') == 'true') {
                            $this.mobileColumns.push([$(this).attr('data-column-class'), cloned.text() + colon, $(this).html() + colon]);
                        } else {
                            $this.mobileColumns.push([$(this).attr('data-column-class'), cloned.text() + colon]);
                        }
                        cloned.remove();
                    });
                }
            }

            function createMobileHeading() {
                $('tbody tr', $this).each(function (i, r) {
                    $r = $(this);
                    $('td', $r).each(function (i, c) {
                        $c = $(this);
                        if ($('.mobile-list-heading', $c).length > 0) {
                            return;
                        }
                        if (i < $this.mobileColumns.length && $this.mobileColumns[i]) {
                            var colVal = $this.mobileColumns[i];
                            if (colVal.length == 3) {
                                $c.html($('<div/>').addClass('mobile-list-body').html($c.html())).prepend($('<div/>').addClass('mobile-list-heading').html(colVal[2]));
                            } else {
                                $c.html($('<div/>').addClass('mobile-list-body').html($c.html())).prepend($('<div/>').addClass('mobile-list-heading').text(colVal[1]));
                            }
                        }
                    });
                });
            }

            buildColumns();
            createMobileHeading();
        });
    };
})(jQuery, window.hkexApp);

(function ($) {
    function TableSortPopover(el, options) {
        this.me = $(el);
        this.options = $.extend({}, this.me.data(), options || {});
        this.init();
        this.watch();
    }

    TableSortPopover.prototype = {
        init: function() {
            this.items = $('.popover__content-list .popover__list-item a', this.me);

            if (this.options.target) {
                this.table = $(this.options.target);
            }
        },
        watch: function () {
            var that = this;
            this.items.on('click.tableSortPopover', function () {
                that.sort(this);
            });
            if (this.table) {
                this.table.on('sortEnd.tableSortPopover', function () {
                    that.updateSort(this);
                });
            }
        },
        sort: function (selected) {
            if (this.table) {
                var sortBy = $(selected).data('sortBy');
                var sortDir = $(selected).data('sortDir');
                var sort = [[sortBy, sortDir]];
                this.table.trigger('sorton', [sort]);
            }
        },
        updateSort: function () {
            if (!this.table) return;
            if (!this.table.length) return;
            var table = this.table.get(0);
            var config = table.config;
            if (!config) {
                return;
            }
            var sortList = config.sortList;
            if (sortList.length > 0) {
                var sortVal = sortList[0];
                var sortOptions = this.items.filter('[data-sort-by=' + sortVal[0] + '][data-sort-dir=' + sortVal[1] + ']');
                if (sortOptions.length === 1) {
                    sortOptions.parent().siblings('.popover__list-item').removeClass('sorting-selected');
                    sortOptions.parent().addClass('sorting-selected');
                    if (sortOptions.find('.sort-by-field').length > 0) {
                        var field = sortOptions.find('.sort-by-field').text();
                        sortOptions.closest('.page-list-mobile-toolbar')
                            .find('.sort__dropdown .current-sort-by')
                            .text(field);
                    }
                }
            }
        }
    };
    var allowedTypes = ['object', 'string'];
    function Plugin(option) {
        return this.filter('[data-toggle="table-sort"]').each(function () {
            var options = allowedTypes.indexOf(typeof option === 'undefined' ? 'undefined' : _typeof(option)) !== -1 && option;
            var data = $(this).data('hkex.tableSortPopover');
            if (!data) $(this).data('hkex.tableSortPopover', (data = new TableSortPopover(this, options)));
            if (typeof option == 'string' && typeof data[option] == 'function') data[option]();
        });
    }

    $.fn.tableSortPopover = Plugin;

    $('.mobileSort[data-toggle="table-sort"]').tableSortPopover();
})(jQuery);

(function($) {
    'use strict';

    $.fn.scrollTabs = function(opts) {
        var initialize = function initialize(state) {
            opts = $.extend({}, $.fn.scrollTabs.defaultOptions, opts);

            if ($(this).prop('tagName').toLowerCase() === 'ul') {
                this.itemTag = 'li';
            }

            if ($(this).css('position') === null || $(this).css('position') === 'static') {
                $(this).css('position', 'relative');
            }

            $(this.itemTag, this).last().addClass('scroll_tab_last');
            $(this.itemTag, this).first().addClass('scroll_tab_first');
			
			if (!$(this.itemTag, this).hasClass(opts.tab_active_class)) {
				$(this.itemTag, this).first().addClass(opts.tab_active_class);
			}

            $(this).html("<div class='scroll_tab_left_button'><img class='scroll_arrow_left' src='" + opts.left_arrow_img + "' alt='left arrow'></div><div class='scroll_tab_inner'>" + $(this).html() + "</div><div class='scroll_tab_right_button'><img class='scroll_arrow_right' src='" + opts.right_arrow_img + "' alt='right arrow'></div>");

            var _this = this;

            $('.scroll_tab_inner', this).css({
                'margin': '0px',
                'overflow': 'hidden',
                'white-space': 'nowrap',
                '-ms-text-overflow': 'clip',
                'text-overflow': 'clip',
                'position': 'absolute',
                'top': '0px',
                'left': '0px',
                'right': '0px'
            });

            // start: set initial arrow button position
            $('.scroll_tab_left_button', this).css({
                'position': 'absolute',
                'left': '0px',
                'top': '0px',
                'width': opts.left_arrow_size + 'px',
                'cursor': 'pointer'
            });

            $('.scroll_tab_right_button', this).css({
                'position': 'absolute',
                'right': '0px',
                'top': '0px',
                'width': opts.right_arrow_size + 'px',
                'cursor': 'pointer'
            });
            // end: set initial arrow button position

            // start: show and hide arrow button
            var size_checking = function size_checking() {
                var panel_width = Math.round($('.scroll_tab_inner', _this).outerWidth());

                if ($('.scroll_tab_inner', _this)[0].scrollWidth > panel_width) {
                    $('.scroll_tab_right_button', _this).show();
                    $('.scroll_tab_left_button', _this).show();

                    if ($('.scroll_tab_inner', _this)[0].scrollWidth - panel_width == $('.scroll_tab_inner', _this).scrollLeft()) {
                        $('.scroll_tab_right_button', _this).hide();
                    } else {
                        $('.scroll_tab_right_button', _this).show();
                    }
                    if ($('.scroll_tab_inner', _this).scrollLeft() == 0) {
                        $('.scroll_tab_left_button', _this).hide();
                    } else {
                        $('.scroll_tab_left_button', _this).show();
                    }
                } else {
                    $('.scroll_tab_right_button', _this).hide();
                    $('.scroll_tab_left_button', _this).hide();
                }
            };

            size_checking();

            state.delay_timer = setInterval(function() {
                size_checking();
            }, 500);
            // end: show and hide arrow button

            // start: deal with press behaviour
            var press_and_hold_timeout;

            $('.scroll_tab_right_button', this).mousedown(function(e) {
                e.stopPropagation();
                var scrollRightFunc = function scrollRightFunc() {
                    var left = $('.scroll_tab_inner', _this).scrollLeft();
                    $('.scroll_tab_inner', _this).animate({ scrollLeft: left + opts.scroll_distance + 'px' }, opts.scroll_duration);
                };
                scrollRightFunc();

                press_and_hold_timeout = setInterval(function() {
                    scrollRightFunc();
                }, opts.scroll_duration);
            }).bind("mouseup mouseleave", function() {
                clearInterval(press_and_hold_timeout);
            });

            $('.scroll_tab_left_button', this).mousedown(function(e) {
                e.stopPropagation();
                var scrollLeftFunc = function scrollLeftFunc() {
                    var left = $('.scroll_tab_inner', _this).scrollLeft();
                    $('.scroll_tab_inner', _this).animate({ scrollLeft: left - opts.scroll_distance + 'px' }, opts.scroll_duration);
                };
                scrollLeftFunc();

                press_and_hold_timeout = setInterval(function() {
                    scrollLeftFunc();
                }, opts.scroll_duration);
            }).bind("mouseup mouseleave", function() {
                clearInterval(press_and_hold_timeout);
            });
            // end: deal with press behaviour

            // start: tab switch
            $('.scroll_tab_inner > ' + this.itemTag, this).click(function(e) {
				if (!$(this).is('[data-clickable=true]')) {
					e.stopPropagation();
					e.preventDefault();
				}
                var preTarget = void 0,
                    target = void 0;
                $('.scroll_tab_inner > ' + _this.itemTag, _this).not(this).each(function () {
                    preTarget = '#' + $(this).attr('data-value');
                    $(preTarget).hide();
                    $(this).removeClass(opts.tab_active_class);
                });
                // $('.' + opts.tab_active_class, _this).removeClass(opts.tab_active_class);
                if (opts.use_target) {
                    target = $(this).attr('data-target');
                    $(target).addClass('in').siblings('.' + opts.panel_class).removeClass('in');
                } else {
                    target = '#' + $(this).attr('data-value');
                    $(target).show();
                }
                $(this).addClass(opts.tab_active_class);

                scroll_selected_into_view.call(_this, state);
                $(_this).trigger('change');
            });
            $('.scroll_tab_inner > ' + this.itemTag, this).filter('.' + opts.tab_active_class).click();
            // end: tab switch

            // start: swipe
            var touchstartX;
            $('.scroll_tab_inner', this).on('touchstart', function(e) {
                e.stopPropagation();
                touchstartX = e.originalEvent.touches[0].clientX;
            });
            $('.scroll_tab_inner', this).on('touchend', function(e) {
                e.stopPropagation();
                var touchendX = e.originalEvent.changedTouches[0].clientX;
                if (touchendX > touchstartX && touchendX - touchstartX > 40) {
                    var left = $('.scroll_tab_inner', _this).scrollLeft();
                    $('.scroll_tab_inner', _this).animate({ scrollLeft: left - opts.scroll_distance + 'px' }, opts.scroll_duration);
                } else if (touchendX < touchstartX && touchstartX - touchendX > 40) {
                    var left = $('.scroll_tab_inner', _this).scrollLeft();
                    $('.scroll_tab_inner', _this).animate({ scrollLeft: left + opts.scroll_distance + 'px' }, opts.scroll_duration);
                }
            });
            // end: swipe

            // start: tabindex
            $('.scroll_tabs_content div:visible').find('input,textarea,select,button,a').attr('tabindex', '-1');
            $('.scroll_tabs_container li').unbind('keyup').on('keyup', function(e) {
                if (e.keyCode === 13) {
                    if ($(e.target).attr('data-flag') === undefined) {
                        var tabContent = '#' + $(e.target).parent().attr('data-value');
                        if ($(tabContent).find('input,textarea,select,button,a').length > 0) {
                            $(tabContent).find('input,textarea,select,button,a').removeAttr('tabindex');
                            $(e.target).parent().nextAll().children('a').attr('tabindex', '-1');
                            $(e.target).attr('data-flag', 'true');
                            contentTab(tabContent);
                        }
                    } else if ($(e.target).attr('data-flag') === 'true') {
                        $(e.target).parent().nextAll().children('a').removeAttr('tabindex');
                        $(e.target).removeAttr('data-flag');
                    }
                }
            });
            var contentTab = function contentTab(tabContent) {
                $(tabContent).find('input,textarea,select,button,a').filter(':visible:last').unbind('keydown').on('keydown', function(e) {
                    if (e.keyCode === 13) {
                        $(tabContent).find('input,textarea,select,button,a').filter(':visible:last').unbind('keydown');
                        setTimeout(function() {
                            contentTab(tabContent);
                        }, 100);
                        return;
                    }
                    var currentLi = $('.scroll_tabs_container').find("li[data-value='" + tabContent.substr(1) + "']");
                    if (e.keyCode === 9 && !e.shiftKey && currentLi.next().length > 0) {
                        currentLi.nextAll().children('a').removeAttr('tabindex');
                        currentLi.children('a').removeAttr('data-flag');
                        e.preventDefault();
                        $(tabContent).find('input,textarea,select,button,a').attr('tabindex', '-1');
                        $(tabContent).click();
                        currentLi.next().children('a').focus();
                    }
                });
            };
            // end: tabindex
        };

        // start: "slide" it into view if not fully visible
        var scroll_selected_into_view = function scroll_selected_into_view(state) {
            var _this = this;

            var selected_item = $('.' + opts.tab_active_class, _this);

            var left = $('.scroll_tab_inner', _this).scrollLeft();
            var scroll_width = $('.scroll_tab_inner', _this).width();
            if (selected_item && typeof selected_item !== 'undefined' && selected_item.position() && typeof selected_item.position() !== 'undefined') {
                if (selected_item.position().left < opts.left_arrow_size) {
                    $('.scroll_tab_inner', _this).animate({ scrollLeft: left + selected_item.position().left - opts.left_arrow_size + 'px' }, opts.scroll_duration);
                } else if (selected_item.position().left + selected_item.outerWidth() + opts.right_arrow_size > scroll_width) {
                    $('.scroll_tab_inner', _this).animate({ scrollLeft: left + (selected_item.position().left + selected_item.outerWidth() + opts.right_arrow_size - scroll_width) + 'px' }, opts.scroll_duration);
                }
            }
        };
        // end: "slide" it into view if not fully visible

        var ret = [];
        this.each(function() {
            var state = {};
            initialize.call(this, state);
            var context_obj = this;

            ret.push({
                scrollSelectedIntoView: function scrollSelectedIntoView() {
                    scroll_selected_into_view.call(context_obj, state);
                }
            });
        });

        if (this.length == 1) {
            return ret[0];
        } else {
            return ret;
        }
    };

    $.fn.scrollTabs.defaultOptions = {
        scroll_distance: 300,
        scroll_duration: 300,
        left_arrow_size: 35,
        right_arrow_size: 35,
        left_arrow_img: '/ncms/images/left-arrow-session.svg',
        right_arrow_img: '/ncms/images/right-arrow-session.svg',
        tab_active_class: 'tab_selected',
        use_target: false,
        panel_class: 'box_content'
    };

    // $('.scroll_tabs').scrollTabs();
    $('.scroll_tabs').each(function () {
        var o = {};
        var data = $(this).data();
        if (data && data.leftArrowImg) {
            o.left_arrow_img = data.leftArrowImg;
        }
        if (data && data.rightArrowImg) {
            o.right_arrow_img = data.rightArrowImg;
        }
        $(this).scrollTabs(o);
    });
    if (document.readyState === "complete") {
        $('.scroll_tabs').css('display', 'block');
    }
    $(window).on('load', function() {
        $('.scroll_tabs').css('display', 'block');
    });
})(jQuery);

(function($) {
    var $wrapper = $('.ticker-messages');
    var $tickerBell = $('.topbar__ticker');

    $wrapper.on('tickerHidden', checkTicker);
    $tickerBell.on('click.exTicker', function () {
        $wrapper.find('.ticker').each(function () {
            removeTickerCookie(this.id);
            $(this).show();
        });
        $wrapper.find('.ticker').MarketTicker();
        checkTicker();
    });

    function checkTicker() {
        if ($wrapper.find('.ticker').length > 0) {
            var action = $wrapper.find('.ticker:hidden').length > 0 ? 'addClass' : 'removeClass';
            $tickerBell[action]('showTicker');
        } else {
            $tickerBell.removeClass('showTicker');
        }
    }

    function registerClose(e) {
        var $tickerClose = $(e.target);
        var $ticker = $tickerClose.closest('.ticker');
        setTickerCookie($ticker.attr("id"));
        $ticker.hide();
        $wrapper.trigger('tickerHidden');
    }

    function closeTickerAfter(el, time) {
        setTimeout(function () {
            setTickerCookie(el.attr("id"));
            el.hide();
            $wrapper.trigger('tickerHidden');
        }, time);
    }

    function setTickerCookie(tickerId) {
        var id = 'ticket-' + tickerId;
        var name = 'closed_' + id;
        $.cookie(name, id, { path: "/" });
    }

    function removeTickerCookie(tickerId) {
        var id = 'ticket-' + tickerId;
        var name = 'closed_' + id;
        $.removeCookie(name, { path: "/" });
    }

    $.fn.MarketTicker = function() {
        return this.each(function (i, e) {
            var ticker = $(this);
            var options = ticker.data();
            if (options.duration && options.duration > 0) {
                closeTickerAfter(ticker, options.duration * 1000);
            }
            ticker.find('.ticker__close').off('click.exTicker', registerClose);
            ticker.find('.ticker__close').on('click.exTicker', registerClose);
            // ticker.show();
        });
    };

    $wrapper.find('.ticker').MarketTicker();
    checkTicker();
})(jQuery);

(function ($, hkexApp) {
    function detectSubTitleWidth() {
        var subtitle = $('.common-title-content .common-tc-subtitle');
        subtitle.each(function () {
            var title = $(this).prev('.common-tc-title');
            var subtitleWidth = $(this).width();
            $(this).css('min-width', subtitleWidth + 'px');
            title.css('max-width', 'calc(100% - ' + (subtitleWidth + 1) + 'px )');
        });
        
    }
    $('.font-sizes__link').on('click', function () {
        detectSubTitleWidth();
    })
    detectSubTitleWidth();
})(jQuery, window.hkexApp);

(function ($) {
    function ToggleReportHeadline(el, options) {
        this.me = $(el);
        this.options = $.extend({}, this.me.data(), options || {});
        this.init();
        this.toggle();
    }

    ToggleReportHeadline.prototype = {
        init: function () {
            if (this.options.target) {
                this.container = $(this.options.target);
            }
        },
        toggle: function () {
            this.me.toggleClass("showing");
            var show = this.me.hasClass("showing");
            this.toggleHeadline(show);
        },
        show: function () {
            this.me.addClass("showing");
            this.toggleHeadline(true);
        },
        hide: function () {
            this.me.removeClass("showing");
            this.toggleHeadline(false);
        },
        toggleHeadline: function (show) {
            if (this.container) {
                $('.headline', this.container)[show ? 'removeClass' : 'addClass']('hidden-headline');
                var eventName = show ? "headlineShow" : "headlineHide";
                var ev = new $.Event(eventName);
                this.container.trigger(ev);
            }
        }
    };
    var allowedTypes = ['object', 'string'];
    function Plugin(option) {
        return this.filter('[data-toggle="headline"]').each(function () {
            var options = allowedTypes.indexOf(typeof option === 'undefined' ? 'undefined' : _typeof(option)) !== -1 && option;
            var data = $(this).data('hkex.toggleReportHeadline');
            if (!data) $(this).data('hkex.toggleReportHeadline', (data = new ToggleReportHeadline(this, options)));
            if (typeof option == 'string' && typeof data[option] == 'function') data[option]();
        });
    }

    $.fn.toggleReportHeadline = Plugin;

    $('.hideHeadline a[data-toggle="headline"]').on('click.hkex.toggleReportHeadline.data-api', function (e) {
        var $this = $(this);
        if ($this.attr('data-target')) e.preventDefault();

        var data = $this.data('hkex.toggleReportHeadline');
        var option = data ? 'toggle' : $this.data();
        Plugin.call($this, option);
    });
})(jQuery);

+function ($) {
    'use strict';

    var VideoImages = {
        PLAY: "/ncms/images/videocontrol/play.png",
        FULLSCREEN_PLAY: "/ncms/images/videocontrol/playfullscreen.png",
        LOADING: "/ncms/images/videocontrol/video_loading.gif",
        FULLSCREEN_MUTE: "/ncms/images/videocontrol/mutefullscreen.png",
        FULLSCREEN_SOUND: "/ncms/images/videocontrol/soundFulScreen.png",
        PAUSE: "/ncms/images/videocontrol/pause.png",
        FULLSCREEN_PAUSE: "/ncms/images/videocontrol/pausefullscreen.png"
    };

    $.fn.extend({ initVideoControl: initVideoControl });
    var userAgent = navigator.userAgent,
	    fullScreenForOthers = false,
	    isShowreel = false,
	    loading = false,
	    isIE = false,
	    isEdge = false,
	    isIE9 = false,
	    isChrome = false,
	    isIphone = false,
	    isIpad = false, 
	    isIE11 = false,
	    isIE10 = false,
	    isAndroid = false,
	    isFirstLoad = true,
	    firstLoadErrorCount = 0,
	    volForVolumeDiv = void 0,
	    progressForProDiv = void 0,
	    playButtonlist = void 0,
	    videoContainerList = void 0,
	    seekBarList = void 0,
	    muteBuList = void 0,
	    fullScreenBuList = void 0,
	    fullScreenPlayBuList = void 0,
	    volumebarList = void 0,
	    currentVideo = void 0;

    function initVideoControl(isShowReel) {
        playButtonlist = $(".video-control__play-pause-button");
        videoContainerList = $(".video-control");
        seekBarList = $(".video-control__progressbar-seekbar");
        muteBuList = $('.video-control__mute-button');
        fullScreenBuList = $('.video-control__fullscreen-button');
        fullScreenPlayBuList = $('.video-control__fullscreen-play-pause-button');
        volumebarList = $('.video-control__volumebar-seekbar');
        browserDetect();
        addEventForVolumeBar();
        addEventForPlayButton();
        addEventForVideoContrainer();
        addEventForProgreeSeekBar();
        addEventForMuteButton();
        addEventForKeyBoardEvent();
        addEventForFullScreenButton();
        isShowreel = isShowReel;
    }

    function browserDetect() {

        var trident = userAgent.indexOf('Trident/');
        if (trident > 0) {
            // IE 11 => return version number
            isIE11 = userAgent.indexOf("rv:11.0") > 0;
        }
        isIE10 = userAgent.indexOf("MSIE 10.0") > 0;
        isIE = userAgent.indexOf("compatible") > -1 && userAgent.indexOf("MSIE") > -1 && !(userAgent.indexOf("Opera") > -1);
        isEdge = userAgent.indexOf('Edge/') > 0;
        isIE9 = userAgent.indexOf("MSIE 9.0") > 0;
        isChrome = userAgent.indexOf("Chrome") > -1;
        isAndroid = hkexApp.utils.isAndroidMobile(); //android
        isIphone = userAgent.indexOf("iPhone") > 0;
        isIpad = userAgent.indexOf("iPad") > 0;
    }

    function detectIE() {

        // Test values; Uncomment to check result …

        // IE 10
        // userAgent = 'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)';

        // IE 11
        // userAgent = 'Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko';

        // Edge 12 (Spartan)
        // userAgent = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36 Edge/12.0';

        // Edge 13
        // userAgent = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2486.0 Safari/537.36 Edge/13.10586';

        var msie = userAgent.indexOf('MSIE ');
        if (msie > 0) {
            // IE 10 or older => return version number
            return parseInt(userAgent.substring(msie + 5, userAgent.indexOf('.', msie)), 10);
        }

        var trident = userAgent.indexOf('Trident/');
        if (trident > 0) {
            // IE 11 => return version number
            var rv = userAgent.indexOf('rv:');
            return parseInt(userAgent.substring(rv + 3, userAgent.indexOf('.', rv)), 10);
        }

        var edge = userAgent.indexOf('Edge/');
        if (edge > 0) {
            // Edge (IE 12+) => return version number
            return parseInt(userAgent.substring(edge + 5, userAgent.indexOf('.', edge)), 10);
        }

        // other browser
        return false;
    }

    function addEventForVolumeBar() {
        var _loop = function _loop(i) {
            var videoControl = $(volumebarList[i]).parents(".video-control");
            var video = getElementFromParentNode(videoControl, "video-control__embed-video");
            var volumeDiv = getElementFromParentNode(videoControl, "video-control__volumediv");
            var volumeInner = getElementFromParentNode(videoControl, "video-control__volumediv-innerbar");
            if (isShowreel) {
                if (isIE9 || isEdge) {
                    volumebarList[i].style.display = "none";
                    volumeDiv.style.display = "block";
                }
                if (detectIE()) {
                    $(volumebarList[i].parentNode).addClass("video-control__volumebar-ie");
                }
            }

            //added by laam 20170317
            if (isIpad || isIphone) {
                volumebarList[i].style.display = "none";
                volumeDiv.style.display = "none";
            }//

            $(volumeDiv).on('click', function (e) {
                var w = $(this).width(),
				    x = e.offsetX;
                volForVolumeDiv = (x / w).toFixed(1);
                video.volume = volForVolumeDiv / 10;
                $(volumeInner).css('width', volForVolumeDiv * 100 + '%');

            });

            volumebarList[i].addEventListener("change", function () {
                video.volume = volumebarList[i].value / 10;
            });
        };

        for (var i = 0; i < volumebarList.length; i++) {
            _loop(i);
        }
    }

    function addEventForPlayButton() {
        addEventForPlayButtonAtFullScreen();
        addEventForCenterPlayButton();
    }
    function addEventForCenterPlayButton() {
        if (playButtonlist.length <= 0) {
            return;
        }

        var _loop2 = function _loop2(i) {
            var videoControl = $(playButtonlist[i]).parents(".video-control");
            var videoControlContainer = getElementFromParentNode(videoControl, "video-control__barcontainer");
            var fullScreenPlayButton = getElementFromParentNode(videoControl, "video-control__fullscreen-play-pause-button");
            if (isIphone) {
                //playButtonlist[i].style.display="none";
            }
            var video = getElementFromParentNode(videoControl, "video-control__embed-video");
            playButtonlist[i].addEventListener("mouseover", function () {
                if (isIphone || isIpad || isAndroid) {
                    return;
                }
                playButtonlist[i].style.opacity = "0.6";
            });

            playButtonlist[i].addEventListener("mouseout", function () {
                if (isIphone || isIpad || isAndroid) {
                    return;
                }
                playButtonlist[i].style.opacity = "0.8";
            });
            playButtonlist[i].addEventListener("click", function () {
                // if(isIphone){return;}
                if (isIpad) {
                    videoControlContainer.style.display = "block";
                }
				videoPlayPauseWhileChangeElementDispay(video, playButtonlist[i], fullScreenPlayButton);
                if (isAndroid && video.webkitRequestFullscreen) {
                    video.webkitRequestFullscreen();
                }                
            });
        };

        for (var i = 0; i < playButtonlist.length; i++) {
            _loop2(i);
        }
    }
    function addEventForPlayButtonAtFullScreen() {
        var _loop3 = function _loop3(i) {
            var videoControl = $(fullScreenPlayBuList[i]).parents(".video-control");
            var video = getElementFromParentNode(videoControl, "video-control__embed-video");
            var playButton = getElementFromParentNode(videoControl, "video-control__play-pause-button");
            fullScreenPlayBuList[i].addEventListener("click", function () {
                videoPlayPauseWhileChangeElementDispay(video, playButton, fullScreenPlayBuList[i]);
            });
        };

        for (var i = 0; i < fullScreenPlayBuList.length; i++) {
            _loop3(i);
        }
    }

    function addEventForVideo(video, fullScreenPlayButton, playButton, videoControlContainer) {

        var videoControl = $(video).parents(".video-control");
        var progressBar = getElementFromParentNode(videoControl, "video-control__progressbar");
        var seekbar = getElementFromParentNode(videoControl, "video-control__progressbar-seekbar");
        var playButtonBackgroundImg = void 0;

        video.addEventListener('pause', function () {
            changePlayButtonPicture(video, playButton, fullScreenPlayButton);
            if (isIphone) {
                return;				
            }
            playButton.style.display = "block";
            if (isAndroid) {
                return;
            }
            videoControlContainer.style.display = "block";
        });

        video.addEventListener('play', function () {
            playButton.style.display = "none";
            isFirstLoad = false;
        });
        video.addEventListener('loadstart', function () {
            // video.currentTime=0;
        });
        if (isIE9) {
            $(video).attr("preload", "none");
        }
        video.addEventListener("click", function () {
            if (loading) {
                return;
            }
            if (isIphone) {
                return;
			}
			
            videoPlayPauseWhileChangeElementDispay(video, playButton, fullScreenPlayButton);
        });
        video.addEventListener('ended', function () {
            video.currentTime = 0;
            video.pause();
            video.load();
            var poster = video.getAttribute("poster");
            video.setAttribute('poster', poster);

            playButton.style.display = "block";
            playButton.style.backgroundImage = "url('" + VideoImages.PLAY + "')";
            fullScreenPlayButton.style.backgroundImage = "url('" + VideoImages.FULLSCREEN_PLAY + "')";
            fullScreenPlayButton.style.backgroundSize = "90%";
            videoControlContainer.style.display = "none";
            videoControlContainer.style.display = "block";
            if (isIphone) {
                playButton.style.display = "block";
            }
        });

        video.addEventListener('error', function (e) {
            if (isFirstLoad) {
                if (firstLoadErrorCount > 0) {
                    return;
                }
                firstLoadErrorCount++;
            }
            switch (e.target.error.code) {
                case e.target.error.MEDIA_ERR_ABORTED:
                    alert('You aborted the video playback.');
                    break;
                case e.target.error.MEDIA_ERR_NETWORK:
                    alert('A network error caused the video download to fail.');
                    break;
                case e.target.error.MEDIA_ERR_DECODE:
                    alert('The video playback was aborted due to a corruption problem or because the video used features your browser did not support.');
                    break;
                case e.target.error.MEDIA_ERR_SRC_NOT_SUPPORTED:
                    alert('The video not be loaded, either because the server or network failed or because the format is not supported.');
                    break;
                default:
                    alert('An unknown error occurred.');
                    break;
            }
        });

        video.addEventListener('waiting', function () {
            if (isIE9 || isEdge) {
                return;
            }
            loading = true;
            if (fullScreenForOthers) {
                playButton.style.zIndex = "2147483647";
            }

            playButton.style.backgroundImage = "url('" + VideoImages.LOADING + "')";
            $(playButton).attr("disabled", "true");
        });

        video.addEventListener('canplay', function () {
            if (isIE9) {
                return;
            }
            loading = false;
            playButton.style.zIndex = "auto";

            changePlayButtonPicture(video, playButton, fullScreenPlayButton);
            playButton.removeAttribute("disabled");
        });

        if (detectIE() || isChrome) {
            video.addEventListener('progress', function () {
                if (video.currentTime === 0) {
                    return;
                }
                if (isChrome && video.paused === true) {
                    return;
                }
                var bufferedEnd = video.buffered.end(video.buffered.length - 1);
                var duration = video.duration;

                if (bufferedEnd / duration * 100 - seekbar.value < 0) {
                    loading = true;
                    playButtonBackgroundImg = playButton.style.backgroundImage;
                    playButton.style.backgroundImage = "url('" + VideoImages.LOADING + "')";
                    $(playButton).attr("disabled", "true");
                    if (fullScreenForOthers) {
                        playButton.style.zIndex = "2147483648";
                    }
                } else {
                    loading = false;
                    playButton.style.zIndex = "auto";

                    changePlayButtonPicture(video, playButton, fullScreenPlayButton);
                    playButton.removeAttribute("disabled");
                }
            });
        }
    }
    function addEventForVideoContrainer() {
        var _loop4 = function _loop4(i) {
            var videoControl = videoContainerList[i];
            var playButton = getElementFromParentNode(videoControl, "video-control__play-pause-button");
            var video = getElementFromParentNode(videoControl, "video-control__embed-video");
            var videoControlContainer = getElementFromParentNode(videoControl, "video-control__barcontainer");
            var fullScreenPlayButton = getElementFromParentNode(videoControl, "video-control__fullscreen-play-pause-button");
            if (isIphone) {
                //video.controls = "true";
                videoControlContainer.style.display = "none";
            }
            if (isAndroid && isShowreel) {
                videoControlContainer.style.display = "none";
            }

            addEventForVideo(video, fullScreenPlayButton, playButton, videoControlContainer);

            videoContainerList[i].addEventListener("mouseover", function () {
                if (isIphone || isIpad || isAndroid) {
                    return;
                }
                if (video.paused != true) {
                    playButton.style.display = "block";
                    videoControlContainer.style.display = "block";
                }
            });
            videoContainerList[i].addEventListener("mouseout", function () {
                if (isIphone || isIpad || isAndroid) {
                    return;
                }
                if (video.paused != true) {
                    playButton.style.display = "none";
                    videoControlContainer.style.display = "none";
                }
            });
        };

        for (var i = 0; i < videoContainerList.length; i++) {
            _loop4(i);
        }
    }

    function addEventForProgreeDiv(progressSeekDiv, video, proDivInnerBar) {
        $(progressSeekDiv).on('click', function (e) {
            var w = $(this).width(),
			    x = e.offsetX;
            progressForProDiv = (x / w).toFixed(3);

            var duration = video.duration;
            video.currentTime = (duration * progressForProDiv).toFixed(0);

            $(proDivInnerBar).css('width', progressForProDiv + '%');
        });
    }
    function addEventForProgreeSeekBar() {

        var _loop5 = function _loop5(i) {
            var videoControl = $(seekBarList[i]).parents(".video-control");
            var video = getElementFromParentNode(videoControl, "video-control__embed-video");
            var timeBar = getElementFromParentNode(videoControl, "video-control__progressbar-time");
            var progressSeekDiv = getElementFromParentNode(videoControl, "video-control__progressbar-seekdiv");
            var totalTimeSpan = getElementFromParentNode(videoControl, "video-control__timebar-totaltime");
            var currentTimeSpan = getElementFromParentNode(videoControl, "video-control__timebar-currenttime");
            var proDivInnerBar = getElementFromParentNode(videoControl, "video-control__progressbar-seekdivInnerbar");

            if (userAgent.indexOf("Firefox") > -1) {
                seekBarList[i].style.top = "17px";
            }
            if (isIE10 || isIE11) {
                seekBarList[i].style.top = "7px";
            }

            if (isEdge) {

                timeBar.style.display = "none";
                seekBarList[i].style.display = "none";
                progressSeekDiv.style.display = "block";
                progressSeekDiv.style.top = "24px";
                addEventForProgreeDiv(progressSeekDiv, video, proDivInnerBar);
            }
            if (userAgent.indexOf("MSIE 9.0") > 0) {
                seekBarList[i].style.display = "none";
                progressSeekDiv.style.display = "block";
                addEventForProgreeDiv(progressSeekDiv, video, proDivInnerBar);
            }

            //laam added 20170317
            if (isIpad || isIphone) {
                addEventForProgreeDiv(seekBarList[i], video, proDivInnerBar);
            }//

            seekBarList[i].addEventListener("change", function () {
                var bufferedEnd = video.buffered.end(video.buffered.length - 1);
                var duration = video.duration;
                var time = video.duration * (seekBarList[i].value / 100);
                video.currentTime = time;
                if (userAgent.indexOf("Safari") > -1 && !(userAgent.indexOf("Chrome") > -1) && !isEdge) {
                    timeBar.style.width = seekBarList[i].value + "%";
                }
            });

            totalTimeSpan.innerHTML = formatTime(parseInt(video.duration / 60)) + ":" + formatTime(parseInt(video.duration % 60));
            currentTimeSpan.innerHTML = "00" + ":" + "00" + "/";
            video.addEventListener("timeupdate", function () {
                currentTimeSpan.innerHTML = formatTime(parseInt(video.currentTime / 60)) + ":" + formatTime(parseInt(video.currentTime % 60)) + "/";
                totalTimeSpan.innerHTML = formatTime(parseInt(video.duration / 60)) + ":" + formatTime(parseInt(video.duration % 60));

                var value = 100 / video.duration * video.currentTime;
                seekBarList[i].value = value;
                if ((userAgent.indexOf("Chrome") > -1 || userAgent.indexOf("Safari") > -1) && !isEdge) {
                    timeBar.style.width = value + "%";
                }
                if (userAgent.indexOf("MSIE 9.0") > 0 || isEdge) {
                    proDivInnerBar.style.width = value + "%";
                }
            });
        };

        for (var i = 0; i < seekBarList.length; i++) {
            _loop5(i);
        }
    }

    function addEventForMuteButton() {
        var _loop6 = function _loop6(i) {
            var videoControl = $(muteBuList[i]).parents(".video-control");
            var video = getElementFromParentNode(videoControl, "video-control__embed-video");
            if (isIpad) {
                muteBuList[i].style.display = "none";
            }
            muteBuList[i].addEventListener("click", function () {
                if (video.muted == false) {
                    video.muted = true;
                    muteBuList[i].style.backgroundImage = "url('" + VideoImages.FULLSCREEN_MUTE + "')";
                } else {
                    video.muted = false;
                    muteBuList[i].style.backgroundImage = "url('" + VideoImages.FULLSCREEN_SOUND + "')";
                }
            });
        };

        for (var i = 0; i < muteBuList.length; i++) {
            _loop6(i);
        }
    }

    function addEventForKeyBoardEvent() {
        $(document).keyup(function (event) {
            if (event.keyCode === 27) {
                if (userAgent.indexOf("Chrome") > -1) {
                    return;
                }
                if (isIE9 || isIE10 || userAgent.indexOf("Firefox") > -1) {
                    var videoControl = $(currentVideo).parents(".video-control");
                    var controlBarContainer = getElementFromParentNode(videoControl, "video-control__barcontainer");
                    var progressBar = getElementFromParentNode(videoControl, "video-control__progressbar");
                    var fullScreeButton = getElementFromParentNode(videoControl, "video-control__fullscreen-button");
                    var progressSeekBar = getElementFromParentNode(videoControl, "video-control__progressbar-seekbar");
                    var timeseekBar = getElementFromParentNode(videoControl, "video-control__progressbar-time");
                    var _fullScreenPlayButton = getElementFromParentNode(videoControl, "video-control__fullscreen-play-pause-button");
                    var muteButton = getElementFromParentNode(videoControl, "video-control__mute-button");
                    var volumebar = getElementFromParentNode(videoControl, "video-control__volumebar");
                    var timeShowBar = getElementFromParentNode(videoControl, "video-control__timebar");
                    var _progressSeekDiv = getElementFromParentNode(videoControl, "video-control__progressbar-seekdiv");
                    var volumediv = getElementFromParentNode(videoControl, "video-control__volumediv");
                    var _playButton = getElementFromParentNode(videoControl, "video-control__play-pause-button");

                    recoverTheScreenForOhters(currentVideo);
                    recoverTheControlBar(controlBarContainer, _playButton, progressBar, progressSeekBar, timeseekBar, _progressSeekDiv, _fullScreenPlayButton, muteButton, volumebar, timeShowBar, fullScreeButton, volumediv);
                    if (isShowreel) {
                        currentVideo.pause();
                        recoverFullScreenForShowReel(currentVideo, _playButton, progressBar, progressSeekBar, timeseekBar, _progressSeekDiv, _fullScreenPlayButton, muteButton, volumebar, timeShowBar, fullScreeButton, volumediv);
                    }
                }
            }
        });
    }

    function addEventForFullScreenButton() {
        var _loop7 = function _loop7(i) {
            var videoControl = $(fullScreenBuList[i]).parents(".video-control");
            var video = getElementFromParentNode(videoControl, "video-control__embed-video");
            var controlBarContainer = getElementFromParentNode(videoControl, "video-control__barcontainer");
            var progressBar = getElementFromParentNode(videoControl, "video-control__progressbar");
            var progressSeekBar = getElementFromParentNode(videoControl, "video-control__progressbar-seekbar");
            var timeseekBar = getElementFromParentNode(videoControl, "video-control__progressbar-time");
            var fullScreenPlayButton = getElementFromParentNode(videoControl, "video-control__fullscreen-play-pause-button");
            var muteButton = getElementFromParentNode(videoControl, "video-control__mute-button");
            var volumebar = getElementFromParentNode(videoControl, "video-control__volumebar");
            var timeShowBar = getElementFromParentNode(videoControl, "video-control__timebar");
            var fullScreeButton = fullScreenBuList[i];
            var progressSeekDiv = getElementFromParentNode(videoControl, "video-control__progressbar-seekdiv");
            var volumediv = getElementFromParentNode(videoControl, "video-control__volumediv");
            var playButton = getElementFromParentNode(videoControl, "video-control__play-pause-button");

            if (isIpad) {
                fullScreeButton.style.width = "12px";
            }

            fullScreenBuList[i].addEventListener("click", function () {
 
                if (!document.fullscreenElement && !fullScreenForOthers && !document.webkitFullscreenElement && !document.msFullscreenElement && !document.mozFullscreenElement) { // edited by laam 20170317
                    if (video.requestFullscreen) {
                        video.requestFullscreen();
                    } else if (video.msRequestFullscreen) {
                        video.msRequestFullscreen(); // IE
                    } else if (video.webkitRequestFullscreen) {
                        video.webkitRequestFullscreen(); // Chrome and Safari
                    } else if (video.mozRequestFullScreen) {
                        video.mozRequestFullScreen(); // Firefox, added by laam 20170317
                    } else {
                        if (isIpad) {
                            video.webkitEnterFullscreen();
                        } else {

                            if (isShowreel) {
                                requestFullScreenForShowReel(video, playButton, progressBar, progressSeekBar, timeseekBar, progressSeekDiv, fullScreenPlayButton, muteButton, volumebar, timeShowBar, fullScreeButton, volumediv);
                            }
                            requestfullSCreenForOthers(video);
                            justifyTheControlBar(controlBarContainer, playButton, progressBar, progressSeekBar, timeseekBar, progressSeekDiv, fullScreenPlayButton, muteButton, volumebar, timeShowBar, fullScreenBuList[i], volumediv, video);

                        }
                    }
                } else {
                    if (document.cancelFullScreen) {
                        document.cancelFullScreen();
                        recoverTheControlBar(controlBarContainer, playButton, progressBar, progressSeekBar, timeseekBar, progressSeekDiv, fullScreenPlayButton, muteButton, volumebar, timeShowBar, fullScreenBuList[i], volumediv);
                    } else if (document.msExitFullscreen) {
                        document.msExitFullscreen();
                        recoverTheControlBar(controlBarContainer, playButton, progressBar, progressSeekBar, timeseekBar, progressSeekDiv, fullScreenPlayButton, muteButton, volumebar, timeShowBar, fullScreenBuList[i], volumediv);
                    } else if (document.webkitCancelFullScreen) {
                        document.webkitCancelFullScreen();
                        recoverTheControlBar(controlBarContainer, playButton, progressBar, progressSeekBar, timeseekBar, progressSeekDiv, fullScreenPlayButton, muteButton, volumebar, timeShowBar, fullScreenBuList[i], volumediv);
                    } else if (document.mozCancelFullScreen) {//added by laam 20170317
                        document.mozCancelFullScreen();
                        recoverTheControlBar(controlBarContainer, playButton, progressBar, progressSeekBar, timeseekBar, progressSeekDiv, fullScreenPlayButton, muteButton, volumebar, timeShowBar, fullScreenBuList[i], volumediv);
                    } else {//
                        recoverTheScreenForOhters(currentVideo);
                        recoverTheControlBar(controlBarContainer, playButton, progressBar, progressSeekBar, timeseekBar, progressSeekDiv, fullScreenPlayButton, muteButton, volumebar, timeShowBar, fullScreeButton, volumediv);
                        if (isShowreel) {
                            recoverFullScreenForShowReel(video, playButton, progressBar, progressSeekBar, timeseekBar, progressSeekDiv, fullScreenPlayButton, muteButton, volumebar, timeShowBar, fullScreeButton, volumediv);
                        }
                    }
                }
            });
        };

        for (var i = 0; i < fullScreenBuList.length; i++) {
            _loop7(i);
        }
    }

    //////////////////////full screen functions///////////////////
    function recoverTheScreenForOhters(video) {

        video.parentNode.style.width = "100%";
        video.parentNode.style.height = "auto";
        $(video).removeClass("video-control__embed-video-fs");
        document.body.style.overflow = 'auto';
        fullScreenForOthers = false;
    }

    function requestfullSCreenForOthers(video) {

        video.parentNode.style.width = window.screen.width + "px";
        video.parentNode.style.height = window.screen.height + "px";

        $(video).addClass("video-control__embed-video-fs");
        document.body.style.overflow = 'hidden';
        fullScreenForOthers = true;
    }

    function requestFullScreenForShowReel(video, playButton, progressBar, progressSeekBar, timeseekBar, progressSeekDiv, fullScreenPlayButton, muteButton, volumebar, timeShowBar, fullScreeButton, volumediv) {
        $(playButton).removeClass("video-control__showreel-middle-button");
        $(progressBar).removeClass("video-control__showreel-progressbar");
        $(timeseekBar).removeClass("video-control__showreel-progressbar-time");

        $(fullScreenPlayButton).removeClass("video-control__showreel-play-pause-button");
        $(muteButton).removeClass("video-control__showreel-mute-button");
        $(volumebar).removeClass("video-control__showreel-volumebar");
        $(timeShowBar).removeClass("video-control__showreel-timebar");
        $(fullScreeButton).removeClass("video-control__showreel-fullscreen-button");
        $(volumediv).removeClass("video-control__showreel-volumediv");

        var modalDialog = $(video).parents(".modal-dialog")[0];
        var header = getElementFromParentNode(modalDialog, "modal-header");
        $(modalDialog).addClass("modal-dialog-fs");

        modalDialog.parentNode.style.width = window.screen.width + "px";
        modalDialog.parentNode.style.height = window.screen.height + "px";

        video.style.width = "100%";
        header.style.display = "none";
    }

    function recoverFullScreenForShowReel(video, playButton, progressBar, progressSeekBar, timeseekBar, progressSeekDiv, fullScreenPlayButton, muteButton, volumebar, timeShowBar, fullScreeButton, volumediv) {
        $(playButton).addClass("video-control__showreel-middle-button");
        $(progressBar).addClass("video-control__showreel-progressbar");
        $(timeseekBar).addClass("video-control__showreel-progressbar-time");

        $(fullScreenPlayButton).addClass("video-control__showreel-play-pause-button");
        $(muteButton).addClass("video-control__showreel-mute-button");
        $(volumebar).addClass("video-control__showreel-volumebar");
        $(timeShowBar).addClass("video-control__showreel-timebar");
        $(fullScreeButton).addClass("video-control__showreel-fullscreen-button");
        $(volumediv).addClass("video-control__showreel-volumediv");

        var modalDialog = $(video).parents(".modal-dialog")[0];
        var header = getElementFromParentNode(modalDialog, "modal-header");
        $(modalDialog).removeClass("modal-dialog-fs");
        modalDialog.parentNode.style.width = "auto";
        modalDialog.parentNode.style.height = "auto";

        video.style.width = "80%";
        header.style.display = "block";
    }
    function recoverTheControlBar(controlBarContainer, playButton, progressBar, progressSeekBar, timeseekBar, progressSeekDiv, fullScreenPlayButton, muteButton, volumebar, timeShowBar, fullScreeButton, volumediv) {
        $(controlBarContainer).removeClass("video-control__barcontainer-fs");
        $(playButton).removeClass("video-control__play-pause-button-fs");

        $(progressBar).removeClass("video-control__progressbar-fs");
        progressSeekBar.style.top = "25px";
        $(timeseekBar).addClass("video-control__progressbar-time-fs");
        $(progressSeekDiv).removeClass("video-control__progressbar-seekdiv-fs");
        $(fullScreenPlayButton).removeClass("video-control__fullscreen-play-pause-button-fs");
        $(muteButton).removeClass("video-control__mute-button-fs");
        $(volumebar).removeClass("video-control__volumebar-fs");
        $(volumediv).removeClass("video-control__volumebar-fs-ie19");
        $(timeShowBar).removeClass("video-control__timebar-fs");
        $(fullScreeButton).removeClass("video-control__fullscreen-button-fs");
        if (detectIE()) {
            progressSeekBar.style.top = "7px";
        }
        if (userAgent.indexOf("Firefox") > -1) {
            progressSeekBar.style.top = "17px";
        }
        if (userAgent.indexOf("MSIE 9.0") > 0) {
            //volumediv.style.display="none";
            $(volumediv).removeClass("video-control__volumediv-fs");
            controlBarContainer.style.background = "transparent";
            controlBarContainer.style.opacity = "1";
        }
        if (isIE10) {
            $(volumebar).removeClass("video-control__volumebar-fs-ie10");
        }
    }

    function justifyTheControlBar(controlBarContainer, playButton, progressBar, progressSeekBar, timeseekBar, progressSeekDiv, fullScreenPlayButton, muteButton, volumebar, timeShowBar, fullScreeButton, volumediv, video) {
        currentVideo = video;
        $(controlBarContainer).addClass("video-control__barcontainer-fs");
        $(playButton).addClass("video-control__play-pause-button-fs");
        $(progressBar).addClass("video-control__progressbar-fs");
        $(progressSeekDiv).addClass("video-control__progressbar-seekdiv-fs");

        progressSeekBar.style.top = "0";
        $(timeseekBar).addClass("video-control__progressbar-time-fs");
        $(fullScreenPlayButton).addClass("video-control__fullscreen-play-pause-button-fs");
        $(muteButton).addClass("video-control__mute-button-fs");

        $(volumebar).addClass("video-control__volumebar-fs");

        if (isIE9) {
            progressBar.style.bottom = "0";
            $(volumebar).removeClass("video-control__volumebar-fs");
            $(volumediv).addClass("video-control__volumediv-fs");
            controlBarContainer.style.background = "black";
            controlBarContainer.style.opacity = "0.7";
        }
        if (isIE10) {
            $(volumebar).addClass("video-control__volumebar-fs-ie10");
        }
        if (isIpad) {
            $(volumebar).removeClass("video-control__volumebar-fs");
            controlBarContainer.style.zIndex = "auto";
        }

        $(timeShowBar).addClass("video-control__timebar-fs");
        $(fullScreeButton).addClass("video-control__fullscreen-button-fs");
    }

    ////////// private function ///////////////

    function toggleControls(video) {
        if (video.hasAttribute("controls")) {
            video.removeAttribute("controls");
        } else {
            video.setAttribute("controls", "controls");
        }
    }

    function formatTime(intVal) {
        if (isNaN(intVal)) {
            return "00";
        }
        if (intVal < 10) {
            return "0" + intVal;
        } else {
            return intVal;
        }
    }

    function changePlayButtonPicture(video, playButton, fullScreenPlayButton) {
        if (video.paused) {
            playButton.style.backgroundImage = "url('" + VideoImages.PLAY + "')";
            fullScreenPlayButton.style.backgroundImage = "url('" + VideoImages.FULLSCREEN_PLAY + "')";
            fullScreenPlayButton.style.backgroundSize = "90%";
        } else {
            playButton.style.backgroundImage = "url('" + VideoImages.PAUSE + "')";
            fullScreenPlayButton.style.backgroundImage = "url('" + VideoImages.FULLSCREEN_PAUSE + "')";
            fullScreenPlayButton.style.backgroundSize = "90%";
        }
    }

    function videoPlayPauseWhileChangeElementDispay(video, playButton, fullScreenPlayButton) {
        if (video.paused == true) {
            /*
            if (video.requestFullscreen) {
                video.requestFullscreen();
            } else if (video.msRequestFullscreen) {
                video.msRequestFullscreen(); // IE
            } else if (video.webkitRequestFullscreen) {
                video.webkitRequestFullscreen(); // Chrome and Safari
            } else if (video.mozRequestFullScreen) {
                video.mozRequestFullScreen(); // Firefox, added by laam 20170317
            } else {
                if (isIpad) {
                    video.webkitEnterFullscreen();
                }
            } 
            */
            video.play();
           
            if (isAndroid && video.webkitRequestFullscreen) { // fullscreen
                video.webkitRequestFullscreen();
            }
			
            playButton.style.backgroundImage = "url('" + VideoImages.PAUSE + "')";
            fullScreenPlayButton.style.backgroundImage = "url('" + VideoImages.FULLSCREEN_PAUSE + "')";
            fullScreenPlayButton.style.backgroundSize = "90%";
        } 		
		else {
            video.pause();
            playButton.style.backgroundImage = "url('" + VideoImages.PLAY + "')";
            fullScreenPlayButton.style.backgroundImage = "url('" + VideoImages.FULLSCREEN_PLAY + "')";
            fullScreenPlayButton.style.backgroundSize = "90%";
        }
    }

    function getElementFromParentNode(parentNode, className) {
        var element = void 0;
        className = '.' + className;
        element = $(parentNode).find(className)[0];
        return element;
    }
}(jQuery);
//# sourceMappingURL=videocontrol.js.map

'use strict';

(function () {
    'use strict';

    var ifHasVideo = $('.video-control').length > 0,
        isShowreel = void 0;
    if (!ifHasVideo) {
        return;
    }
    isShowreel = $('.video-control__showreelcontainer').length > 0, $.fn.initVideoControl(isShowreel);
})();
//# sourceMappingURL=initVideoControl.js.map

function addOrRemoveEllipse() {
    var $listPanelItems = $(".circulars").find(".list-panel__item").find("a");
    var $newItems = $('.news-releases__section--content-brife');
    
    hkexApp.utils.addEllipse($listPanelItems, 2);
    hkexApp.utils.addEllipse($newItems, 3);
}
var isAndroid = hkexApp.utils.isAndroidMobile();
function videoPlay(element) {
    var video = $(element).find("video")[0];
    if (video) {
        video.play();
        if (isAndroid && video.webkitRequestFullscreen) {
            video.webkitRequestFullscreen();
        }
    }
}

function videoPause(element) {
    var video = $(element).find("video")[0];
    if (video) {
        video.pause();
    }
}
'use strict';
//# sourceMappingURL=addEllipseForVideoComponents.js.map

(function() {
    var DesktopAndTabletBP = 1023;
    var TabletAndMobileBP = 702;


    $(".box_list").on('change', function (e) {
        /*var boxNumber = $(this).attr('id').replace('box', '');
        alert(boxNumber);
        
        $(".box").removeClass('box_active');
        $(this).addClass('box_active');
        
        var target = $(this).attr('data-target');
        $(".box_content").removeClass('in');
        // $("#boxcontent" + boxNumber).addClass('in');
        $(target).addClass('in');
        */
        var boxNumber = $('div.box.box_active', this).attr('id').replace('box', '');
        $('.LLCI .droplist-item').attr('data-select-target', false);
        $("#LLCIBox" + boxNumber).attr('data-select-target', true);
        var updateTarget = $("#LLCIBox" + boxNumber).text(); //document.getElementById("LLCIBox" + boxNumber).innerText;
        $('.LLCI .combobox-field').attr('data-value', 'LLCIBox' + boxNumber).html(updateTarget);
        //alert("#boxcontent" + boxNumber);
    });
    $('.LLCI .combobox-group .combobox-field').on('change', function(e) {
        var selectedIndex = $(this).attr('data-value').replace('LLCIBox', '');
        var tabTarget = '#box' + selectedIndex;
        $(tabTarget, $('.LLCI .box_list')).trigger('click');
    });

    $(window).on('resize', function() {
        $(".LLCI .combobox-group").each(function () {
            this.hkexComboBox._hideList();
        });
    });
    /*var checkTablet = 1;
    $(window).on('resize', function () {
        alert(checkTablet);
        if (window.innerWidth > TabletAndMobileBP && window.innerWidth <= DesktopAndTabletBP){                                                    
            if (checkTablet == 1) { 
            $(".box_list").scrollTabs();
            checkTablet++;                                   
            }
        }
        else {
            checkTablet = 1;
        }
    });
    $(window).trigger('resize');*/
})();

/*(function() {
    var TabletAndMobileBP = 702;
    var boxAreaLink = $('.attachment a');
    var boxAreaDescription = $('.box_content_area-right .description span')
    var DescriptionLineNum = 2;
    var lineNum = 1;

    var applyDescriptionEllipse = function applyDescriptionEllipse() {
        hkexApp.utils.addEllipse(boxAreaDescription, DescriptionLineNum);
    };

    $(window).on('resize', function() {
        if (window.innerWidth > TabletAndMobileBP) {
            lineNum = 1;
            DescriptionLineNum = 2;
        } else {
            lineNum = 2;
            DescriptionLineNum = 3;
        }
    });

    $(".font-sizes__link").on('click', function() {
        if (window.innerWidth > TabletAndMobileBP) {
            lineNum = 1;
            DescriptionLineNum = 2;
        } else {
            lineNum = 2;
            DescriptionLineNum = 3;
        }
    });

    $(".m-topbar__link").on('click', function() {
        if (window.innerWidth > TabletAndMobileBP) {
            lineNum = 1;
            DescriptionLineNum = 2;
        } else {
            lineNum = 2;
            DescriptionLineNum = 3;
        }
    });

    var applyEllipse = function applyEllipse() {
        hkexApp.utils.addEllipse(boxAreaLink, lineNum);
    };

    $(document).ready(function () {
        applyEllipse();
        applyDescriptionEllipse();
    });

    $(window).on('resize', function() {
        applyEllipse();
        applyDescriptionEllipse();
    });

    $(".font-sizes__link").on('click', function() {
        applyEllipse();
        applyDescriptionEllipse();
    });

    $(".m-topbar__link").on('click', function() {
        applyEllipse();
        applyDescriptionEllipse();
    });

    $(window).trigger('resize');
})();*/
(function() {
    var countBox = function countBox() {
        // var totalHeight = $(".box_content").outerHeight();
        var totalHeight = $(".boxcontent-wrap").outerHeight();
        var boxCount = $(".box_area").length;
        var boxHeight = totalHeight / boxCount;
        $(".box_area").css('height', boxHeight);
        /*
        $(".box_area").each(function() {
            $(this).css('height', boxHeight);
        });
        */
    };

    /*$(".font-sizes__link").on('click', function() {
        countBox();
        $(".LLCI .attachment a").each(function () {
            if ($(this).innerHeight() >= 40) {
                $(this).addClass('more_than_line');
            }
            else if ($(this).innerHeight() < 40) {
                if ($(this).hasClass('more_than_line')) {
                    $(this).removeClass('more_than_line');
                }
            }
        })
    });

    $(".m-topbar__link").on('click', function () {
        $(".LLCI .attachment a").each(function () {
            if ($(this).innerHeight() >= 40) {
                $(this).addClass('more_than_line');
            }
            else if ($(this).innerHeight() < 40) {
                if ($(this).hasClass('more_than_line')) {
                    $(this).removeClass('more_than_line');
                }
            }
        })
    });

    $(document).ready(function () {
        $(".LLCI .attachment a").each(function () {
            if ($(this).innerHeight() >= 40) {
                $(this).addClass('more_than_line');
            }
            else if ($(this).innerHeight() < 40) {
                if ($(this).hasClass('more_than_line')) {
                    $(this).removeClass('more_than_line');
                }
            }
        })
    });

    $(window).on('resize', function() {
        countBox();
        $(".LLCI .attachment a").each(function () {
            if ($(this).innerHeight() >= 40) {
                $(this).addClass('more_than_line');
            }
            else if ($(this).innerHeight() < 40) {
                if ($(this).hasClass('more_than_line')) {
                    $(this).removeClass('more_than_line');
                }
            }
        })
    });*/

    $(window).on('load', function () {
        if ($('.box_list').outerHeight() < $(".boxcontent-wrap").outerHeight()) {
            countBox();
        }
        $(".box_list").each(function() {
            this.itemTag = 'div.box';
            var o = {
                tab_active_class: 'box_active',
                left_arrow_img: '/ncms/images/home-left-arrow.svg',
                right_arrow_img: '/ncms/images/home-right-arrow.svg',
                use_target: true
            };
            var data = $(this).data();
            if (data && data.leftArrowImg) {
                o.left_arrow_img = data.leftArrowImg;
            }
            if (data && data.rightArrowImg) {
                o.right_arrow_img = data.rightArrowImg;
            }
            $(this).scrollTabs(o);
        });
        /*$(".box_list").on('change', function () {           
            $(window).trigger('resize');
        });        */
    });
})();

(function ($, hkexApp) {
    // LANDING PAGE
    (function () {
        var $container = $('.director-list-container'),
            $searchByContainer = $('.search-by', $container),
            $inputBox = $('.filter__inputGroup input', $searchByContainer);

        function handleRadioChange(e) {
            updateInputBox($(this).attr('id'));
        }

        function updateInputBox(id) {
            $inputBox.hide().closest('.autocomplete-group').hide()
                .end().filter('[id^=' + id + ']').show()
                .closest('.autocomplete-group').show();
        }
        // $inputBox.HkexAutoComplete();
        $searchByContainer.on('change', '.radio-custom :input', handleRadioChange);
        $('.radio-custom :input:checked', $searchByContainer).change();
    })();

    // SEARCH RESULT PAGE
    (function () {
        var $resultContainer = $('.director-search-result-container'),
            $resultSearchBar = $('.search-bar.director-search-result-search-bar'),
            $comboBox = $('#directorSearchBy .combobox-field', $resultSearchBar),
            $inputBox = $('.filter__inputGroup .filter__container-input.searchValue .form-input-text', $resultSearchBar);
        $comboBox.on('change', function (e) {
            var id = $comboBox.attr('data-value');
            $inputBox.hide().filter('[id^=' + id + ']').show();
        });
        $('table.table-mobile-list', $resultContainer).MobileTableList();
    })();
})(jQuery, window.hkexApp);

(function ($, hkexApp) {
    $('#tier1-select .combobox-field').on('change.tier1', function (e) {
        var value = $(e.target).attr('data-value');
        var reminderClass = '.' + value + '-reminder';
        $('.filter__container-title-search .reminder.date-reminder')
            .children().addClass('reminder-hidden')
            .filter(reminderClass).removeClass('reminder-hidden');

    });

    $.fn.CloneTableToMobileList = function ($target) {
        return this.each(function () {
            $target.empty();
            var records = [];
            var columns = [];
            var that = this;
            var cloneAll = $(that).attr("data-clone-events") != "false";
            $(this).find('thead tr').find('td,th').each(function () {
                var cloned = $(this).clone();
                cloned.find('.header-note,.hideHeadline').remove();
                var headerText = [cloned.text()];
                if ($(this).not('[data-no-colon="true"]')) {
                    headerText.push(":");
                }
                columns.push([$(this).attr('data-column-class'), headerText.join('')]);
                cloned.remove();
                cloned = null;
            });
            $(this).find('tbody tr').each(function () {
                var r = {};
                $(this).find('td').each(function (i, e) {
                    r[i] = $(e).contents().clone(cloneAll);
                });
                records.push(r);
            });
            $.each(records, function (i, r) {
                var dl = $('<div/>').addClass('result-record');
                $.each(columns, function (i, col) {
                    var className = col[0];
                    var c = col[1];
                    var rt = $('<div/>').addClass("result-record-row").addClass(className);
                    var dt = $('<div/>').html(c).addClass('result-record-header');
                    var dd = $('<div/>').append(r[i]).addClass('result-record-value');
                    rt.append(dt);
                    rt.append(dd);
                    dl.append(rt);
                });
                $target.append(dl);
            });
            $(this).trigger("mobileReady");
        });
    }

    $.fn.SearchResultToolbar = function (opts) {
        var options = $.extend({}, opts || {});
        return this.each(function () {
            var $this = $(this);
            function toggleHeadline() {
                $(this).toggleClass('showing');
                var action = $('body').hasClass('body-hidden') ? 'removeClass' : 'addClass';
                var headlineSelector = options.headlineSelector;
                if (typeof options.headlineSelector == 'function') {
                    headlineSelector = options.headlineSelector.call();
                }
                var ViewDoc = $('body').hasClass("body-hidden");
                var eventName = "headlineHide";
                if (ViewDoc == true) {
                    //$('.View-Document-on-Display').removeClass("hidden-headline");
                    $('body').removeClass("body-hidden");
                    eventName = "headlineShow";
                }
                else {
                    //$('.View-Document-on-Display').addClass("hidden-headline");
                    $('body').addClass("body-hidden");
                }
                var ev = new $.Event(eventName);
                $('body').trigger(ev);
                //$(headlineSelector)[action]('body-hidden');
            }
            function sortResult(e) {
                e.preventDefault();
                var sortBy = $(this).data('sortBy');
                var sortDir = $(this).data('sortDir');
                var sort = [[sortBy, sortDir]];
                $(options.tableSelector).trigger('sorton', [sort]);
            }
            function updateMobileSort(e) {
                var table = this,
                    config = this.config;
                if (!config) {
                    return;
                }
                var sortList = config.sortList;
                if (sortList.length > 0) {
                    var sortVal = sortList[0];
                    var sortOptions = $('.popover__list-item a', $this).filter('[data-sort-by=' + sortVal[0] + '][data-sort-dir=' + sortVal[1] + ']');
                    if (sortOptions.length === 1) {
                        sortOptions.parent().siblings('.popover__list-item').removeClass('sorting-selected');
                        sortOptions.parent().addClass('sorting-selected');
                        if (sortOptions.find('.sort-by-field').length > 0) {
                            var field = sortOptions.find('.sort-by-field').text();
                            sortOptions.parents('.page-list-mobile-toolbar')
                                .find('.sort__dropdown .current-sort-by')
                                .text(field);
                        }
                    }
                }
            }
            $('.hideHeadline .hideShow', $this).on('click.searchToolbar', toggleHeadline);
            $('.popover__list-item a', $this).on('click.searchToolbar', sortResult);
            $(options.tableSelector).on('sortEnd.searchToolbar', updateMobileSort);
            $(options.tableSelector).trigger('sortEnd');
        });
    };

    $.fn.CloneableTable = function (opts) {
        var options = $.extend({}, opts || {});
        return this.each(function () {
            var me = $(this);
            if (me.hasClass('table-cloneable')) {
                return;
            }
            me.addClass('table-cloneable');
            var $target = $(options.mobileTarget);
            function copyHtmlToMobile() {
                me.CloneTableToMobileList($target);
            }
            function registerSortEvent() {
                me.on('sortEnd.searchToolbar', function () {
                    copyHtmlToMobile();
                });
            }
            copyHtmlToMobile();
            registerSortEvent();
        });
    };

    // Title Search
    /*
    $('.title-search-result table.table').filter(function () {
        return $(this).closest('.LLCI-table-container').length === 0;
    }).CloneableTable({
        mobileTarget: '.title-search-result-mobile'
    });
    $('.title-search-result-toolbar:not(.LLCI-toolbar)').SearchResultToolbar({
        tableSelector: '.title-search-result table.table',
        headlineSelector: '.title-search-result td .headline,.title-search-result .document-details .headline'
    });
    $('.titlesearch-header-section .title-search-search-bar #tier1-select .combobox-field').on('change', function () {
        var value = $(this).attr('data-value');
        var $input = $(this).closest('.form-input-text');
        $input.children('.reminder').children('span').addClass('reminder-hidden')
            .filter('.' + value + '-reminder').removeClass('reminder-hidden');
    });
    */

    // LLCI only
    /*
    $('.LLCI-table-container').each(function () {
        var _container = $(this);
        $('.title-search-result table.table', _container).CloneableTable({
            mobileTarget: $('.title-search-result-mobile', _container)[0]
        });
        $('.title-search-result-toolbar', _container).SearchResultToolbar({
            tableSelector: $('.title-search-result table.table', _container),
            headlineSelector: function () {
                return $('.title-search-result td .headline,.title-search-result .document-details .headline', _container);
            }
        });
    });
    */

    // CCASS
    $('.ccass-search-container table.ccass-search-details-table').CloneableTable({
        mobileTarget: '.title-search-result-mobile'
    });
    $('.title-search-result-mobile-toolbar').SearchResultToolbar({
        tableSelector: '.ccass-search-container table.ccass-search-details-table',
        headlineSelector: '.title-search-result td .headline,.title-search-result .document-details .headline'
    });

    // AP & PHIP
    /*
    $('#panel-active .page-list-mobile-toolbar', $pageContainer).SearchResultToolbar({
        tableSelector: '#panel-active table.ap-phip-details-table'
    });
    $('#panel-gem-active .page-list-mobile-toolbar', $pageContainer).SearchResultToolbar({
        tableSelector: '#panel-gem-active table.ap-phip-details-table'
    });
    */

    // Generic
    var $pageContainer = $('.ap-phip-content');
    $('table.table-sort[data-mobile-toolbar]', $pageContainer).each(function () {
        var toolbar = $(this).data('mobileToolbar');
        if (toolbar) {
            var $toolbar = $(toolbar).SearchResultToolbar({
                tableSelector: this
            });
        }
    });
})(jQuery, window.hkexApp);

$(window).on('resize', function () {
    if (window.innerWidth < 702) {
        $(".result-toolbar").removeClass("title-search-result-toolbar");
        $(".result-toolbar").addClass("title-search-result-mobile-toolbar");
    } else {
        $(".result-toolbar").removeClass("title-search-result-mobile-toolbar");
        $(".result-toolbar").addClass("title-search-result-toolbar");
    }
});
$('.searchStockCodeName .form-input-text .autocomplete-group .autocomplete-group__input-box .autocomplete-group__input-box').addClass('clear__border');
$('.searchStockCodeName .autocomplete-group .autocomplete-group__input-box').addClass("clear__input-box");


    (function ($) {
        //$.fn.initStickyHeader();
        target1 = $('.new-listing-announcemnts .result-record-header');
        target1.each(function(){
           

            curTxt = $(this).text();
            if(curTxt>=18){
                $(this).text(curTxt.length = 18 ? curTxt.substring(0,18)+'.' : curTxt);
            }
            var checknulltext =$(this).parent().find('.result-record-value').text();
            if(checknulltext.length=="0"){
                console.log("null1");
                $(this).parent().find('.result-record-header').addClass("mobile-hidden");
            }
        })
         $(' .NLI-table-container table.table.table-scroll').scrollableTable({
            //tableWidth: $(window).width()*0.615
        });
         /*$('table.table.table-scroll').scrollableTable({
            tableWidth: 1000
        });*/
        $('.LLCI_scroll_tabs').on('change', function () {
            $('table.table.table-scroll').scrollableTable('refresh');
        });
    })(jQuery);
    target2 = $('.Prospectuses')
    target2.each(function () {
        var mobliePhead = $(this).find('.result-record-header').text();
        var desktopPhead = $('.prospectuses-th .tablesorter-header-inner').text();
        var checknulltext =$(this).find('.result-record-value').text();
        
        if (mobliePhead != desktopPhead) {
            $(this).find('.result-record-header').text(desktopPhead);
        }
        if(checknulltext.length=="0"){
            console.log("null2");
            $(this).find('.result-record-header').addClass("mobile-hidden");
        }
    });
    target3 = $('.allotments-results')
    target3.each(function () {
        var moblieAhead = $(this).find('.result-record-header').text();;
        var desktopAhead = $('.allotment-results .tablesorter-header-inner').text();
        var checknulltext =$(this).find('.result-record-value').text();
        if (moblieAhead != desktopAhead) {
            $(this).find('.result-record-header').text(desktopAhead);
        }
        if(checknulltext.length=="0"){
            console.log("null3");
            $(this).find('.result-record-header').addClass("mobile-hidden");
        }
    });
   
function readCookie(name) {
   var nameEQ = name + "=";
   var ca = document.cookie.split(';');
   for (var i = 0; i < ca.length; i++) {
      var c = ca[i];
      while (c.charAt(0) == ' ') c = c.substring(1, c.length);
      if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);
   }
   return null;
}

function ConsentVerification(keyvalue) {

   if (keyvalue != null && cookiesString != "") {

      var accept = keyvalue + ":1";
      var cookiesString = getParmeter("groups");
      if (cookiesString != null && cookiesString != "") {
         return cookiesString.indexOf(accept) > -1;
      }
   }
   return false;
}

function getParmeter(variable) {

   let vars = decodeURIComponent(readCookie("OptanonConsent")).split('&');

   for (let i = 0; i < vars.length; i++) {
      let pair = vars[i].split('=');
      if (pair[0] === variable) {
         return pair[1];
      }
   }
   return '';
}

function OptanonWrapper() {


   var ca = document.cookie.split(';');
   for (var i = 0; i < ca.length; i++) {
      var nameEQ = ca[i].split('=');
      var cookiesJudge = nameEQ[0].indexOf("OptanonAlertBoxClosed") > -1;
      if (cookiesJudge == true) {
         var otsdk = document.getElementById("ot-sdk-btn");
         otsdk.parentNode.removeChild(otsdk);
      }
   }
}

const perfConsentCode = "C0002";
const funConsentCode = "C0003";

function includeCookiesJs(jsFilePath, objbool) {
   var js = document.createElement("script");

   js.type = "text/javascript";
   js.src = jsFilePath;
   if (objbool == false) {
      js.charset = 'UTF-8';
      js.setAttribute("data-document-language", true);
      js.setAttribute("data-domain-script", OT_OPTANONID);
   }
   js.async = false;
   document.getElementsByTagName("head")[0].appendChild(js);
}

if (checkUseOneTrust()) {
   includeCookiesJs("https://" + OT_DOMAIN + "/consent/" + OT_OPTANONID + "/OtAutoBlock.js", true);
   includeCookiesJs("https://" + OT_DOMAIN + "/scripttemplates/otSDKStub.js", false);
   document.write("<button id='ot-sdk-btn' class='ot-sdk-show-settings'>Cookie Settings</button>");
}

var webSetLang = window.parent.location.href.toLowerCase().indexOf('lang=');
if (webSetLang != "" && webSetLang != null) {
   var webSetLang1 = window.parent.location.href.toLowerCase();
   if (webSetLang != -1) {

      if (webSetLang1.indexOf('lang=zh') != -1 || webSetLang1.indexOf('lang=c') != -1 || webSetLang1.indexOf('lang=sc') != -1)
         $("html").attr("lang", "zh-HK");
      else
         $("html").attr("lang", "en");

   } else {
      if (webSetLang1.indexOf('_sc') != -1 || webSetLang1.indexOf('_c') != -1)
         $("html").attr("lang", "zh-HK");
      else
         $("html").attr("lang", "en");
   }
}
if (window.parent.location.href.toLowerCase().indexOf("/sc.hkexnews.hk/") != -1) {
   $("html").attr("lang", "zh-CN");
}